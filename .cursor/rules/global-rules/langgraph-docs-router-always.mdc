---
description:
globs:
alwaysApply: true
---
# LangGraph Documentation Router

## Critical Rules

- For ANY question containing "LangGraph", "langgraph", or related concepts:
  1. ALWAYS call list_doc_sources tool first to retrieve llms.txt
  2. Call fetch_docs to read the llms.txt content
  3. Analyze and reflect on:
     - All URLs listed in llms.txt
     - The specific user question context and requirements
  4. Call fetch_docs again ONLY for URLs relevant to the user's question
  5. Synthesize information from fetched docs to provide accurate answers
  6. Include relevant code examples when appropriate
  7. Cite specific documentation sources used in the response

- NEVER attempt to answer LangGraph questions without consulting the documentation
- ALWAYS provide source attribution for any technical claims about LangGraph
- If documentation seems insufficient, acknowledge limitations and suggest alternatives

## Examples

<example>
User: "How do I create a simple LangGraph chain?"

Assistant's Process:
1. Called list_doc_sources -> retrieved llms.txt
2. Called fetch_docs -> read llms.txt content
3. Analyzed URLs and identified relevant ones about chain creation
4. Called fetch_docs on those specific URLs
5. Response: "Based on the LangGraph documentation at [source], here's how to create a simple chain..." üîó
</example>

<example type="invalid">
User: "Can you explain LangGraph states?"

Assistant's Process:
‚ùå Immediately answers without checking docs
‚ùå Makes assumptions about LangGraph functionality
‚ùå Provides generic information without sources
‚ùå "LangGraph states are probably similar to other graph states..."
</example>
