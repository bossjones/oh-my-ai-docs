Document 1: https://discordpy.readthedocs.io/en/stable/index.html
--------------------------------------------------------------------------------
Welcome to discord.py

discord.py
github
discord
help_center
search
close

search

View Documentation For

discord
discord.ext.commands
discord.ext.tasks

search

settings

menu

settings

search

Table of Contents

Welcome to discord.py
Getting started
Getting help
Extensions
Manuals
Meta

Welcome to discord.py¶
discord.py is a modern, easy to use, feature-rich, and async ready API wrapper
for Discord.
Features:

Modern Pythonic API using async/await syntax
Sane rate limit handling that prevents 429s
Command extension to aid with bot creation
Easy to use with an object oriented design
Optimised for both speed and memory

Getting started¶
Is this your first time using the library? This is the place to get started!

First steps: Introduction | Quickstart | Setting Up Logging
Working with Discord: Creating a Bot Account | A Primer to Gateway Intents
Examples: Many examples are available in the repository.

Getting help¶
If you're having trouble with something, these resources might help.

Try the Frequently Asked Questions first, it's got answers to all common questions.
Ask us and hang out with us in our Discord server.
If you're looking for something specific, try the index or searching.
Report bugs in the issue tracker.
Ask in our GitHub discussions page.

Extensions¶
These extensions help you during development when it comes to common tasks.

discord.ext.commands – Bot commands framework
discord.ext.tasks – asyncio.Task helpers

Manuals¶
These pages go into great detail about everything the API can do.

API Reference
Interactions API Reference
discord.ext.commands API Reference
discord.ext.tasks API Reference

Meta¶
If you're looking for something related to the project itself, it's here.

Changelog
Version Guarantees
Migrating to v2.0
Migrating to v1.0

        © Copyright 2015-present, Rapptz.
      Created using Sphinx 4.4.0.


close

Settings
Font

Use a serif font:


Theme

          Automatic


          Light


          Dark


arrow_upwardto top

================================================================================

Document 2: https://discordpy.readthedocs.io/en/stable/intro.html
--------------------------------------------------------------------------------
Introduction

discord.py
github
discord
help_center
search
close

search

View Documentation For

discord
discord.ext.commands
discord.ext.tasks

search

settings

menu

settings

search

Table of Contents

Introduction
Prerequisites
Installing
Virtual Environments

Basic Concepts

Introduction¶
This is the documentation for discord.py, a library for Python to aid
in creating applications that utilise the Discord API.

Prerequisites¶
discord.py works with Python 3.8 or higher. Support for earlier versions of Python
is not provided. Python 2.7 or lower is not supported. Python 3.7 or lower is not supported.

Installing¶
You can get the library directly from PyPI:
python3 -m pip install -U discord.py

If you are using Windows, then the following should be used instead:
py -3 -m pip install -U discord.py

To get voice support, you should use discord.py[voice] instead of discord.py, e.g.
python3 -m pip install -U discord.py[voice]

On Linux environments, installing voice requires getting the following dependencies:

libffi
libnacl
python3-dev

For a Debian-based system, the following command will get these dependencies:
$ apt install libffi-dev libnacl-dev python3-dev

Remember to check your permissions!

Virtual Environments¶
Sometimes you want to keep libraries from polluting system installs or use a different version of
libraries than the ones installed on the system. You might also not have permissions to install libraries system-wide.
For this purpose, the standard library as of Python 3.3 comes with a concept called "Virtual Environment"s to
help maintain these separate versions.
A more in-depth tutorial is found on Virtual Environments and Packages.
However, for the quick and dirty:

Go to your project's working directory:

$ cd your-bot-source
$ python3 -m venv bot-env

Activate the virtual environment:

$ source bot-env/bin/activate

On Windows you activate it with:
$ bot-env\Scripts\activate.bat

Use pip like usual:

$ pip install -U discord.py

Congratulations. You now have a virtual environment all set up.

Note
Scripts executed with py -3 will ignore any currently active virtual
environment, as the -3 specifies a global scope.

Basic Concepts¶
discord.py revolves around the concept of events.
An event is something you listen to and then respond to. For example, when a message
happens, you will receive an event about it that you can respond to.
A quick example to showcase how events work:
# This example requires the 'message_content' intent.

import discord

class MyClient(discord.Client):
    async def on_ready(self):
        print(f'Logged on as {self.user}!')

    async def on_message(self, message):
        print(f'Message from {message.author}: {message.content}')

intents = discord.Intents.default()
intents.message_content = True

client = MyClient(intents=intents)
client.run('my token goes here')

        © Copyright 2015-present, Rapptz.
      Created using Sphinx 4.4.0.


close

Settings
Font

Use a serif font:


Theme

          Automatic


          Light


          Dark


arrow_upwardto top

================================================================================

Document 3: https://discordpy.readthedocs.io/en/stable/quickstart.html
--------------------------------------------------------------------------------
Quickstart

discord.py
github
discord
help_center
search
close

search

View Documentation For

discord
discord.ext.commands
discord.ext.tasks

search

settings

menu

settings

search

Table of Contents

Quickstart
A Minimal Bot

Quickstart¶
This page gives a brief introduction to the library. It assumes you have the library installed,
if you don't check the Installing portion.

A Minimal Bot¶
Let's make a bot that responds to a specific message and walk you through it.
It looks something like this:
# This example requires the 'message_content' intent.

import discord

intents = discord.Intents.default()
intents.message_content = True

client = discord.Client(intents=intents)

@client.event
async def on_ready():
    print(f'We have logged in as {client.user}')

@client.event
async def on_message(message):
    if message.author == client.user:
        return

    if message.content.startswith('$hello'):
        await message.channel.send('Hello!')

client.run('your token here')

Let's name this file example_bot.py. Make sure not to name it discord.py as that'll conflict
with the library.
There's a lot going on here, so let's walk you through it step by step.

The first line just imports the library, if this raises a ModuleNotFoundError or ImportError
then head on over to Installing section to properly install.
Next, we create an instance of a Client. This client is our connection to Discord.
We then use the Client.event() decorator to register an event. This library has many events.
Since this library is asynchronous, we do things in a "callback" style manner.
A callback is essentially a function that is called when something happens. In our case,
the on_ready() event is called when the bot has finished logging in and setting things
up and the on_message() event is called when the bot has received a message.

Since the on_message() event triggers for every message received, we have to make
sure that we ignore messages from ourselves. We do this by checking if the Message.author
is the same as the Client.user.
Afterwards, we check if the Message.content starts with '$hello'. If it does,
then we send a message in the channel it was used in with 'Hello!'. This is a basic way of
handling commands, which can be later automated with the discord.ext.commands – Bot commands framework framework.
Finally, we run the bot with our login token. If you need help getting your token or creating a bot,
look in the Creating a Bot Account section.

Now that we've made a bot, we have to run the bot. Luckily, this is simple since this is just a
Python script, we can run it directly.
On Windows:
$ py -3 example_bot.py

On other systems:
$ python3 example_bot.py

Now you can try playing around with your basic bot.

        © Copyright 2015-present, Rapptz.
      Created using Sphinx 4.4.0.


close

Settings
Font

Use a serif font:


Theme

          Automatic


          Light


          Dark


arrow_upwardto top

================================================================================

Document 4: https://discordpy.readthedocs.io/en/stable/logging.html
--------------------------------------------------------------------------------
Setting Up Logging

discord.py
github
discord
help_center
search
close

search

View Documentation For

discord
discord.ext.commands
discord.ext.tasks

search

settings

settings

search

New in version 0.6.0.

Setting Up Logging¶
discord.py logs errors and debug information via the logging python
module. In order to streamline this process, the library provides default configuration for the discord logger when using Client.run(). It is strongly recommended that the logging module is configured, as no errors or warnings will be output if it is not set up.
The default logging configuration provided by the library will print to sys.stderr using coloured output. You can configure it to send to a file instead by using one of the built-in logging.handlers, such as logging.FileHandler.
This can be done by passing it through Client.run():
import logging

handler = logging.FileHandler(filename='discord.log', encoding='utf-8', mode='w')

# Assume client refers to a discord.Client subclass...
client.run(token, log_handler=handler)

You can also disable the library's logging configuration completely by passing None:
client.run(token, log_handler=None)

Likewise, configuring the log level to logging.DEBUG is also possible:
import logging

handler = logging.FileHandler(filename='discord.log', encoding='utf-8', mode='w')

# Assume client refers to a discord.Client subclass...
client.run(token, log_handler=handler, log_level=logging.DEBUG)

This is recommended, especially at verbose levels such as DEBUG, as there are a lot of events logged and it would clog the stderr of your program.
If you want the logging configuration the library provides to affect all loggers rather than just the discord logger, you can pass root_logger=True inside Client.run():
client.run(token, log_handler=handler, root_logger=True)

If you want to setup logging using the library provided configuration without using Client.run(), you can use discord.utils.setup_logging():
import discord

discord.utils.setup_logging()

# or, for example
discord.utils.setup_logging(level=logging.INFO, root=False)

More advanced setups are possible with the logging module. The example below configures a rotating file handler that outputs DEBUG output for everything the library outputs, except for HTTP requests:
import discord
import logging
import logging.handlers

logger = logging.getLogger('discord')
logger.setLevel(logging.DEBUG)
logging.getLogger('discord.http').setLevel(logging.INFO)

handler = logging.handlers.RotatingFileHandler(
    filename='discord.log',
    encoding='utf-8',
    maxBytes=32 * 1024 * 1024,  # 32 MiB
    backupCount=5,  # Rotate through 5 files
)
dt_fmt = '%Y-%m-%d %H:%M:%S'
formatter = logging.Formatter('[{asctime}] [{levelname:<8}] {name}: {message}', dt_fmt, style='{')
handler.setFormatter(formatter)
logger.addHandler(handler)

# Assume client refers to a discord.Client subclass...
# Suppress the default configuration since we have our own
client.run(token, log_handler=None)

For more information, check the documentation and tutorial of the logging module.

Changed in version 2.0: The library now provides a default logging configuration.

        © Copyright 2015-present, Rapptz.
      Created using Sphinx 4.4.0.


close

Settings
Font

Use a serif font:


Theme

          Automatic


          Light


          Dark


arrow_upwardto top

================================================================================

Document 5: https://discordpy.readthedocs.io/en/stable/discord.html
--------------------------------------------------------------------------------
Creating a Bot Account

discord.py
github
discord
help_center
search
close

search

View Documentation For

discord
discord.ext.commands
discord.ext.tasks

search

settings

menu

settings

search

Table of Contents

Creating a Bot Account
Inviting Your Bot

Creating a Bot Account¶
In order to work with the library and the Discord API in general, we must first create a Discord Bot account.
Creating a Bot account is a pretty straightforward process.

Make sure you're logged on to the Discord website.
Navigate to the application page
Click on the "New Application" button.

Give the application a name and click "Create".

Navigate to the "Bot" tab to configure it.
Make sure that Public Bot is ticked if you want others to invite your bot.

You should also make sure that Require OAuth2 Code Grant is unchecked unless you
are developing a service that needs it. If you're unsure, then leave it unchecked.

Copy the token using the "Copy" button.

This is not the Client Secret at the General Information page.

Warning
It should be worth noting that this token is essentially your bot's
password. You should never share this with someone else. In doing so,
someone can log in to your bot and do malicious things, such as leaving
servers, ban all members inside a server, or pinging everyone maliciously.
The possibilities are endless, so do not share this token.
If you accidentally leaked your token, click the "Regenerate" button as soon
as possible. This revokes your old token and re-generates a new one.
Now you need to use the new token to login.

And that's it. You now have a bot account and you can login with that token.

Inviting Your Bot¶
So you've made a Bot User but it's not actually in any server.
If you want to invite your bot you must create an invite URL for it.

Make sure you're logged on to the Discord website.
Navigate to the application page
Click on your bot's page.
Go to the "OAuth2 > URL Generator" tab.

Tick the "bot" checkbox under "scopes".

Tick the permissions required for your bot to function under "Bot Permissions".

Please be aware of the consequences of requiring your bot to have the "Administrator" permission.
Bot owners must have 2FA enabled for certain actions and permissions when added in servers that have Server-Wide 2FA enabled. Check the 2FA support page for more information.

Now the resulting URL can be used to add your bot to a server. Copy and paste the URL into your browser, choose a server to invite the bot to, and click "Authorize".

Note
The person adding the bot needs "Manage Server" permissions to do so.

If you want to generate this URL dynamically at run-time inside your bot and using the
discord.Permissions interface, you can use discord.utils.oauth_url().

        © Copyright 2015-present, Rapptz.
      Created using Sphinx 4.4.0.


close

Settings
Font

Use a serif font:


Theme

          Automatic


          Light


          Dark


arrow_upwardto top

================================================================================

Document 6: https://discordpy.readthedocs.io/en/stable/intents.html
--------------------------------------------------------------------------------
A Primer to Gateway Intents

discord.py
github
discord
help_center
search
close

search

View Documentation For

discord
discord.ext.commands
discord.ext.tasks

search

settings

menu

settings

search

Table of Contents

A Primer to Gateway Intents
What intents are needed?
Privileged Intents
Do I need privileged intents?
Presence Intent
Member Intent
Message Content

Member Cache
Retrieving Members
Troubleshooting
Where'd my members go?
Why does on_ready take so long to fire?

New in version 1.5.

A Primer to Gateway Intents¶
In version 1.5 comes the introduction of Intents. This is a radical change in how bots are written. An intent basically allows a bot to subscribe to specific buckets of events. The events that correspond to each intent is documented in the individual attribute of the Intents documentation.
These intents are passed to the constructor of Client or its subclasses (AutoShardedClient, AutoShardedBot, Bot) with the intents argument.

What intents are needed?¶
The intents that are necessary for your bot can only be dictated by yourself. Each attribute in the Intents class documents what events it corresponds to and what kind of cache it enables.
For example, if you want a bot that functions without spammy events like presences or typing then we could do the following:
 import discord
 intents = discord.Intents.default()
 intents.typing = False
 intents.presences = False

 # Somewhere else:
 # client = discord.Client(intents=intents)
 # or
 # from discord.ext import commands
 # bot = commands.Bot(command_prefix='!', intents=intents)

Note that this doesn't enable Intents.members since it's a privileged intent.
Another example showing a bot that only deals with messages and guild information:
 import discord
 intents = discord.Intents(messages=True, guilds=True)
 # If you also want reaction events enable the following:
 # intents.reactions = True

 # Somewhere else:
 # client = discord.Client(intents=intents)
 # or
 # from discord.ext import commands
 # bot = commands.Bot(command_prefix='!', intents=intents)

Privileged Intents¶
With the API change requiring bot authors to specify intents, some intents were restricted further and require more manual steps. These intents are called privileged intents.
A privileged intent is one that requires you to go to the developer portal and manually enable it. To enable privileged intents do the following:

Make sure you're logged on to the Discord website.
Navigate to the application page.
Click on the bot you want to enable privileged intents for.
Navigate to the bot tab on the left side of the screen.

Scroll down to the "Privileged Gateway Intents" section and enable the ones you want.

Warning
Enabling privileged intents when your bot is in over 100 guilds requires going through bot verification. If your bot is already verified and you would like to enable a privileged intent you must go through Discord support and talk to them about it.

Note
Even if you enable intents through the developer portal, you still have to enable the intents
through code as well.

Do I need privileged intents?¶
This is a quick checklist to see if you need specific privileged intents.

Presence Intent¶

Whether you use Member.status at all to track member statuses.
Whether you use Member.activity or Member.activities to check member's activities.

Member Intent¶

Whether you track member joins or member leaves, corresponds to on_member_join() and on_member_remove() events.
Whether you want to track member updates such as nickname or role changes.
Whether you want to track user updates such as usernames, avatars, discriminators, etc.
Whether you want to request the guild member list through Guild.chunk() or Guild.fetch_members().
Whether you want high accuracy member cache under Guild.members.

Message Content¶

Whether you use Message.content to check message content.
Whether you use Message.attachments to check message attachments.
Whether you use Message.embeds to check message embeds.
Whether you use Message.components to check message components.
Whether you use Message.poll to check the message polls.
Whether you use the commands extension with a non-mentioning prefix.

Member Cache¶
Along with intents, Discord now further restricts the ability to cache members and expects bot authors to cache as little as is necessary. However, to properly maintain a cache the Intents.members intent is required in order to track the members who left and properly evict them.
To aid with member cache where we don't need members to be cached, the library now has a MemberCacheFlags flag to control the member cache. The documentation page for the class goes over the specific policies that are possible.
It should be noted that certain things do not need a member cache since Discord will provide full member information if possible. For example:

on_message() will have Message.author be a member even if cache is disabled.
on_voice_state_update() will have the member parameter be a member even if cache is disabled.
on_reaction_add() will have the user parameter be a member when in a guild even if cache is disabled.
on_raw_reaction_add() will have RawReactionActionEvent.member be a member when in a guild even if cache is disabled.
The reaction add events do not contain additional information when in direct messages. This is a Discord limitation.
The reaction removal events do not have member information. This is a Discord limitation.

Other events that take a Member will require the use of the member cache. If absolute accuracy over the member cache is desirable, then it is advisable to have the Intents.members intent enabled.

Retrieving Members¶
If the cache is disabled or you disable chunking guilds at startup, we might still need a way to load members. The library offers a few ways to do this:

Guild.query_members()
Used to query members by a prefix matching nickname or username.
This can also be used to query members by their user ID.
This uses the gateway and not the HTTP.

Guild.chunk()
This can be used to fetch the entire member list through the gateway.

Guild.fetch_member()
Used to fetch a member by ID through the HTTP API.

Guild.fetch_members()
used to fetch a large number of members through the HTTP API.

It should be noted that the gateway has a strict rate limit of 120 requests per 60 seconds.

Troubleshooting¶
Some common issues relating to the mandatory intent change.

Where'd my members go?¶
Due to an API change Discord is now forcing developers who want member caching to explicitly opt-in to it. This is a Discord mandated change and there is no way to bypass it. In order to get members back you have to explicitly enable the members privileged intent and change the Intents.members attribute to true.
For example:
 import discord
 intents = discord.Intents.default()
 intents.members = True

 # Somewhere else:
 # client = discord.Client(intents=intents)
 # or
 # from discord.ext import commands
 # bot = commands.Bot(command_prefix='!', intents=intents)

Why does on_ready take so long to fire?¶
As part of the API change regarding intents, Discord also changed how members are loaded in the beginning. Originally the library could request 75 guilds at once and only request members from guilds that have the Guild.large attribute set to True. With the new intent changes, Discord mandates that we can only send 1 guild per request. This causes a 75x slowdown which is further compounded by the fact that all guilds, not just large guilds are being requested.
There are a few solutions to fix this.
The first solution is to request the privileged presences intent along with the privileged members intent and enable both of them. This allows the initial member list to contain online members just like the old gateway. Note that we're still limited to 1 guild per request but the number of guilds we request is significantly reduced.
The second solution is to disable member chunking by setting chunk_guilds_at_startup to False when constructing a client. Then, when chunking for a guild is necessary you can use the various techniques to retrieve members.
To illustrate the slowdown caused by the API change, take a bot who is in 840 guilds and 95 of these guilds are "large" (over 250 members).
Under the original system this would result in 2 requests to fetch the member list (75 guilds, 20 guilds) roughly taking 60 seconds. With Intents.members but not Intents.presences this requires 840 requests, with a rate limit of 120 requests per 60 seconds means that due to waiting for the rate limit it totals to around 7 minutes of waiting for the rate limit to fetch all the members. With both Intents.members and Intents.presences we mostly get the old behaviour so we're only required to request for the 95 guilds that are large, this is slightly less than our rate limit so it's close to the original timing to fetch the member list.
Unfortunately due to this change being required from Discord there is nothing that the library can do to mitigate this.
If you truly dislike the direction Discord is going with their API, you can contact them via support.

        © Copyright 2015-present, Rapptz.
      Created using Sphinx 4.4.0.


close

Settings
Font

Use a serif font:


Theme

          Automatic


          Light


          Dark


arrow_upwardto top

================================================================================

Document 7: https://github.com/Rapptz/discord.py/tree/v2.5.2/examples
--------------------------------------------------------------------------------
discord.py/examples at v2.5.2 · Rapptz/discord.py · GitHub

Skip to content

Navigation Menu

Toggle navigation



            Sign in


        Product


GitHub Copilot
        Write better code with AI


GitHub Advanced Security
        Find and fix vulnerabilities


Actions
        Automate any workflow


Codespaces
        Instant dev environments


Issues
        Plan and track work


Code Review
        Manage code changes


Discussions
        Collaborate outside of code


Code Search
        Find more, search less


Explore

      All features



      Documentation



      GitHub Skills



      Blog



        Solutions


By company size

      Enterprises



      Small and medium teams



      Startups



      Nonprofits



By use case

      DevSecOps



      DevOps



      CI/CD



      View all use cases



By industry

      Healthcare



      Financial services



      Manufacturing



      Government



      View all industries



              View all solutions




        Resources


Topics

      AI



      DevOps



      Security



      Software Development



      View all



Explore

      Learning Pathways



      Events & Webinars



      Ebooks & Whitepapers



      Customer Stories



      Partners



      Executive Insights



        Open Source


GitHub Sponsors
        Fund open source developers


The ReadME Project
        GitHub community articles


Repositories

      Topics



      Trending



      Collections



        Enterprise


Enterprise platform
        AI-powered developer platform


Available add-ons

GitHub Advanced Security
        Enterprise-grade security features


Copilot for business
        Enterprise-grade AI features


Premium Support
        Enterprise-grade 24/7 support


Pricing

Search or jump to...

Search code, repositories, users, issues, pull requests...



        Search


Clear




Search syntax tips

        Provide feedback



We read every piece of feedback, and take your input very seriously.

Include my email address so I can be contacted

     Cancel

    Submit feedback

        Saved searches

Use saved searches to filter your results more quickly



Name

Query

            To see all available qualifiers, see our documentation.



     Cancel

    Create saved search

                Sign in


                Sign up

Reseting focus

You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.


Dismiss alert

        Rapptz

/

discord.py

Public



Notifications
 You must be signed in to change notification settings



Fork
    3.8k



          Star
 15.3k

Code

Issues
81

Pull requests
63

Discussions

Actions

Projects
1

Security

Insights





Additional navigation options



          Code

          Issues

          Pull requests

          Discussions

          Actions

          Projects

          Security

          Insights



   Files v2.5.2Breadcrumbsdiscord.py/examples/Copy pathDirectory actionsMore optionsDirectory actionsMore optionsLatest commit HistoryHistory v2.5.2Breadcrumbsdiscord.py/examples/TopFolders and filesNameNameLast commit messageLast commit dateparent directory..app_commandsapp_commands  modalsmodals  viewsviews  advanced_startup.pyadvanced_startup.py  background_task.pybackground_task.py  background_task_asyncio.pybackground_task_asyncio.py  basic_bot.pybasic_bot.py  basic_voice.pybasic_voice.py  converters.pyconverters.py  custom_context.pycustom_context.py  deleted.pydeleted.py  edits.pyedits.py  guessing_game.pyguessing_game.py  new_member.pynew_member.py  reaction_roles.pyreaction_roles.py  reply.pyreply.py  secret.pysecret.py  View all files

Footer

        © 2025 GitHub, Inc.


Footer navigation

Terms

Privacy

Security

Status

Docs

Contact

      Manage cookies


      Do not share my personal information


    You can't perform that action at this time.

================================================================================

Document 8: https://github.com/Rapptz/discord.py/tree/v2.5.2/examples/app_commands
--------------------------------------------------------------------------------
discord.py/examples/app_commands at v2.5.2 · Rapptz/discord.py · GitHub

Skip to content

Navigation Menu

Toggle navigation



            Sign in


        Product


GitHub Copilot
        Write better code with AI


GitHub Advanced Security
        Find and fix vulnerabilities


Actions
        Automate any workflow


Codespaces
        Instant dev environments


Issues
        Plan and track work


Code Review
        Manage code changes


Discussions
        Collaborate outside of code


Code Search
        Find more, search less


Explore

      All features



      Documentation



      GitHub Skills



      Blog



        Solutions


By company size

      Enterprises



      Small and medium teams



      Startups



      Nonprofits



By use case

      DevSecOps



      DevOps



      CI/CD



      View all use cases



By industry

      Healthcare



      Financial services



      Manufacturing



      Government



      View all industries



              View all solutions




        Resources


Topics

      AI



      DevOps



      Security



      Software Development



      View all



Explore

      Learning Pathways



      Events & Webinars



      Ebooks & Whitepapers



      Customer Stories



      Partners



      Executive Insights



        Open Source


GitHub Sponsors
        Fund open source developers


The ReadME Project
        GitHub community articles


Repositories

      Topics



      Trending



      Collections



        Enterprise


Enterprise platform
        AI-powered developer platform


Available add-ons

GitHub Advanced Security
        Enterprise-grade security features


Copilot for business
        Enterprise-grade AI features


Premium Support
        Enterprise-grade 24/7 support


Pricing

Search or jump to...

Search code, repositories, users, issues, pull requests...



        Search


Clear




Search syntax tips

        Provide feedback



We read every piece of feedback, and take your input very seriously.

Include my email address so I can be contacted

     Cancel

    Submit feedback

        Saved searches

Use saved searches to filter your results more quickly



Name

Query

            To see all available qualifiers, see our documentation.



     Cancel

    Create saved search

                Sign in


                Sign up

Reseting focus

You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.


Dismiss alert

        Rapptz

/

discord.py

Public



Notifications
 You must be signed in to change notification settings



Fork
    3.8k



          Star
 15.3k

Code

Issues
81

Pull requests
63

Discussions

Actions

Projects
1

Security

Insights





Additional navigation options



          Code

          Issues

          Pull requests

          Discussions

          Actions

          Projects

          Security

          Insights



   Files v2.5.2Breadcrumbsdiscord.py/examples/app_commands/Copy pathDirectory actionsMore optionsDirectory actionsMore optionsLatest commit HistoryHistory v2.5.2Breadcrumbsdiscord.py/examples/app_commands/TopFolders and filesNameNameLast commit messageLast commit dateparent directory..basic.pybasic.py  transformers.pytransformers.py  View all files

Footer

        © 2025 GitHub, Inc.


Footer navigation

Terms

Privacy

Security

Status

Docs

Contact

      Manage cookies


      Do not share my personal information


    You can't perform that action at this time.

================================================================================

Document 9: https://github.com/Rapptz/discord.py/tree/v2.5.2/examples/modals
--------------------------------------------------------------------------------
discord.py/examples/modals at v2.5.2 · Rapptz/discord.py · GitHub

Skip to content

Navigation Menu

Toggle navigation



            Sign in


        Product


GitHub Copilot
        Write better code with AI


GitHub Advanced Security
        Find and fix vulnerabilities


Actions
        Automate any workflow


Codespaces
        Instant dev environments


Issues
        Plan and track work


Code Review
        Manage code changes


Discussions
        Collaborate outside of code


Code Search
        Find more, search less


Explore

      All features



      Documentation



      GitHub Skills



      Blog



        Solutions


By company size

      Enterprises



      Small and medium teams



      Startups



      Nonprofits



By use case

      DevSecOps



      DevOps



      CI/CD



      View all use cases



By industry

      Healthcare



      Financial services



      Manufacturing



      Government



      View all industries



              View all solutions




        Resources


Topics

      AI



      DevOps



      Security



      Software Development



      View all



Explore

      Learning Pathways



      Events & Webinars



      Ebooks & Whitepapers



      Customer Stories



      Partners



      Executive Insights



        Open Source


GitHub Sponsors
        Fund open source developers


The ReadME Project
        GitHub community articles


Repositories

      Topics



      Trending



      Collections



        Enterprise


Enterprise platform
        AI-powered developer platform


Available add-ons

GitHub Advanced Security
        Enterprise-grade security features


Copilot for business
        Enterprise-grade AI features


Premium Support
        Enterprise-grade 24/7 support


Pricing

Search or jump to...

Search code, repositories, users, issues, pull requests...



        Search


Clear




Search syntax tips

        Provide feedback



We read every piece of feedback, and take your input very seriously.

Include my email address so I can be contacted

     Cancel

    Submit feedback

        Saved searches

Use saved searches to filter your results more quickly



Name

Query

            To see all available qualifiers, see our documentation.



     Cancel

    Create saved search

                Sign in


                Sign up

Reseting focus

You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.


Dismiss alert

        Rapptz

/

discord.py

Public



Notifications
 You must be signed in to change notification settings



Fork
    3.8k



          Star
 15.3k

Code

Issues
81

Pull requests
63

Discussions

Actions

Projects
1

Security

Insights





Additional navigation options



          Code

          Issues

          Pull requests

          Discussions

          Actions

          Projects

          Security

          Insights



   Files v2.5.2Breadcrumbsdiscord.py/examples/modals/Copy pathDirectory actionsMore optionsDirectory actionsMore optionsLatest commit HistoryHistory v2.5.2Breadcrumbsdiscord.py/examples/modals/TopFolders and filesNameNameLast commit messageLast commit dateparent directory..basic.pybasic.py  View all files

Footer

        © 2025 GitHub, Inc.


Footer navigation

Terms

Privacy

Security

Status

Docs

Contact

      Manage cookies


      Do not share my personal information


    You can't perform that action at this time.

================================================================================

Document 10: https://github.com/Rapptz/discord.py/tree/v2.5.2/examples/views
--------------------------------------------------------------------------------
discord.py/examples/views at v2.5.2 · Rapptz/discord.py · GitHub

Skip to content

Navigation Menu

Toggle navigation



            Sign in


        Product


GitHub Copilot
        Write better code with AI


GitHub Advanced Security
        Find and fix vulnerabilities


Actions
        Automate any workflow


Codespaces
        Instant dev environments


Issues
        Plan and track work


Code Review
        Manage code changes


Discussions
        Collaborate outside of code


Code Search
        Find more, search less


Explore

      All features



      Documentation



      GitHub Skills



      Blog



        Solutions


By company size

      Enterprises



      Small and medium teams



      Startups



      Nonprofits



By use case

      DevSecOps



      DevOps



      CI/CD



      View all use cases



By industry

      Healthcare



      Financial services



      Manufacturing



      Government



      View all industries



              View all solutions




        Resources


Topics

      AI



      DevOps



      Security



      Software Development



      View all



Explore

      Learning Pathways



      Events & Webinars



      Ebooks & Whitepapers



      Customer Stories



      Partners



      Executive Insights



        Open Source


GitHub Sponsors
        Fund open source developers


The ReadME Project
        GitHub community articles


Repositories

      Topics



      Trending



      Collections



        Enterprise


Enterprise platform
        AI-powered developer platform


Available add-ons

GitHub Advanced Security
        Enterprise-grade security features


Copilot for business
        Enterprise-grade AI features


Premium Support
        Enterprise-grade 24/7 support


Pricing

Search or jump to...

Search code, repositories, users, issues, pull requests...



        Search


Clear




Search syntax tips

        Provide feedback



We read every piece of feedback, and take your input very seriously.

Include my email address so I can be contacted

     Cancel

    Submit feedback

        Saved searches

Use saved searches to filter your results more quickly



Name

Query

            To see all available qualifiers, see our documentation.



     Cancel

    Create saved search

                Sign in


                Sign up

Reseting focus

You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.


Dismiss alert

        Rapptz

/

discord.py

Public



Notifications
 You must be signed in to change notification settings



Fork
    3.8k



          Star
 15.3k

Code

Issues
81

Pull requests
63

Discussions

Actions

Projects
1

Security

Insights





Additional navigation options



          Code

          Issues

          Pull requests

          Discussions

          Actions

          Projects

          Security

          Insights



   Files v2.5.2Breadcrumbsdiscord.py/examples/views/Copy pathDirectory actionsMore optionsDirectory actionsMore optionsLatest commit HistoryHistory v2.5.2Breadcrumbsdiscord.py/examples/views/TopFolders and filesNameNameLast commit messageLast commit dateparent directory..confirm.pyconfirm.py  counter.pycounter.py  dropdown.pydropdown.py  dynamic_counter.pydynamic_counter.py  ephemeral.pyephemeral.py  link.pylink.py  persistent.pypersistent.py  tic_tac_toe.pytic_tac_toe.py  View all files

Footer

        © 2025 GitHub, Inc.


Footer navigation

Terms

Privacy

Security

Status

Docs

Contact

      Manage cookies


      Do not share my personal information


    You can't perform that action at this time.

================================================================================

Document 11: https://discordpy.readthedocs.io/en/stable/faq.html
--------------------------------------------------------------------------------
Frequently Asked Questions

discord.py
github
discord
help_center
search
close

search

View Documentation For

discord
discord.ext.commands
discord.ext.tasks

search

settings

menu

settings

search

Table of Contents

Frequently Asked Questions
Coroutines
What is a coroutine?
Where can I use await?
What does ‚Äúblocking‚Äù mean?

General
Where can I find usage examples?
How do I set the ‚ÄúPlaying‚Äù status?
How do I send a message to a specific channel?
How do I send a DM?
How do I get the ID of a sent message?
How do I upload an image?
How can I add a reaction to a message?
How do I pass a coroutine to the player‚Äôs ‚Äúafter‚Äù function?
How do I run something in the background?
How do I get a specific model?
How do I make a web request?
How do I use a local image file for an embed image?
Is there an event for audit log entries being created?

Commands Extension
Why does on_message make my commands stop working?
Why do my arguments require quotes?
How do I get the original message?
How do I make a subcommand?

Views and Modals
How can I disable all items on timeout?

Application Commands
My bot‚Äôs commands are not showing up!

Frequently Asked Questions¬∂
This is a list of Frequently Asked Questions regarding using discord.py and its extension modules. Feel free to suggest a
new question or submit one via pull requests.

Questions

Coroutines

What is a coroutine?
Where can I use await?
What does ‚Äúblocking‚Äù mean?

General

Where can I find usage examples?
How do I set the ‚ÄúPlaying‚Äù status?
How do I send a message to a specific channel?
How do I send a DM?
How do I get the ID of a sent message?
How do I upload an image?
How can I add a reaction to a message?
How do I pass a coroutine to the player‚Äôs ‚Äúafter‚Äù function?
How do I run something in the background?
How do I get a specific model?
How do I make a web request?
How do I use a local image file for an embed image?
Is there an event for audit log entries being created?

Commands Extension

Why does on_message make my commands stop working?
Why do my arguments require quotes?
How do I get the original message?
How do I make a subcommand?

Views and Modals

How can I disable all items on timeout?

Application Commands

My bot‚Äôs commands are not showing up!

Coroutines¬∂
Questions regarding coroutines and asyncio belong here.

What is a coroutine?¬∂
A coroutine is a function that must be invoked with await or yield from. When Python encounters an await it stops
the function‚Äôs execution at that point and works on other things until it comes back to that point and finishes off its work.
This allows for your program to be doing multiple things at the same time without using threads or complicated
multiprocessing.
If you forget to await a coroutine then the coroutine will not run. Never forget to await a coroutine.

Where can I use await?¬∂
You can only use await inside async def functions and nowhere else.

What does ‚Äúblocking‚Äù mean?¬∂
In asynchronous programming a blocking call is essentially all the parts of the function that are not await. Do not
despair however, because not all forms of blocking are bad! Using blocking calls is inevitable, but you must work to make
sure that you don‚Äôt excessively block functions. Remember, if you block for too long then your bot will freeze since it has
not stopped the function‚Äôs execution at that point to do other things.
If logging is enabled, this library will attempt to warn you that blocking is occurring with the message:
Heartbeat blocked for more than N seconds.
See Setting Up Logging for details on enabling logging.
A common source of blocking for too long is something like time.sleep(). Don‚Äôt do that. Use asyncio.sleep()
instead. Similar to this example:
# bad
time.sleep(10)

# good
await asyncio.sleep(10)

Another common source of blocking for too long is using HTTP requests with the famous module Requests: HTTP for Humans‚Ñ¢.
While Requests: HTTP for Humans‚Ñ¢ is an amazing module for non-asynchronous programming, it is not a good choice for
asyncio because certain requests can block the event loop too long. Instead, use the aiohttp library which
is installed on the side with this library.
Consider the following example:
# bad
r = requests.get('http://aws.random.cat/meow')
if r.status_code == 200:
    js = r.json()
    await channel.send(js['file'])

# good
async with aiohttp.ClientSession() as session:
    async with session.get('http://aws.random.cat/meow') as r:
        if r.status == 200:
            js = await r.json()
            await channel.send(js['file'])

General¬∂
General questions regarding library usage belong here.

Where can I find usage examples?¬∂
Example code can be found in the examples folder
in the repository.

How do I set the ‚ÄúPlaying‚Äù status?¬∂
The activity keyword argument may be passed in the Client constructor or Client.change_presence(), given an Activity object.
The constructor may be used for static activities, while Client.change_presence() may be used to update the activity at runtime.

Warning
It is highly discouraged to use Client.change_presence() or API calls in on_ready() as this event may be called many times while running, not just once.
There is a high chance of disconnecting if presences are changed right after connecting.

The status type (playing, listening, streaming, watching) can be set using the ActivityType enum.
For memory optimisation purposes, some activities are offered in slimmed-down versions:

Game
Streaming

Putting both of these pieces of info together, you get the following:
client = discord.Client(activity=discord.Game(name='my game'))

# or, for watching:
activity = discord.Activity(name='my activity', type=discord.ActivityType.watching)
client = discord.Client(activity=activity)

How do I send a message to a specific channel?¬∂
You must fetch the channel directly and then call the appropriate method. Example:
channel = client.get_channel(12324234183172)
await channel.send('hello')

How do I send a DM?¬∂
Get the User or Member object and call abc.Messageable.send(). For example:
user = client.get_user(381870129706958858)
await user.send('üëÄ')

If you are responding to an event, such as on_message(), you already have the User object via Message.author:
await message.author.send('üëã')

How do I get the ID of a sent message?¬∂
abc.Messageable.send() returns the Message that was sent.
The ID of a message can be accessed via Message.id:
message = await channel.send('hmm‚Ä¶')
message_id = message.id

How do I upload an image?¬∂
To upload something to Discord you have to use the File object.
A File accepts two parameters, the file-like object (or file path) and the filename
to pass to Discord when uploading.
If you want to upload an image it‚Äôs as simple as:
await channel.send(file=discord.File('my_file.png'))

If you have a file-like object you can do as follows:
with open('my_file.png', 'rb') as fp:
    await channel.send(file=discord.File(fp, 'new_filename.png'))

To upload multiple files, you can use the files keyword argument instead of file:
my_files = [
    discord.File('result.zip'),
    discord.File('teaser_graph.png'),
]
await channel.send(files=my_files)

If you want to upload something from a URL, you will have to use an HTTP request using aiohttp
and then pass an io.BytesIO instance to File like so:
import io
import aiohttp

async with aiohttp.ClientSession() as session:
    async with session.get(my_url) as resp:
        if resp.status != 200:
            return await channel.send('Could not download file...')
        data = io.BytesIO(await resp.read())
        await channel.send(file=discord.File(data, 'cool_image.png'))

How can I add a reaction to a message?¬∂
You use the Message.add_reaction() method.
If you want to use unicode emoji, you must pass a valid unicode code point in a string. In your code, you can write this in a few different ways:

'üëç'
'\U0001F44D'
'\N{THUMBS UP SIGN}'

Quick example:
emoji = '\N{THUMBS UP SIGN}'
# or '\U0001f44d' or 'üëç'
await message.add_reaction(emoji)

In case you want to use emoji that come from a message, you already get their code points in the content without needing
to do anything special. You cannot send ':thumbsup:' style shorthands.
For custom emoji, you should pass an instance of Emoji. You can also pass a '<:name:id>' string, but if you
can use said emoji, you should be able to use Client.get_emoji() to get an emoji via ID or use utils.find()/
utils.get() on Client.emojis or Guild.emojis collections.
The name and ID of a custom emoji can be found with the client by prefixing :custom_emoji: with a backslash.
For example, sending the message \:python3: with the client will result in <:python3:232720527448342530>.
Quick example:
# if you have the ID already
emoji = client.get_emoji(310177266011340803)
await message.add_reaction(emoji)

# no ID, do a lookup
emoji = discord.utils.get(guild.emojis, name='LUL')
if emoji:
    await message.add_reaction(emoji)

# if you have the name and ID of a custom emoji:
emoji = '<:python3:232720527448342530>'
await message.add_reaction(emoji)

How do I pass a coroutine to the player‚Äôs ‚Äúafter‚Äù function?¬∂
The library‚Äôs music player launches on a separate thread, ergo it does not execute inside a coroutine.
This does not mean that it is not possible to call a coroutine in the after parameter. To do so you must pass a callable
that wraps up a couple of aspects.
The first gotcha that you must be aware of is that calling a coroutine is not a thread-safe operation. Since we are
technically in another thread, we must take caution in calling thread-safe operations so things do not bug out. Luckily for
us, asyncio comes with a asyncio.run_coroutine_threadsafe() function that allows us to call
a coroutine from another thread.
However, this function returns a Future and to actually call it we have to fetch its result. Putting all of
this together we can do the following:
def my_after(error):
    coro = some_channel.send('Song is done!')
    fut = asyncio.run_coroutine_threadsafe(coro, client.loop)
    try:
        fut.result()
    except:
        # an error happened sending the message
        pass

voice.play(discord.FFmpegPCMAudio(url), after=my_after)

How do I run something in the background?¬∂
Check the background_task.py example.

How do I get a specific model?¬∂
There are multiple ways of doing this. If you have a specific model‚Äôs ID then you can use
one of the following functions:

Client.get_channel()
Client.get_guild()
Client.get_user()
Client.get_emoji()
Guild.get_member()
Guild.get_channel()
Guild.get_role()

The following use an HTTP request:

abc.Messageable.fetch_message()
Client.fetch_user()
Client.fetch_guilds()
Client.fetch_guild()
Guild.fetch_emoji()
Guild.fetch_emojis()
Guild.fetch_member()

If the functions above do not help you, then use of utils.find() or utils.get() would serve some use in finding
specific models.
Quick example:
# find a guild by name
guild = discord.utils.get(client.guilds, name='My Server')

# make sure to check if it's found
if guild is not None:
    # find a channel by name
    channel = discord.utils.get(guild.text_channels, name='cool-channel')

How do I make a web request?¬∂
To make a request, you should use a non-blocking library.
This library already uses and requires a 3rd party library for making requests, aiohttp.
Quick example:
async with aiohttp.ClientSession() as session:
    async with session.get('http://aws.random.cat/meow') as r:
        if r.status == 200:
            js = await r.json()

See aiohttp‚Äôs full documentation for more information.

How do I use a local image file for an embed image?¬∂
Discord special-cases uploading an image attachment and using it within an embed so that it will not
display separately, but instead in the embed‚Äôs thumbnail, image, footer or author icon.
To do so, upload the image normally with abc.Messageable.send(),
and set the embed‚Äôs image URL to attachment://image.png,
where image.png is the filename of the image you will send.
Quick example:
file = discord.File("path/to/my/image.png", filename="image.png")
embed = discord.Embed()
embed.set_image(url="attachment://image.png")
await channel.send(file=file, embed=embed)

Is there an event for audit log entries being created?¬∂
This event is now available in the library and Discord as of version 2.2. It can be found under on_audit_log_entry_create().

Commands Extension¬∂
Questions regarding discord.ext.commands belong here.

Why does on_message make my commands stop working?¬∂
Overriding the default provided on_message forbids any extra commands from running. To fix this, add a
bot.process_commands(message) line at the end of your on_message. For example:
@bot.event
async def on_message(message):
    # do some extra stuff here

    await bot.process_commands(message)

Alternatively, you can place your on_message logic into a listener. In this setup, you should not
manually call bot.process_commands(). This also allows you to do multiple things asynchronously in response
to a message. Example:
@bot.listen('on_message')
async def whatever_you_want_to_call_it(message):
    # do stuff here
    # do not process commands here

Why do my arguments require quotes?¬∂
In a simple command defined as:
@bot.command()
async def echo(ctx, message: str):
    await ctx.send(message)

Calling it via ?echo a b c will only fetch the first argument and disregard the rest. To fix this you should either call
it via ?echo "a b c" or change the signature to have ‚Äúconsume rest‚Äù behaviour. Example:
@bot.command()
async def echo(ctx, *, message: str):
    await ctx.send(message)

This will allow you to use ?echo a b c without needing the quotes.

How do I get the original message?¬∂
The Context contains an attribute, message to get the original
message.
Example:
@bot.command()
async def length(ctx):
    await ctx.send(f'Your message is {len(ctx.message.content)} characters long.')

How do I make a subcommand?¬∂
Use the group() decorator. This will transform the callback into a Group which will allow you to add commands into
the group operating as ‚Äúsubcommands‚Äù. These groups can be arbitrarily nested as well.
Example:
@bot.group()
async def git(ctx):
    if ctx.invoked_subcommand is None:
        await ctx.send('Invalid git command passed...')

@git.command()
async def push(ctx, remote: str, branch: str):
    await ctx.send(f'Pushing to {remote} {branch}')

This could then be used as ?git push origin master.

Views and Modals¬∂
Questions regarding discord.ui.View, discord.ui.Modal, and their components such as buttons, select menus, etc.

How can I disable all items on timeout?¬∂
This requires three steps.

Attach a message to the View using either the return type of send() or retrieving it via InteractionCallbackResponse.resource.
Inside on_timeout(), loop over all items inside the view and mark them disabled.
Edit the message we retrieved in step 1 with the newly modified view.

Putting it all together, we can do this in a text command:
class MyView(discord.ui.View):
    async def on_timeout(self) -> None:
        # Step 2
        for item in self.children:
            item.disabled = True

        # Step 3
        await self.message.edit(view=self)

    @discord.ui.button(label='Example')
    async def example_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_message('Hello!', ephemeral=True)

@bot.command()
async def timeout_example(ctx):
    """An example to showcase disabling buttons on timing out"""
    view = MyView()
    # Step 1
    view.message = await ctx.send('Press me!', view=view)

Application commands, when you respond with InteractionResponse.send_message(), return an instance of InteractionCallbackResponse which contains the message you sent. This is the message you should attach to the view.
Putting it all together, using the previous view definition:
@tree.command()
async def more_timeout_example(interaction):
    """Another example to showcase disabling buttons on timing out"""
    view = MyView()
    callback = await interaction.response.send_message('Press me!', view=view)

    # Step 1
    resource = callback.resource
    # making sure it's an interaction response message
    if isinstance(resource, discord.InteractionMessage):
        view.message = resource

Application Commands¬∂
Questions regarding Discord‚Äôs new application commands, commonly known as ‚Äúslash commands‚Äù or ‚Äúcontext menu commands‚Äù.

My bot‚Äôs commands are not showing up!¬∂

Did you sync() your command? Commands need to be synced before they will appear.
Did you invite your bot with the correct permissions? Bots need to be invited with the applications.commands
scope in addition to the bot scope. For example, invite the bot with the following URL:
https://discord.com/oauth2/authorize?client_id=<client id>&scope=applications.commands+bot.
Alternatively, if you use utils.oauth_url(), you can call the function as such:
oauth_url(<other options>, scopes=("bot", "applications.commands")).

        © Copyright 2015-present, Rapptz.
      Created using Sphinx 4.4.0.


close

Settings
Font

Use a serif font:


Theme

          Automatic


          Light


          Dark


arrow_upwardto top

================================================================================

Document 12: https://discordpy.readthedocs.io/en/stable/genindex.html
--------------------------------------------------------------------------------
Index

discord.py
github
discord
help_center
search
close

search

View Documentation For

discord
discord.ext.commands
discord.ext.tasks

search

settings

settings

search

Index

_
 | A
 | B
 | C
 | D
 | E
 | F
 | G
 | H
 | I
 | J
 | K
 | L
 | M
 | N
 | O
 | P
 | Q
 | R
 | S
 | T
 | U
 | V
 | W
 | Y

_

__call__() (discord.ext.commands.Command method)

__call__() (discord.ext.tasks.Loop method)

__version__ (in module discord)

A

accent_color (discord.ClientUser property)

accent_color (discord.Member property)

accent_color (discord.TeamMember property)

accent_color (discord.User property)

accent_color (discord.WidgetMember property)

accent_colour (discord.ClientUser property)

accent_colour (discord.Member property)

accent_colour (discord.TeamMember property)

accent_colour (discord.User property)

accent_colour (discord.WidgetMember property)

accepted (discord.TeamMembershipState attribute)

account (discord.BotIntegration attribute)

account (discord.Integration attribute)

account (discord.PartialIntegration attribute)

account (discord.StreamIntegration attribute)

action (discord.AuditLogEntry attribute)

action (discord.AutoModAction attribute)

action_row (discord.ComponentType attribute)

ActionRow (class in discord)

actions (discord.AuditLogDiff attribute)

actions (discord.AutoModRule attribute)

active (discord.ApplicationFlags attribute)

active (discord.EventStatus attribute)

active (discord.SubscriptionStatus attribute)

active_developer (discord.PublicUserFlags attribute)

active_developer (discord.UserFlags attribute)

active_threads() (discord.Guild method)

activities (discord.Member attribute)

activities (discord.RawPresenceUpdateEvent attribute)

Activity (class in discord)

activity (discord.Client property)

activity (discord.ext.commands.Bot property)

activity (discord.Member property)

activity (discord.Message attribute)

activity (discord.WidgetMember attribute)

activity_id (discord.InteractionCallbackResponse attribute)

ActivityType (class in discord)

add_aliases_formatting() (discord.ext.commands.MinimalHelpCommand method)

add_answer() (discord.Poll method)

add_bot_commands_formatting() (discord.ext.commands.MinimalHelpCommand method)

add_check() (discord.app_commands.Command method)

add_check() (discord.app_commands.ContextMenu method)

add_check() (discord.ext.commands.Bot method)

add_check() (discord.ext.commands.Command method)

add_check() (discord.ext.commands.Group method)

add_check() (discord.ext.commands.HelpCommand method)

add_check() (discord.ext.commands.HybridGroup method)

add_cog() (discord.ext.commands.Bot method)

add_command() (discord.app_commands.CommandTree method)

add_command() (discord.app_commands.Group method)

add_command() (discord.ext.commands.Bot method)

add_command() (discord.ext.commands.Group method)

add_command() (discord.ext.commands.GroupMixin method)

add_command() (discord.ext.commands.HybridGroup method)

add_command_arguments() (discord.ext.commands.DefaultHelpCommand method)

add_command_formatting() (discord.ext.commands.DefaultHelpCommand method)

add_command_formatting() (discord.ext.commands.MinimalHelpCommand method)

add_dynamic_items() (discord.Client method)

add_dynamic_items() (discord.ext.commands.Bot method)

add_exception_type() (discord.ext.tasks.Loop method)

add_field() (discord.Embed method)

add_files() (discord.InteractionMessage method)

add_files() (discord.Message method)

add_files() (discord.SyncWebhookMessage method)

add_files() (discord.WebhookMessage method)

add_indented_commands() (discord.ext.commands.DefaultHelpCommand method)

add_item() (discord.ui.Modal method)

add_item() (discord.ui.View method)

add_line() (discord.ext.commands.Paginator method)

add_listener() (discord.ext.commands.Bot method)

add_option() (discord.ui.Select method)

add_reaction() (discord.InteractionMessage method)

add_reaction() (discord.Message method)

add_reaction() (discord.PartialMessage method)

add_reaction() (discord.WebhookMessage method)

add_reactions (discord.Permissions attribute)

add_roles() (discord.Member method)

add_subcommand_formatting() (discord.ext.commands.MinimalHelpCommand method)

add_tags() (discord.Thread method)

add_user() (discord.Thread method)

add_view() (discord.Client method)

add_view() (discord.ext.commands.Bot method)

admin (discord.TeamMemberRole attribute)

administrator (discord.Permissions attribute)

advanced() (discord.Permissions class method)

afk (discord.VoiceState attribute)

afk_channel (discord.AuditLogDiff attribute)

afk_channel (discord.Guild property)

afk_timeout (discord.AuditLogDiff attribute)

afk_timeout (discord.Guild attribute)

after (discord.AuditLogChanges attribute)

after (discord.AuditLogEntry attribute)

after_invoke() (discord.ext.commands.Bot method)

after_invoke() (discord.ext.commands.Command method)

after_invoke() (discord.ext.commands.Group method)

after_invoke() (discord.ext.commands.HybridCommand method)

after_invoke() (discord.ext.commands.HybridGroup method)

after_invoke() (in module discord.ext.commands)

after_loop() (discord.ext.tasks.Loop method)

age_restricted (discord.NSFWLevel attribute)

album (discord.Spotify property)

album_cover_url (discord.Spotify property)

alert_system_message_id (discord.AutoModAction attribute)

alias_conflict (discord.ext.commands.CommandRegistrationError attribute)

aliases (discord.ext.commands.Command attribute)

aliases (discord.ext.commands.Flag attribute)

aliases_heading (discord.ext.commands.MinimalHelpCommand attribute)

all() (discord.AllowedMentions class method)

all() (discord.Intents class method)

all() (discord.MemberCacheFlags class method)

all() (discord.Permissions class method)

all() (discord.PublicUserFlags method)

all_channel() (discord.Permissions class method)

all_commands (discord.ext.commands.GroupMixin attribute)

all_members (discord.ContentFilter attribute)

all_messages (discord.NotificationLevel attribute)

AllChannels (class in discord.app_commands)

allow (discord.AuditLogDiff attribute)

allow_list (discord.AutoModTrigger attribute)

allowed_contexts (discord.app_commands.AppCommand attribute)

allowed_contexts (discord.app_commands.Command attribute)

allowed_contexts (discord.app_commands.ContextMenu attribute)

allowed_contexts (discord.app_commands.Group attribute)

allowed_contexts (discord.ext.commands.Bot attribute)

allowed_contexts() (in module discord.app_commands)

allowed_installs (discord.app_commands.AppCommand attribute)

allowed_installs (discord.app_commands.Command attribute)

allowed_installs (discord.app_commands.ContextMenu attribute)

allowed_installs (discord.app_commands.Group attribute)

allowed_installs (discord.ext.commands.Bot attribute)

allowed_installs() (in module discord.app_commands)

allowed_mentions (discord.Client property)

allowed_mentions (discord.ext.commands.Bot property)

AllowedMentions (class in discord)

american_english (discord.Locale attribute)

animated (discord.AttachmentFlags attribute)

animated (discord.Emoji attribute)

animated (discord.PartialEmoji attribute)

animation (discord.VoiceChannelEffect attribute)

annotation (discord.ext.commands.Flag attribute)

annotation (discord.ext.commands.Parameter property)

answer_id (discord.RawPollVoteActionEvent attribute)

answers (discord.Poll property)

apng (discord.StickerFormatType attribute)

app_command (discord.ext.commands.Cog property)

app_command_permission_update (discord.AuditLogAction attribute)

app_command_permissions (discord.AuditLogDiff attribute)

app_commands_badge (discord.ApplicationFlags attribute)

app_permissions (discord.Interaction property)

AppCommand (class in discord.app_commands)

AppCommandChannel (class in discord.app_commands)

AppCommandContext (class in discord.app_commands)

AppCommandError

AppCommandGroup (class in discord.app_commands)

AppCommandOptionType (class in discord)

AppCommandPermissions (class in discord.app_commands)

AppCommandPermissionType (class in discord)

AppCommandThread (class in discord.app_commands)

AppCommandType (class in discord)

append_option() (discord.ui.Select method)

AppInfo (class in discord)

AppInstallationType (class in discord.app_commands)

AppInstallParams (class in discord)

application (discord.BotIntegration attribute)

application (discord.Client property)

application (discord.ext.commands.Bot property)

application (discord.Message attribute)

application (discord.WebhookType attribute)

application_command (discord.InteractionType attribute)

application_flags (discord.Client property)

application_flags (discord.ext.commands.Bot property)

application_id (discord.Activity attribute)

application_id (discord.app_commands.AppCommand attribute)

application_id (discord.app_commands.GuildAppCommandPermissions attribute)

application_id (discord.Client property)

application_id (discord.Entitlement attribute)

application_id (discord.ext.commands.Bot property)

application_id (discord.Interaction attribute)

application_id (discord.Message attribute)

application_id (discord.PartialIntegration attribute)

application_id (discord.RawAppCommandPermissionsUpdateEvent attribute)

application_id (discord.RawIntegrationDeleteEvent attribute)

application_id (discord.SKU attribute)

application_info() (discord.Client method)

application_info() (discord.ext.commands.Bot method)

application_subscription (discord.EntitlementType attribute)

ApplicationFlags (class in discord)

applied_tags (discord.AuditLogDiff attribute)

applied_tags (discord.Thread property)

approximate_guild_count (discord.AppInfo attribute)

approximate_guild_count (discord.PartialAppInfo attribute)

approximate_member_count (discord.Guild attribute)

approximate_member_count (discord.GuildPreview attribute)

approximate_member_count (discord.Invite attribute)

approximate_presence_count (discord.Guild attribute)

approximate_presence_count (discord.GuildPreview attribute)

approximate_presence_count (discord.Invite attribute)

approximate_user_install_count (discord.AppInfo attribute)

archive_timestamp (discord.app_commands.AppCommandThread attribute)

archive_timestamp (discord.Thread attribute)

archived (discord.app_commands.AppCommandThread attribute)

archived (discord.AuditLogDiff attribute)

archived (discord.Thread attribute)

archived_threads() (discord.ForumChannel method)

archived_threads() (discord.TextChannel method)

archiver_id (discord.app_commands.AppCommandThread attribute)

archiver_id (discord.Thread attribute)

args (discord.ext.commands.Context attribute)

Argument (class in discord.app_commands)

argument (discord.ext.commands.BadBoolArgument attribute)

argument (discord.ext.commands.BadColourArgument attribute)

argument (discord.ext.commands.BadFlagArgument attribute)

argument (discord.ext.commands.BadInviteArgument attribute)

argument (discord.ext.commands.BadLiteralArgument attribute)

argument (discord.ext.commands.ChannelNotFound attribute)

argument (discord.ext.commands.ChannelNotReadable attribute)

argument (discord.ext.commands.EmojiNotFound attribute)

argument (discord.ext.commands.GuildNotFound attribute)

argument (discord.ext.commands.GuildStickerNotFound attribute)

argument (discord.ext.commands.MemberNotFound attribute)

argument (discord.ext.commands.MessageNotFound attribute)

argument (discord.ext.commands.PartialEmojiConversionFailure attribute)

argument (discord.ext.commands.RoleNotFound attribute)

argument (discord.ext.commands.ScheduledEventNotFound attribute)

argument (discord.ext.commands.SoundboardSoundNotFound attribute)

argument (discord.ext.commands.ThreadNotFound attribute)

argument (discord.ext.commands.UserNotFound attribute)

ArgumentParsingError

arguments_heading (discord.ext.commands.DefaultHelpCommand attribute)

artist (discord.Spotify property)

artists (discord.Spotify property)

as_chunks() (in module discord.utils)

Asset (class in discord)

assets (discord.Activity attribute)

assets (discord.Game attribute)

assets (discord.Streaming attribute)

attach_files (discord.Permissions attribute)

Attachment (class in discord)

attachment (discord.AppCommandOptionType attribute)

AttachmentFlags (class in discord)

attachments (discord.Message attribute)

attachments (discord.MessageSnapshot attribute)

attribute (discord.ext.commands.Flag attribute)

AudioSource (class in discord)

audit_logs() (discord.Guild method)

AuditLogAction (class in discord)

AuditLogActionCategory (class in discord)

AuditLogChanges (class in discord)

AuditLogDiff (class in discord)

AuditLogEntry (class in discord)

author (discord.Embed property)

author (discord.ext.commands.Context attribute)

author (discord.Message attribute)

auto (discord.VideoQualityMode attribute)

auto_archive_duration (discord.app_commands.AppCommandThread attribute)

auto_archive_duration (discord.AuditLogDiff attribute)

auto_archive_duration (discord.Thread attribute)

auto_mod_badge (discord.ApplicationFlags attribute)

auto_moderation (discord.Intents attribute)

auto_moderation_action (discord.MessageType attribute)

auto_moderation_configuration (discord.Intents attribute)

auto_moderation_execution (discord.Intents attribute)

autocomplete (discord.app_commands.Argument attribute)

autocomplete (discord.app_commands.Parameter attribute)

autocomplete (discord.InteractionType attribute)

autocomplete() (discord.app_commands.Command method)

autocomplete() (discord.app_commands.Transformer method)

autocomplete() (discord.ext.commands.HybridCommand method)

autocomplete() (discord.ext.commands.HybridGroup method)

autocomplete() (discord.InteractionResponse method)

autocomplete() (in module discord.app_commands)

autocomplete_result (discord.InteractionResponseType attribute)

automod_block_message (discord.AuditLogAction attribute)

automod_flag_message (discord.AuditLogAction attribute)

automod_quarantined_username (discord.MemberFlags attribute)

automod_rule_create (discord.AuditLogAction attribute)

automod_rule_delete (discord.AuditLogAction attribute)

automod_rule_update (discord.AuditLogAction attribute)

automod_timeout_member (discord.AuditLogAction attribute)

AutoModAction (class in discord)

AutoModPresets (class in discord)

AutoModRule (class in discord)

AutoModRuleAction (class in discord)

AutoModRuleActionType (class in discord)

AutoModRuleEventType (class in discord)

AutoModRuleTriggerType (class in discord)

AutoModTrigger (class in discord)

AutoShardedBot (class in discord.ext.commands)

AutoShardedClient (class in discord)

available (discord.AuditLogDiff attribute)

available (discord.Emoji attribute)

available (discord.GuildSticker attribute)

available (discord.SKUFlags attribute)

available (discord.SoundboardSound attribute)

available_tags (discord.AuditLogDiff attribute)

available_tags (discord.ForumChannel property)

avatar (discord.abc.User property)

avatar (discord.AuditLogDiff attribute)

avatar (discord.ClientUser property)

avatar (discord.Member property)

avatar (discord.SyncWebhook property)

avatar (discord.TeamMember property)

avatar (discord.User property)

avatar (discord.Webhook property)

avatar (discord.WidgetMember attribute)

avatar_decoration (discord.abc.User property)

avatar_decoration (discord.ClientUser property)

avatar_decoration (discord.Member property)

avatar_decoration (discord.TeamMember property)

avatar_decoration (discord.User property)

avatar_decoration (discord.WidgetMember property)

avatar_decoration_sku_id (discord.abc.User property)

avatar_decoration_sku_id (discord.ClientUser property)

avatar_decoration_sku_id (discord.Member property)

avatar_decoration_sku_id (discord.TeamMember property)

avatar_decoration_sku_id (discord.User property)

avatar_decoration_sku_id (discord.WidgetMember property)

average_latency (discord.VoiceClient property)

B

b (discord.Colour property)

BadArgument

BadBoolArgument

BadColourArgument

BadFlagArgument

BadInviteArgument

BadLiteralArgument

BadUnionArgument

ban (discord.AuditLogAction attribute)

ban() (discord.Guild method)

ban() (discord.Member method)

ban_members (discord.Permissions attribute)

BanEntry (class in discord)

banned (discord.BulkBanResult attribute)

banner (discord.AuditLogDiff attribute)

banner (discord.ClientUser property)

banner (discord.Guild property)

banner (discord.Member property)

banner (discord.PartialInviteGuild property)

banner (discord.StickerPack property)

banner (discord.TeamMember property)

banner (discord.User property)

banner (discord.WidgetMember property)

bans (discord.Intents attribute)

bans() (discord.Guild method)

BaseActivity (class in discord)

BaseSoundboardSound (class in discord)

basic (discord.VoiceChannelEffectAnimationType attribute)

before (discord.AuditLogChanges attribute)

before (discord.AuditLogEntry attribute)

before_identify_hook() (discord.Client method)

before_identify_hook() (discord.ext.commands.Bot method)

before_invoke() (discord.ext.commands.Bot method)

before_invoke() (discord.ext.commands.Command method)

before_invoke() (discord.ext.commands.Group method)

before_invoke() (discord.ext.commands.HybridCommand method)

before_invoke() (discord.ext.commands.HybridGroup method)

before_invoke() (in module discord.ext.commands)

before_loop() (discord.ext.tasks.Loop method)

bitrate (discord.AuditLogDiff attribute)

bitrate (discord.StageChannel attribute)

bitrate (discord.VoiceChannel attribute)

bitrate_limit (discord.Guild property)

block_member_interactions (discord.AutoModRuleActionType attribute)

block_message (discord.AutoModRuleActionType attribute)

blue() (discord.Colour class method)

blurple (discord.ButtonStyle attribute)

blurple (discord.DefaultAvatar attribute)

blurple() (discord.Colour class method)

boolean (discord.AppCommandOptionType attribute)

Bot (class in discord.ext.commands)

bot (discord.abc.User attribute)

bot (discord.ClientUser attribute)

bot (discord.ext.commands.Context attribute)

bot (discord.Member property)

bot (discord.TeamMember attribute)

bot (discord.User attribute)

bot (discord.WidgetMember attribute)

bot_add (discord.AuditLogAction attribute)

bot_check() (discord.ext.commands.Cog method)

bot_check_once() (discord.ext.commands.Cog method)

bot_has_any_role() (in module discord.ext.commands)

bot_has_guild_permissions() (in module discord.ext.commands)

bot_has_permissions() (in module discord.app_commands.checks)

bot_has_permissions() (in module discord.ext.commands)

bot_has_role() (in module discord.ext.commands)

bot_http_interactions (discord.PublicUserFlags attribute)

bot_http_interactions (discord.UserFlags attribute)

bot_id (discord.RoleTags attribute)

bot_permissions (discord.ext.commands.Context attribute)

bot_public (discord.AppInfo attribute)

bot_require_code_grant (discord.AppInfo attribute)

BotIntegration (class in discord)

BotMissingAnyRole

BotMissingPermissions, [1]

BotMissingRole

brand_green() (discord.Colour class method)

brand_red() (discord.Colour class method)

brazil_portuguese (discord.Locale attribute)

brief (discord.ext.commands.Command attribute)

british_english (discord.Locale attribute)

BucketType (class in discord.ext.commands)

bug_hunter (discord.PublicUserFlags attribute)

bug_hunter (discord.UserFlags attribute)

bug_hunter_level_2 (discord.PublicUserFlags attribute)

bug_hunter_level_2 (discord.UserFlags attribute)

bulgarian (discord.Locale attribute)

bulk_ban() (discord.Guild method)

BulkBanResult (class in discord)

burst (discord.RawReactionActionEvent attribute)

burst (discord.ReactionType attribute)

burst_colors (discord.RawReactionActionEvent property)

burst_colours (discord.RawReactionActionEvent attribute)

burst_count (discord.Reaction attribute)

Button (class in discord)

Button (class in discord.ui)

button (discord.ComponentType attribute)

button() (in module discord.ui)

buttons (discord.Activity attribute)

ButtonStyle (class in discord)

by_category() (discord.Guild method)

bypasses_verification (discord.MemberFlags attribute)

C

cached_message (discord.MessageReference property)

cached_message (discord.MessageSnapshot attribute)

cached_message (discord.RawMessageDeleteEvent attribute)

cached_message (discord.RawMessageUpdateEvent attribute)

cached_messages (discord.Client property)

cached_messages (discord.ext.commands.Bot property)

cached_messages (discord.RawBulkMessageDeleteEvent attribute)

call (discord.Message attribute)

call (discord.MessageType attribute)

callback (discord.app_commands.Command property)

callback (discord.app_commands.ContextMenu property)

callback (discord.ext.commands.Command attribute)

callback() (discord.ui.Button method)

callback() (discord.ui.ChannelSelect method)

callback() (discord.ui.DynamicItem method)

callback() (discord.ui.Item method)

callback() (discord.ui.MentionableSelect method)

callback() (discord.ui.RoleSelect method)

callback() (discord.ui.Select method)

callback() (discord.ui.TextInput method)

callback() (discord.ui.UserSelect method)

CallMessage (class in discord)

can_run() (discord.ext.commands.Command method)

can_run() (discord.ext.commands.Group method)

can_run() (discord.ext.commands.HybridCommand method)

can_run() (discord.ext.commands.HybridGroup method)

cancel() (discord.ext.tasks.Loop method)

cancel() (discord.ScheduledEvent method)

canceled (discord.EventStatus attribute)

canceled_at (discord.Subscription attribute)

cancelled (discord.EventStatus attribute)

case_insensitive (discord.ext.commands.Bot attribute)

case_insensitive (discord.ext.commands.Group attribute)

case_insensitive (discord.ext.commands.GroupMixin attribute)

categories (discord.Guild property)

category (discord.abc.GuildChannel property)

category (discord.AuditLogEntry attribute)

category (discord.CategoryChannel property)

category (discord.ChannelType attribute)

category (discord.ext.commands.BucketType attribute)

category (discord.ForumChannel property)

category (discord.StageChannel property)

category (discord.TextChannel property)

category (discord.Thread property)

category (discord.VoiceChannel property)

category_id (discord.ForumChannel attribute)

category_id (discord.StageChannel attribute)

category_id (discord.TextChannel attribute)

category_id (discord.Thread property)

category_id (discord.VoiceChannel attribute)

CategoryChannel (class in discord)

CategoryChannelConverter (class in discord.ext.commands)

change_interval() (discord.ext.tasks.Loop method)

change_nickname (discord.Permissions attribute)

change_presence() (discord.AutoShardedClient method)

change_presence() (discord.Client method)

change_presence() (discord.ext.commands.Bot method)

change_voice_state() (discord.Guild method)

changed_roles (discord.abc.GuildChannel property)

changed_roles (discord.CategoryChannel property)

changed_roles (discord.ForumChannel property)

changed_roles (discord.StageChannel property)

changed_roles (discord.TextChannel property)

changed_roles (discord.VoiceChannel property)

changes (discord.AuditLogEntry attribute)

channel (discord.AppCommandOptionType attribute)

channel (discord.AppCommandPermissionType attribute)

channel (discord.AuditLogDiff attribute)

channel (discord.AutoModAction property)

channel (discord.ext.commands.BucketType attribute)

channel (discord.ext.commands.Context attribute)

channel (discord.ext.commands.NSFWChannelRequired attribute)

channel (discord.Interaction attribute)

channel (discord.Invite attribute)

channel (discord.Message attribute)

channel (discord.PartialMessage attribute)

channel (discord.ScheduledEvent property)

channel (discord.SelectDefaultValueType attribute)

channel (discord.StageInstance attribute)

channel (discord.SyncWebhook property)

channel (discord.VoiceChannelEffect attribute)

channel (discord.VoiceClient attribute)

channel (discord.VoiceState attribute)

channel (discord.Webhook property)

channel (discord.WelcomeChannel attribute)

channel_create (discord.AuditLogAction attribute)

channel_delete (discord.AuditLogAction attribute)

channel_follow_add (discord.MessageType attribute)

channel_follower (discord.WebhookType attribute)

channel_icon_change (discord.MessageType attribute)

channel_id (discord.AutoModAction attribute)

channel_id (discord.AutoModRuleAction attribute)

channel_id (discord.DeletedReferencedMessage property)

channel_id (discord.Interaction property)

channel_id (discord.MessageReference attribute)

channel_id (discord.RawBulkMessageDeleteEvent attribute)

channel_id (discord.RawMessageDeleteEvent attribute)

channel_id (discord.RawMessageUpdateEvent attribute)

channel_id (discord.RawPollVoteActionEvent attribute)

channel_id (discord.RawReactionActionEvent attribute)

channel_id (discord.RawReactionClearEmojiEvent attribute)

channel_id (discord.RawReactionClearEvent attribute)

channel_id (discord.RawTypingEvent attribute)

channel_id (discord.StageInstance attribute)

channel_id (discord.SyncWebhook attribute)

channel_id (discord.Webhook attribute)

channel_mentions (discord.Message attribute)

channel_message (discord.InteractionResponseType attribute)

channel_name_change (discord.MessageType attribute)

channel_types (discord.app_commands.Argument attribute)

channel_types (discord.app_commands.Parameter attribute)

channel_types (discord.app_commands.Transformer property)

channel_types (discord.SelectMenu attribute)

channel_types (discord.ui.ChannelSelect property)

channel_update (discord.AuditLogAction attribute)

ChannelFlags (class in discord)

ChannelNotFound

ChannelNotReadable

channels (discord.CategoryChannel property)

channels (discord.Guild property)

channels (discord.Widget attribute)

ChannelSelect (class in discord.ui)

ChannelType (class in discord)

char (discord.ext.commands.InvalidEndOfQuotedStringError attribute)

chat_input (discord.AppCommandType attribute)

chat_input_command (discord.MessageType attribute)

check() (discord.ext.commands.Bot method)

check() (in module discord.app_commands)

check() (in module discord.ext.commands)

check_any() (in module discord.ext.commands)

check_once() (discord.ext.commands.Bot method)

CheckAnyFailure

CheckFailure, [1]

checks (discord.app_commands.Command attribute)

checks (discord.app_commands.ContextMenu attribute)

checks (discord.ext.commands.CheckAnyFailure attribute)

checks (discord.ext.commands.Command attribute)

children (discord.ActionRow attribute)

children (discord.ui.Modal property)

children (discord.ui.View property)

chinese (discord.Locale attribute)

Choice (class in discord.app_commands)

choice_name (discord.app_commands.TranslationContextLocation attribute)

choices (discord.app_commands.Argument attribute)

choices (discord.app_commands.Parameter attribute)

choices (discord.app_commands.Transformer property)

choices() (in module discord.app_commands)

chunk() (discord.Guild method)

chunked (discord.Guild property)

clean_content (class in discord.ext.commands)

clean_content (discord.InteractionMessage attribute)

clean_content (discord.Message attribute)

clean_content (discord.WebhookMessage attribute)

clean_params (discord.ext.commands.Command property)

clean_params (discord.ext.commands.Group property)

clean_params (discord.ext.commands.HybridGroup property)

clean_prefix (discord.ext.commands.Context property)

cleanup() (discord.AudioSource method)

cleanup() (discord.FFmpegAudio method)

cleanup() (discord.PCMVolumeTransformer method)

cleanup() (discord.VoiceProtocol method)

clear() (discord.Client method)

clear() (discord.ext.commands.Bot method)

clear() (discord.ext.commands.Paginator method)

clear() (discord.Reaction method)

clear_commands() (discord.app_commands.CommandTree method)

clear_exception_types() (discord.ext.tasks.Loop method)

clear_fields() (discord.Embed method)

clear_items() (discord.ui.Modal method)

clear_items() (discord.ui.View method)

clear_reaction() (discord.InteractionMessage method)

clear_reaction() (discord.Message method)

clear_reaction() (discord.PartialMessage method)

clear_reaction() (discord.WebhookMessage method)

clear_reactions() (discord.InteractionMessage method)

clear_reactions() (discord.Message method)

clear_reactions() (discord.PartialMessage method)

clear_reactions() (discord.WebhookMessage method)

Client (class in discord)

client (discord.Interaction property)

client_status (discord.Member attribute)

client_status (discord.RawPresenceUpdateEvent attribute)

ClientException

ClientStatus (class in discord)

ClientUser (class in discord)

clip (discord.AttachmentFlags attribute)

clone() (discord.abc.GuildChannel method)

clone() (discord.CategoryChannel method)

clone() (discord.ForumChannel method)

clone() (discord.StageChannel method)

clone() (discord.TextChannel method)

clone() (discord.VoiceChannel method)

close() (discord.AutoShardedClient method)

close() (discord.Client method)

close() (discord.ext.commands.Bot method)

close_page() (discord.ext.commands.Paginator method)

close_quote (discord.ext.commands.ExpectedClosingQuoteError attribute)

code (discord.AuditLogDiff attribute)

code (discord.ConnectionClosed attribute)

code (discord.HTTPException attribute)

code (discord.Invite attribute)

code (discord.opus.OpusError attribute)

code (discord.ResolvedInvite attribute)

code (discord.Template attribute)

Cog (class in discord.ext.commands)

cog (discord.ext.commands.Command attribute)

cog (discord.ext.commands.Context property)

cog (discord.ext.commands.HelpCommand property)

cog_after_invoke() (discord.ext.commands.Cog method)

cog_app_command_error() (discord.ext.commands.Cog method)

cog_before_invoke() (discord.ext.commands.Cog method)

cog_check() (discord.ext.commands.Cog method)

cog_command_error() (discord.ext.commands.Cog method)

cog_load() (discord.ext.commands.Cog method)

cog_name (discord.ext.commands.Command property)

cog_name (discord.ext.commands.Group property)

cog_name (discord.ext.commands.HybridGroup property)

cog_unload() (discord.ext.commands.Cog method)

CogMeta (class in discord.ext.commands)

cogs (discord.ext.commands.Bot property)

color (discord.AuditLogDiff attribute)

color (discord.ClientUser property)

color (discord.Member property)

color (discord.Role property)

color (discord.Spotify property)

color (discord.TeamMember property)

color (discord.User property)

color (discord.WidgetMember property)

Colour (class in discord)

colour (discord.AuditLogDiff attribute)

colour (discord.ClientUser property)

colour (discord.Embed attribute)

colour (discord.Member property)

colour (discord.Role property)

colour (discord.Spotify property)

colour (discord.TeamMember property)

colour (discord.User property)

colour (discord.WidgetMember property)

ColourConverter (class in discord.ext.commands)

Command (class in discord.app_commands)

Command (class in discord.ext.commands)

command (discord.app_commands.CommandInvokeError attribute)

command (discord.app_commands.CommandSignatureMismatch attribute)

command (discord.app_commands.GuildAppCommandPermissions attribute)

command (discord.app_commands.Parameter attribute)

command (discord.ext.commands.Context attribute)

command (discord.Interaction attribute)

command() (discord.app_commands.CommandTree method)

command() (discord.app_commands.Group method)

command() (discord.ext.commands.Bot method)

command() (discord.ext.commands.Group method)

command() (discord.ext.commands.GroupMixin method)

command() (discord.ext.commands.HybridGroup method)

command() (in module discord.app_commands)

command() (in module discord.ext.commands)

command_attrs (discord.ext.commands.CogMeta attribute)

command_attrs (discord.ext.commands.HelpCommand attribute)

command_callback() (discord.ext.commands.HelpCommand method)

command_description (discord.app_commands.TranslationContextLocation attribute)

command_failed (discord.ext.commands.Context attribute)

command_failed (discord.Interaction attribute)

command_name (discord.app_commands.TranslationContextLocation attribute)

command_not_found() (discord.ext.commands.HelpCommand method)

command_prefix (discord.ext.commands.Bot attribute)

CommandAlreadyRegistered

CommandError

CommandInvokeError, [1]

CommandLimitReached

CommandNotFound, [1]

CommandOnCooldown, [1]

CommandRegistrationError

commands (discord.app_commands.Group property)

commands (discord.ext.commands.Bot property)

commands (discord.ext.commands.Group property)

commands (discord.ext.commands.GroupMixin property)

commands (discord.ext.commands.HybridGroup property)

commands_heading (discord.ext.commands.DefaultHelpCommand attribute)

commands_heading (discord.ext.commands.MinimalHelpCommand attribute)

CommandSignatureMismatch

CommandSyncFailure

CommandTree (class in discord.app_commands)

competing (discord.ActivityType attribute)

completed (discord.EventStatus attribute)

completed_home_actions (discord.MemberFlags attribute)

completed_onboarding (discord.MemberFlags attribute)

Component (class in discord)

component (discord.InteractionType attribute)

components (discord.Message attribute)

components (discord.MessageSnapshot attribute)

ComponentType (class in discord)

connect (discord.Permissions attribute)

connect() (discord.abc.Connectable method)

connect() (discord.AutoShardedClient method)

connect() (discord.Client method)

connect() (discord.ext.commands.Bot method)

connect() (discord.ShardInfo method)

connect() (discord.StageChannel method)

connect() (discord.VoiceChannel method)

connect() (discord.VoiceProtocol method)

Connectable (class in discord.abc)

connected_channel (discord.WidgetMember attribute)

ConnectionClosed

consumable (discord.SKUType attribute)

consume() (discord.Entitlement method)

consumed (discord.Entitlement attribute)

contains_explicit_media (discord.AttachmentFlags attribute)

contains_explicit_media (discord.EmbedFlags attribute)

content (discord.AutoModAction attribute)

content (discord.Message attribute)

content (discord.MessageSnapshot attribute)

content_inventory_entry (discord.EmbedFlags attribute)

content_type (discord.Attachment attribute)

ContentFilter (class in discord)

Context (class in discord.ext.commands)

context (discord.app_commands.TranslationError attribute)

context (discord.ext.commands.HelpCommand attribute)

context (discord.Interaction attribute)

context_menu() (discord.app_commands.CommandTree method)

context_menu() (in module discord.app_commands)

context_menu_command (discord.MessageType attribute)

ContextMenu (class in discord.app_commands)

ConversionError

convert() (discord.ext.commands.CategoryChannelConverter method)

convert() (discord.ext.commands.clean_content method)

convert() (discord.ext.commands.ColourConverter method)

convert() (discord.ext.commands.Converter method)

convert() (discord.ext.commands.EmojiConverter method)

convert() (discord.ext.commands.FlagConverter class method)

convert() (discord.ext.commands.ForumChannelConverter method)

convert() (discord.ext.commands.GameConverter method)

convert() (discord.ext.commands.GuildChannelConverter method)

convert() (discord.ext.commands.GuildConverter method)

convert() (discord.ext.commands.GuildStickerConverter method)

convert() (discord.ext.commands.InviteConverter method)

convert() (discord.ext.commands.MemberConverter method)

convert() (discord.ext.commands.MessageConverter method)

convert() (discord.ext.commands.ObjectConverter method)

convert() (discord.ext.commands.PartialEmojiConverter method)

convert() (discord.ext.commands.PartialMessageConverter method)

convert() (discord.ext.commands.RoleConverter method)

convert() (discord.ext.commands.ScheduledEventConverter method)

convert() (discord.ext.commands.SoundboardSoundConverter method)

convert() (discord.ext.commands.StageChannelConverter method)

convert() (discord.ext.commands.TextChannelConverter method)

convert() (discord.ext.commands.ThreadConverter method)

convert() (discord.ext.commands.UserConverter method)

convert() (discord.ext.commands.VoiceChannelConverter method)

Converter (class in discord.ext.commands)

converter (discord.ext.commands.ConversionError attribute)

converter (discord.ext.commands.Parameter property)

converters (discord.ext.commands.BadUnionArgument attribute)

Cooldown (class in discord.app_commands)

cooldown (discord.app_commands.CommandOnCooldown attribute)

cooldown (discord.ext.commands.Command property)

cooldown (discord.ext.commands.CommandOnCooldown attribute)

cooldown (discord.ext.commands.Group property)

cooldown (discord.ext.commands.HybridGroup property)

cooldown() (in module discord.app_commands.checks)

cooldown() (in module discord.ext.commands)

cooldown_after_parsing (discord.ext.commands.Command attribute)

copy() (discord.app_commands.Cooldown method)

copy() (discord.Embed method)

copy() (discord.ext.commands.Command method)

copy() (discord.ext.commands.Group method)

copy() (discord.ext.commands.HybridGroup method)

copy() (discord.Poll method)

copy_global_to() (discord.app_commands.CommandTree method)

count (discord.Reaction attribute)

cover (discord.MessageApplication property)

cover_image (discord.AppInfo property)

cover_image (discord.AuditLogDiff attribute)

cover_image (discord.PartialAppInfo property)

cover_image (discord.ScheduledEvent property)

cover_sticker (discord.StickerPack attribute)

cover_sticker_id (discord.StickerPack attribute)

create (discord.AuditLogActionCategory attribute)

create_application_emoji() (discord.Client method)

create_application_emoji() (discord.ext.commands.Bot method)

create_automod_rule() (discord.Guild method)

create_category() (discord.Guild method)

create_category_channel() (discord.Guild method)

create_custom_emoji() (discord.Guild method)

create_dm() (discord.Client method)

create_dm() (discord.ext.commands.Bot method)

create_dm() (discord.Member method)

create_dm() (discord.User method)

create_entitlement() (discord.Client method)

create_entitlement() (discord.ext.commands.Bot method)

create_events (discord.Permissions attribute)

create_expressions (discord.Permissions attribute)

create_forum() (discord.CategoryChannel method)

create_forum() (discord.Guild method)

create_guild() (discord.Client method)

create_guild() (discord.ext.commands.Bot method)

create_guild() (discord.Template method)

create_instance() (discord.StageChannel method)

create_instant_invite (discord.Permissions attribute)

create_integration() (discord.Guild method)

create_invite() (discord.abc.GuildChannel method)

create_invite() (discord.CategoryChannel method)

create_invite() (discord.ForumChannel method)

create_invite() (discord.StageChannel method)

create_invite() (discord.TextChannel method)

create_invite() (discord.VoiceChannel method)

create_polls (discord.Permissions attribute)

create_private_threads (discord.Permissions attribute)

create_public_threads (discord.Permissions attribute)

create_role() (discord.Guild method)

create_scheduled_event() (discord.Guild method)

create_soundboard_sound() (discord.Guild method)

create_stage_channel() (discord.CategoryChannel method)

create_stage_channel() (discord.Guild method)

create_sticker() (discord.Guild method)

create_tag() (discord.ForumChannel method)

create_template() (discord.Guild method)

create_text_channel() (discord.CategoryChannel method)

create_text_channel() (discord.Guild method)

create_thread() (discord.ForumChannel method)

create_thread() (discord.InteractionMessage method)

create_thread() (discord.Message method)

create_thread() (discord.PartialMessage method)

create_thread() (discord.TextChannel method)

create_thread() (discord.WebhookMessage method)

create_voice_channel() (discord.CategoryChannel method)

create_voice_channel() (discord.Guild method)

create_webhook() (discord.ForumChannel method)

create_webhook() (discord.StageChannel method)

create_webhook() (discord.TextChannel method)

create_webhook() (discord.VoiceChannel method)

created_at (discord.abc.GuildChannel property)

created_at (discord.app_commands.AppCommandChannel property)

created_at (discord.app_commands.AppCommandThread property)

created_at (discord.AuditLogEntry attribute)

created_at (discord.BaseActivity property)

created_at (discord.CategoryChannel property)

created_at (discord.ClientUser property)

created_at (discord.DMChannel property)

created_at (discord.Emoji property)

created_at (discord.Entitlement property)

created_at (discord.ForumChannel property)

created_at (discord.GroupChannel property)

created_at (discord.Guild property)

created_at (discord.GuildPreview property)

created_at (discord.Interaction property)

created_at (discord.InteractionMessage property)

created_at (discord.Invite attribute)

created_at (discord.Member property)

created_at (discord.Message property)

created_at (discord.MessageInteraction property)

created_at (discord.MessageInteractionMetadata property)

created_at (discord.MessageSnapshot attribute)

created_at (discord.Object property)

created_at (discord.PartialEmoji property)

created_at (discord.PartialInviteChannel property)

created_at (discord.PartialInviteGuild property)

created_at (discord.PartialMessage property)

created_at (discord.PartialMessageable property)

created_at (discord.Poll property)

created_at (discord.Role property)

created_at (discord.SKU property)

created_at (discord.SoundboardSound property)

created_at (discord.Spotify property)

created_at (discord.StageChannel property)

created_at (discord.Sticker property)

created_at (discord.Subscription property)

created_at (discord.SyncWebhook property)

created_at (discord.TeamMember property)

created_at (discord.Template attribute)

created_at (discord.TextChannel property)

created_at (discord.Thread property)

created_at (discord.User property)

created_at (discord.VoiceChannel property)

created_at (discord.VoiceChannelSoundEffect property)

created_at (discord.Webhook property)

created_at (discord.WebhookMessage property)

created_at (discord.Widget property)

created_at (discord.WidgetChannel property)

created_at (discord.WidgetMember property)

creation_date (discord.ForumOrderType attribute)

creator (discord.AutoModRule property)

creator (discord.ScheduledEvent attribute)

creator (discord.Template attribute)

creator_id (discord.AutoModRule attribute)

creator_id (discord.ScheduledEvent attribute)

creator_monetization_request_created (discord.AuditLogAction attribute)

creator_monetization_terms_accepted (discord.AuditLogAction attribute)

croatian (discord.Locale attribute)

crossposted (discord.MessageFlags attribute)

current_argument (discord.ext.commands.Context attribute)

current_loop (discord.ext.tasks.Loop property)

current_parameter (discord.ext.commands.Context attribute)

current_period_end (discord.Subscription attribute)

current_period_start (discord.Subscription attribute)

custom (discord.ActivityType attribute)

custom_id (discord.Button attribute)

custom_id (discord.SelectMenu attribute)

custom_id (discord.TextInput attribute)

custom_id (discord.ui.Button property)

custom_id (discord.ui.ChannelSelect property)

custom_id (discord.ui.DynamicItem property)

custom_id (discord.ui.MentionableSelect property)

custom_id (discord.ui.Modal attribute)

custom_id (discord.ui.RoleSelect property)

custom_id (discord.ui.Select property)

custom_id (discord.ui.TextInput property)

custom_id (discord.ui.UserSelect property)

custom_install_url (discord.AppInfo attribute)

custom_message (discord.AutoModRuleAction attribute)

CustomActivity (class in discord)

czech (discord.Locale attribute)

D

danger (discord.ButtonStyle attribute)

danish (discord.Locale attribute)

dark_blue() (discord.Colour class method)

dark_embed() (discord.Colour class method)

dark_gold() (discord.Colour class method)

dark_gray() (discord.Colour class method)

dark_green() (discord.Colour class method)

dark_grey() (discord.Colour class method)

dark_magenta() (discord.Colour class method)

dark_orange() (discord.Colour class method)

dark_purple() (discord.Colour class method)

dark_red() (discord.Colour class method)

dark_teal() (discord.Colour class method)

dark_theme() (discord.Colour class method)

darker_gray() (discord.Colour class method)

darker_grey() (discord.Colour class method)

data (discord.app_commands.TranslationContext attribute)

data (discord.Interaction attribute)

data (discord.RawMessageUpdateEvent attribute)

data (discord.RawThreadMembersUpdate attribute)

data (discord.RawThreadUpdateEvent attribute)

deaf (discord.AuditLogDiff attribute)

deaf (discord.VoiceState attribute)

deafen_members (discord.Permissions attribute)

deafened (discord.WidgetMember attribute)

default (discord.app_commands.Parameter attribute)

default (discord.ext.commands.BucketType attribute)

default (discord.ext.commands.Flag attribute)

default (discord.ext.commands.Parameter property)

default (discord.MessageReferenceType attribute)

default (discord.MessageType attribute)

default (discord.NSFWLevel attribute)

default (discord.PollLayoutType attribute)

default (discord.SelectOption attribute)

default (discord.TextInput property)

default (discord.ui.TextInput property)

default() (discord.Colour class method)

default() (discord.Intents class method)

default_argument_description (discord.ext.commands.DefaultHelpCommand attribute)

default_auto_archive_duration (discord.AuditLogDiff attribute)

default_auto_archive_duration (discord.ForumChannel attribute)

default_auto_archive_duration (discord.TextChannel attribute)

default_avatar (discord.abc.User property)

default_avatar (discord.ClientUser property)

default_avatar (discord.Member property)

default_avatar (discord.SyncWebhook property)

default_avatar (discord.TeamMember property)

default_avatar (discord.User property)

default_avatar (discord.Webhook property)

default_avatar (discord.WidgetMember property)

default_layout (discord.ForumChannel attribute)

default_member_permissions (discord.app_commands.AppCommand attribute)

default_notifications (discord.AuditLogDiff attribute)

default_notifications (discord.Guild attribute)

default_permissions (discord.app_commands.Command attribute)

default_permissions (discord.app_commands.ContextMenu attribute)

default_permissions (discord.app_commands.Group attribute)

default_permissions() (in module discord.app_commands)

default_reaction_emoji (discord.AuditLogDiff attribute)

default_reaction_emoji (discord.ForumChannel attribute)

default_role (discord.Guild property)

default_sort_order (discord.ForumChannel attribute)

default_thread_slowmode_delay (discord.AuditLogDiff attribute)

default_thread_slowmode_delay (discord.ForumChannel attribute)

default_thread_slowmode_delay (discord.TextChannel attribute)

default_values (discord.ui.ChannelSelect property)

default_values (discord.ui.MentionableSelect property)

default_values (discord.ui.RoleSelect property)

default_values (discord.ui.UserSelect property)

DefaultAvatar (class in discord)

DefaultHelpCommand (class in discord.ext.commands)

defer() (discord.ext.commands.Context method)

defer() (discord.InteractionResponse method)

deferred_channel_message (discord.InteractionResponseType attribute)

deferred_message_update (discord.InteractionResponseType attribute)

delete (discord.AuditLogActionCategory attribute)

delete() (discord.abc.GuildChannel method)

delete() (discord.app_commands.AppCommand method)

delete() (discord.AutoModRule method)

delete() (discord.CategoryChannel method)

delete() (discord.Emoji method)

delete() (discord.Entitlement method)

delete() (discord.ForumChannel method)

delete() (discord.Guild method)

delete() (discord.GuildSticker method)

delete() (discord.Integration method)

delete() (discord.InteractionMessage method)

delete() (discord.Invite method)

delete() (discord.Message method)

delete() (discord.PartialMessage method)

delete() (discord.Role method)

delete() (discord.ScheduledEvent method)

delete() (discord.SoundboardSound method)

delete() (discord.StageChannel method)

delete() (discord.StageInstance method)

delete() (discord.SyncWebhook method)

delete() (discord.SyncWebhookMessage method)

delete() (discord.Template method)

delete() (discord.TextChannel method)

delete() (discord.Thread method)

delete() (discord.VoiceChannel method)

delete() (discord.Webhook method)

delete() (discord.WebhookMessage method)

delete_emoji() (discord.Guild method)

delete_invite() (discord.Client method)

delete_invite() (discord.ext.commands.Bot method)

delete_message() (discord.SyncWebhook method)

delete_message() (discord.Webhook method)

delete_messages() (discord.StageChannel method)

delete_messages() (discord.TextChannel method)

delete_messages() (discord.Thread method)

delete_messages() (discord.VoiceChannel method)

delete_original_response() (discord.Interaction method)

delete_sticker() (discord.Guild method)

deleted (discord.Entitlement attribute)

DeletedReferencedMessage (class in discord)

deny (discord.AuditLogDiff attribute)

describe() (in module discord.app_commands)

description (discord.app_commands.AppCommand attribute)

description (discord.app_commands.AppCommandGroup attribute)

description (discord.app_commands.Argument attribute)

description (discord.app_commands.Command attribute)

description (discord.app_commands.Group attribute)

description (discord.app_commands.Parameter attribute)

description (discord.AppInfo attribute)

description (discord.Attachment attribute)

description (discord.AuditLogDiff attribute)

description (discord.Embed attribute)

description (discord.ext.commands.Bot attribute)

description (discord.ext.commands.Cog property)

description (discord.ext.commands.CogMeta attribute)

description (discord.ext.commands.Command attribute)

description (discord.ext.commands.Flag attribute)

description (discord.ext.commands.Parameter property)

description (discord.File attribute)

description (discord.Guild attribute)

description (discord.GuildPreview attribute)

description (discord.GuildSticker attribute)

description (discord.IntegrationApplication attribute)

description (discord.MessageApplication attribute)

description (discord.PartialAppInfo attribute)

description (discord.PartialInviteGuild attribute)

description (discord.ScheduledEvent attribute)

description (discord.SelectOption attribute)

description (discord.StandardSticker attribute)

description (discord.Sticker attribute)

description (discord.StickerPack attribute)

description (discord.Template attribute)

description (discord.WelcomeChannel attribute)

description (discord.WelcomeScreen attribute)

description_localizations (discord.app_commands.AppCommand attribute)

description_localizations (discord.app_commands.AppCommandGroup attribute)

description_localizations (discord.app_commands.Argument attribute)

desktop_status (discord.ClientStatus property)

desktop_status (discord.Member property)

details (discord.Activity attribute)

details (discord.Streaming attribute)

developer (discord.TeamMemberRole attribute)

developer_gift (discord.EntitlementType attribute)

did_rejoin (discord.MemberFlags attribute)

disabled (discord.Button attribute)

disabled (discord.ContentFilter attribute)

disabled (discord.MFALevel attribute)

disabled (discord.SelectMenu attribute)

disabled (discord.ui.Button property)

disabled (discord.ui.ChannelSelect property)

disabled (discord.ui.MentionableSelect property)

disabled (discord.ui.RoleSelect property)

disabled (discord.ui.Select property)

disabled (discord.ui.UserSelect property)

DisabledCommand

disconnect() (discord.ShardInfo method)

disconnect() (discord.VoiceClient method)

disconnect() (discord.VoiceProtocol method)

discord.ext.commands.Author (in module discord)

discord.ext.commands.CurrentChannel (in module discord)

discord.ext.commands.CurrentGuild (in module discord)

discord.ext.commands.on_command() (in module discord)

discord.ext.commands.on_command_completion() (in module discord)

discord.ext.commands.on_command_error() (in module discord)

discord_certified_moderator (discord.PublicUserFlags attribute)

discord_certified_moderator (discord.UserFlags attribute)

DiscordException

DiscordServerError

discoverable_disabled (discord.StageInstance attribute)

discovery_splash (discord.AuditLogDiff attribute)

discovery_splash (discord.Guild property)

discovery_splash (discord.GuildPreview property)

discriminator (discord.abc.User attribute)

discriminator (discord.ClientUser attribute)

discriminator (discord.Member property)

discriminator (discord.TeamMember attribute)

discriminator (discord.User attribute)

discriminator (discord.WidgetMember attribute)

display_avatar (discord.abc.User property)

display_avatar (discord.ClientUser property)

display_avatar (discord.Member property)

display_avatar (discord.SyncWebhook property)

display_avatar (discord.TeamMember property)

display_avatar (discord.User property)

display_avatar (discord.Webhook property)

display_avatar (discord.WidgetMember property)

display_banner (discord.Member property)

display_icon (discord.Member property)

display_icon (discord.Role property)

display_name (discord.abc.User property)

display_name (discord.app_commands.Parameter attribute)

display_name (discord.ClientUser property)

display_name (discord.Member property)

display_name (discord.TeamMember property)

display_name (discord.User property)

display_name (discord.WidgetMember property)

displayed_default (discord.ext.commands.Parameter property)

displayed_name (discord.ext.commands.Parameter property)

dm_channel (discord.app_commands.AppCommandContext property)

dm_channel (discord.Member property)

dm_channel (discord.User property)

dm_help (discord.ext.commands.DefaultHelpCommand attribute)

dm_help (discord.ext.commands.MinimalHelpCommand attribute)

dm_help_threshold (discord.ext.commands.DefaultHelpCommand attribute)

dm_help_threshold (discord.ext.commands.MinimalHelpCommand attribute)

dm_messages (discord.Intents attribute)

dm_only() (in module discord.app_commands)

dm_only() (in module discord.ext.commands)

dm_permission (discord.app_commands.AppCommand attribute)

dm_polls (discord.Intents attribute)

dm_reactions (discord.Intents attribute)

dm_settings_upsell_acknowledged (discord.MemberFlags attribute)

dm_spam_detected_at (discord.Guild property)

dm_typing (discord.Intents attribute)

DMChannel (class in discord)

dms_paused() (discord.Guild method)

dms_paused_until (discord.Guild property)

dnd (discord.Status attribute)

do_not_disturb (discord.Status attribute)

durable (discord.SKUType attribute)

duration (discord.Attachment attribute)

duration (discord.AutoModRuleAction attribute)

duration (discord.CallMessage property)

duration (discord.Poll attribute)

duration (discord.Spotify property)

dutch (discord.Locale attribute)

dynamic_cooldown() (in module discord.app_commands.checks)

dynamic_cooldown() (in module discord.ext.commands)

DynamicItem (class in discord.ui)

E

early_supporter (discord.PublicUserFlags attribute)

early_supporter (discord.UserFlags attribute)

early_verified_bot_developer (discord.PublicUserFlags attribute)

edit() (discord.app_commands.AppCommand method)

edit() (discord.AppInfo method)

edit() (discord.AutoModRule method)

edit() (discord.CategoryChannel method)

edit() (discord.ClientUser method)

edit() (discord.Emoji method)

edit() (discord.ForumChannel method)

edit() (discord.Guild method)

edit() (discord.GuildSticker method)

edit() (discord.InteractionMessage method)

edit() (discord.Member method)

edit() (discord.Message method)

edit() (discord.PartialMessage method)

edit() (discord.Role method)

edit() (discord.ScheduledEvent method)

edit() (discord.SoundboardSound method)

edit() (discord.StageChannel method)

edit() (discord.StageInstance method)

edit() (discord.StreamIntegration method)

edit() (discord.SyncWebhook method)

edit() (discord.SyncWebhookMessage method)

edit() (discord.Template method)

edit() (discord.TextChannel method)

edit() (discord.Thread method)

edit() (discord.VoiceChannel method)

edit() (discord.Webhook method)

edit() (discord.WebhookMessage method)

edit() (discord.WelcomeScreen method)

edit_message() (discord.InteractionResponse method)

edit_message() (discord.SyncWebhook method)

edit_message() (discord.Webhook method)

edit_original_response() (discord.Interaction method)

edit_role_positions() (discord.Guild method)

edit_welcome_screen() (discord.Guild method)

edit_widget() (discord.Guild method)

edited_at (discord.InteractionMessage property)

edited_at (discord.Message property)

edited_at (discord.MessageSnapshot property)

edited_at (discord.WebhookMessage property)

elevated() (discord.Permissions class method)

Embed (class in discord)

embed_links (discord.Permissions attribute)

embedded (discord.ApplicationFlags attribute)

embedded_application (discord.InviteTarget attribute)

EmbedFlags (class in discord)

embeds (discord.Message attribute)

embeds (discord.MessageSnapshot attribute)

Emoji (class in discord)

emoji (discord.Activity attribute)

emoji (discord.AuditLogDiff attribute)

emoji (discord.Button attribute)

emoji (discord.CustomActivity attribute)

emoji (discord.ForumTag attribute)

emoji (discord.GuildSticker attribute)

emoji (discord.PollAnswer property)

emoji (discord.PollMedia attribute)

emoji (discord.RawReactionActionEvent attribute)

emoji (discord.RawReactionClearEmojiEvent attribute)

emoji (discord.Reaction attribute)

emoji (discord.SelectOption property)

emoji (discord.SoundboardDefaultSound attribute)

emoji (discord.SoundboardSound attribute)

emoji (discord.ui.Button property)

emoji (discord.VoiceChannelEffect attribute)

emoji (discord.WelcomeChannel attribute)

emoji_create (discord.AuditLogAction attribute)

emoji_delete (discord.AuditLogAction attribute)

emoji_limit (discord.Guild property)

emoji_update (discord.AuditLogAction attribute)

EmojiConverter (class in discord.ext.commands)

EmojiNotFound

emojis (discord.Client property)

emojis (discord.ext.commands.Bot property)

emojis (discord.Guild attribute)

emojis (discord.GuildPreview attribute)

emojis (discord.Intents attribute)

emojis_and_stickers (discord.Intents attribute)

enable_emoticons (discord.AuditLogDiff attribute)

enable_emoticons (discord.StreamIntegration attribute)

enabled (discord.AuditLogDiff attribute)

enabled (discord.AutoModRule attribute)

enabled (discord.BotIntegration attribute)

enabled (discord.ext.commands.Command attribute)

enabled (discord.Integration attribute)

enabled (discord.StreamIntegration attribute)

enabled (discord.WelcomeScreen property)

end (discord.Activity property)

end (discord.Game property)

end (discord.Spotify property)

end() (discord.Poll method)

end() (discord.ScheduledEvent method)

end_poll() (discord.InteractionMessage method)

end_poll() (discord.Message method)

end_poll() (discord.PartialMessage method)

end_poll() (discord.WebhookMessage method)

end_time (discord.ScheduledEvent attribute)

ended (discord.EventStatus attribute)

ended_timestamp (discord.CallMessage attribute)

ending (discord.SubscriptionStatus attribute)

endpoint (discord.VoiceClient attribute)

ends_at (discord.Entitlement attribute)

Entitlement (class in discord)

entitlement_ids (discord.Subscription attribute)

entitlement_sku_ids (discord.Interaction attribute)

EntitlementOwnerType (class in discord)

entitlements (discord.Interaction attribute)

entitlements() (discord.Client method)

entitlements() (discord.ext.commands.Bot method)

EntitlementType (class in discord)

entity_id (discord.ScheduledEvent attribute)

entity_type (discord.AuditLogDiff attribute)

entity_type (discord.ScheduledEvent attribute)

EntityType (class in discord)

ephemeral (discord.Attachment attribute)

ephemeral (discord.MessageFlags attribute)

error() (discord.app_commands.Command method)

error() (discord.app_commands.CommandTree method)

error() (discord.app_commands.ContextMenu method)

error() (discord.app_commands.Group method)

error() (discord.ext.commands.Command method)

error() (discord.ext.commands.Group method)

error() (discord.ext.commands.HybridCommand method)

error() (discord.ext.commands.HybridGroup method)

error() (discord.ext.tasks.Loop method)

errors (discord.ext.commands.BadLiteralArgument attribute)

errors (discord.ext.commands.BadUnionArgument attribute)

errors (discord.ext.commands.CheckAnyFailure attribute)

escape_markdown (discord.ext.commands.clean_content attribute)

escape_markdown() (in module discord.utils)

escape_mentions() (in module discord.utils)

estimate_pruned_members() (discord.Guild method)

event (discord.ResolvedInvite attribute)

event() (discord.Client method)

event() (discord.ext.commands.Bot method)

event_type (discord.AuditLogDiff attribute)

event_type (discord.AutoModRule attribute)

event_type (discord.RawReactionActionEvent attribute)

events() (discord.Permissions class method)

EventStatus (class in discord)

everyone (discord.AllowedMentions attribute)

exempt_channel_ids (discord.AutoModRule attribute)

exempt_channels (discord.AuditLogDiff attribute)

exempt_channels (discord.AutoModRule attribute)

exempt_role_ids (discord.AutoModRule attribute)

exempt_roles (discord.AuditLogDiff attribute)

exempt_roles (discord.AutoModRule attribute)

ExpectedClosingQuoteError

expire_behavior (discord.AuditLogDiff attribute)

expire_behavior (discord.StreamIntegration property)

expire_behaviour (discord.AuditLogDiff attribute)

expire_behaviour (discord.StreamIntegration attribute)

expire_grace_period (discord.AuditLogDiff attribute)

expire_grace_period (discord.StreamIntegration attribute)

ExpireBehaviour (class in discord)

expires_at (discord.Interaction property)

expires_at (discord.Invite attribute)

expires_at (discord.Poll property)

explicit (discord.NSFWLevel attribute)

explicit_content_filter (discord.AuditLogDiff attribute)

explicit_content_filter (discord.Guild attribute)

expressions (discord.Intents attribute)

ExtensionAlreadyLoaded

ExtensionError

ExtensionFailed

ExtensionNotFound

ExtensionNotLoaded

extensions (discord.ext.commands.Bot property)

external (discord.EntityType attribute)

external_emojis (discord.Permissions attribute)

external_stickers (discord.Permissions attribute)

extra (discord.AuditLogEntry attribute)

extras (discord.app_commands.Command attribute)

extras (discord.app_commands.ContextMenu attribute)

extras (discord.app_commands.Group attribute)

extras (discord.app_commands.locale_str attribute)

extras (discord.ext.commands.Command attribute)

extras (discord.Interaction attribute)

F

fail_if_not_exists (discord.MessageReference attribute)

failed (discord.BulkBanResult attribute)

failed() (discord.ext.tasks.Loop method)

failed_to_mention_some_roles_in_thread (discord.MessageFlags attribute)

fallback (discord.ext.commands.HybridGroup attribute)

fallback_locale (discord.ext.commands.HybridGroup attribute)

features (discord.Guild attribute)

features (discord.GuildPreview attribute)

features (discord.PartialInviteGuild attribute)

fetch() (discord.app_commands.AppCommandChannel method)

fetch() (discord.app_commands.AppCommandThread method)

fetch() (discord.InteractionMessage method)

fetch() (discord.Message method)

fetch() (discord.PartialMessage method)

fetch() (discord.StickerItem method)

fetch() (discord.SyncWebhook method)

fetch() (discord.Webhook method)

fetch() (discord.WebhookMessage method)

fetch_application_emoji() (discord.Client method)

fetch_application_emoji() (discord.ext.commands.Bot method)

fetch_application_emojis() (discord.Client method)

fetch_application_emojis() (discord.ext.commands.Bot method)

fetch_automod_rule() (discord.Guild method)

fetch_automod_rules() (discord.Guild method)

fetch_ban() (discord.Guild method)

fetch_channel() (discord.Client method)

fetch_channel() (discord.ext.commands.Bot method)

fetch_channel() (discord.Guild method)

fetch_channels() (discord.Guild method)

fetch_command() (discord.app_commands.CommandTree method)

fetch_commands() (discord.app_commands.CommandTree method)

fetch_emoji() (discord.Guild method)

fetch_emojis() (discord.Guild method)

fetch_entitlement() (discord.Client method)

fetch_entitlement() (discord.ext.commands.Bot method)

fetch_guild() (discord.Client method)

fetch_guild() (discord.ext.commands.Bot method)

fetch_guild_preview() (discord.Client method)

fetch_guild_preview() (discord.ext.commands.Bot method)

fetch_guilds() (discord.Client method)

fetch_guilds() (discord.ext.commands.Bot method)

fetch_instance() (discord.StageChannel method)

fetch_invite() (discord.Client method)

fetch_invite() (discord.ext.commands.Bot method)

fetch_invite() (discord.Widget method)

fetch_member() (discord.Guild method)

fetch_member() (discord.Thread method)

fetch_members() (discord.Guild method)

fetch_members() (discord.Thread method)

fetch_message() (discord.abc.Messageable method)

fetch_message() (discord.DMChannel method)

fetch_message() (discord.ext.commands.Context method)

fetch_message() (discord.GroupChannel method)

fetch_message() (discord.Member method)

fetch_message() (discord.PartialMessageable method)

fetch_message() (discord.StageChannel method)

fetch_message() (discord.SyncWebhook method)

fetch_message() (discord.TextChannel method)

fetch_message() (discord.Thread method)

fetch_message() (discord.User method)

fetch_message() (discord.VoiceChannel method)

fetch_message() (discord.Webhook method)

fetch_permissions() (discord.app_commands.AppCommand method)

fetch_premium_sticker_pack() (discord.Client method)

fetch_premium_sticker_pack() (discord.ext.commands.Bot method)

fetch_premium_sticker_packs() (discord.Client method)

fetch_premium_sticker_packs() (discord.ext.commands.Bot method)

fetch_role() (discord.Guild method)

fetch_roles() (discord.Guild method)

fetch_rule() (discord.AutoModAction method)

fetch_scheduled_event() (discord.Guild method)

fetch_scheduled_events() (discord.Guild method)

fetch_session_start_limits() (discord.AutoShardedClient method)

fetch_skus() (discord.Client method)

fetch_skus() (discord.ext.commands.Bot method)

fetch_soundboard_default_sounds() (discord.Client method)

fetch_soundboard_default_sounds() (discord.ext.commands.Bot method)

fetch_soundboard_sound() (discord.Guild method)

fetch_soundboard_sounds() (discord.Guild method)

fetch_stage_instance() (discord.Client method)

fetch_stage_instance() (discord.ext.commands.Bot method)

fetch_sticker() (discord.Client method)

fetch_sticker() (discord.ext.commands.Bot method)

fetch_sticker() (discord.Guild method)

fetch_stickers() (discord.Guild method)

fetch_subscription() (discord.SKU method)

fetch_template() (discord.Client method)

fetch_template() (discord.ext.commands.Bot method)

fetch_thread() (discord.InteractionMessage method)

fetch_thread() (discord.Message method)

fetch_thread() (discord.PartialMessage method)

fetch_thread() (discord.WebhookMessage method)

fetch_user() (discord.Client method)

fetch_user() (discord.ext.commands.Bot method)

fetch_voice() (discord.Member method)

fetch_webhook() (discord.Client method)

fetch_webhook() (discord.ext.commands.Bot method)

fetch_widget() (discord.Client method)

fetch_widget() (discord.ext.commands.Bot method)

FFmpegAudio (class in discord)

FFmpegOpusAudio (class in discord)

FFmpegPCMAudio (class in discord)

fields (discord.Embed property)

File (class in discord)

filename (discord.Attachment attribute)

filename (discord.File property)

filesize_limit (discord.ext.commands.Context property)

filesize_limit (discord.Guild property)

filter_commands() (discord.ext.commands.HelpCommand method)

find() (in module discord.utils)

finnish (discord.Locale attribute)

fix_channel_mentions (discord.ext.commands.clean_content attribute)

Flag (class in discord.ext.commands)

flag (discord.ext.commands.BadFlagArgument attribute)

flag (discord.ext.commands.MissingFlagArgument attribute)

flag (discord.ext.commands.MissingRequiredFlag attribute)

flag (discord.ext.commands.TooManyFlags attribute)

flag() (in module discord.ext.commands)

FlagConverter (class in discord.ext.commands)

FlagError

flags (discord.AppInfo property)

flags (discord.Attachment property)

flags (discord.AuditLogDiff attribute)

flags (discord.Embed property)

flags (discord.ForumChannel property)

flags (discord.Member property)

flags (discord.Message attribute)

flags (discord.MessageSnapshot attribute)

flags (discord.PartialAppInfo property)

flags (discord.Role property)

flags (discord.SKU property)

flags (discord.Thread property)

follow() (discord.TextChannel method)

followup (discord.Interaction attribute)

footer (discord.Embed property)

Forbidden

format (discord.GuildSticker attribute)

format (discord.StandardSticker attribute)

format (discord.Sticker attribute)

format (discord.StickerItem attribute)

format_dt() (in module discord.utils)

format_type (discord.AuditLogDiff attribute)

forum (discord.ChannelType attribute)

ForumChannel (class in discord)

ForumChannelConverter (class in discord.ext.commands)

ForumLayoutType (class in discord)

ForumOrderType (class in discord)

forums (discord.CategoryChannel property)

forums (discord.Guild property)

ForumTag (class in discord)

forward (discord.MessageReferenceType attribute)

forward() (discord.InteractionMessage method)

forward() (discord.Message method)

forward() (discord.PartialMessage method)

forward() (discord.WebhookMessage method)

forwarded (discord.MessageFlags attribute)

fp (discord.File attribute)

free_purchase (discord.EntitlementType attribute)

french (discord.Locale attribute)

friend (discord.InviteType attribute)

from_channel() (discord.SelectDefaultValue class method)

from_custom_id() (discord.ui.DynamicItem class method)

from_dict() (discord.Embed class method)

from_hsv() (discord.Colour class method)

from_intents() (discord.MemberCacheFlags class method)

from_interaction() (discord.ext.commands.Context class method)

from_message() (discord.MessageReference class method)

from_message() (discord.ui.Modal class method)

from_message() (discord.ui.View class method)

from_pair() (discord.PermissionOverwrite class method)

from_probe() (discord.FFmpegOpusAudio class method)

from_rgb() (discord.Colour class method)

from_role() (discord.SelectDefaultValue class method)

from_str() (discord.Colour class method)

from_str() (discord.PartialEmoji class method)

from_url() (discord.SyncWebhook class method)

from_url() (discord.Webhook class method)

from_user() (discord.SelectDefaultValue class method)

fuchsia() (discord.Colour class method)

full (discord.VideoQualityMode attribute)

full_parent_name (discord.ext.commands.Command property)

full_parent_name (discord.ext.commands.Group property)

full_parent_name (discord.ext.commands.HybridGroup property)

G

g (discord.Colour property)

gallery_view (discord.ForumLayoutType attribute)

Game (class in discord)

game (discord.Streaming attribute)

GameConverter (class in discord.ext.commands)

gateway_guild_members (discord.ApplicationFlags attribute)

gateway_guild_members_limited (discord.ApplicationFlags attribute)

gateway_message_content (discord.ApplicationFlags attribute)

gateway_message_content_limited (discord.ApplicationFlags attribute)

gateway_presence (discord.ApplicationFlags attribute)

gateway_presence_limited (discord.ApplicationFlags attribute)

GatewayNotFound

general() (discord.Permissions class method)

german (discord.Locale attribute)

get() (in module discord.utils)

get_all_channels() (discord.Client method)

get_all_channels() (discord.ext.commands.Bot method)

get_all_members() (discord.Client method)

get_all_members() (discord.ext.commands.Bot method)

get_answer() (discord.Poll method)

get_app_commands() (discord.ext.commands.Cog method)

get_bot_mapping() (discord.ext.commands.HelpCommand method)

get_channel() (discord.Client method)

get_channel() (discord.ext.commands.Bot method)

get_channel() (discord.Guild method)

get_channel_or_thread() (discord.Guild method)

get_cog() (discord.ext.commands.Bot method)

get_command() (discord.app_commands.CommandTree method)

get_command() (discord.app_commands.Group method)

get_command() (discord.ext.commands.Bot method)

get_command() (discord.ext.commands.Group method)

get_command() (discord.ext.commands.GroupMixin method)

get_command() (discord.ext.commands.HybridGroup method)

get_command_signature() (discord.ext.commands.DefaultHelpCommand method)

get_command_signature() (discord.ext.commands.HelpCommand method)

get_command_signature() (discord.ext.commands.MinimalHelpCommand method)

get_commands() (discord.app_commands.CommandTree method)

get_commands() (discord.ext.commands.Cog method)

get_context() (discord.ext.commands.Bot method)

get_cooldown_retry_after() (discord.ext.commands.Command method)

get_cooldown_retry_after() (discord.ext.commands.Group method)

get_cooldown_retry_after() (discord.ext.commands.HybridGroup method)

get_default() (discord.ext.commands.Parameter method)

get_destination() (discord.ext.commands.DefaultHelpCommand method)

get_destination() (discord.ext.commands.HelpCommand method)

get_destination() (discord.ext.commands.MinimalHelpCommand method)

get_emoji() (discord.Client method)

get_emoji() (discord.ext.commands.Bot method)

get_emoji() (discord.Guild method)

get_ending_note() (discord.ext.commands.DefaultHelpCommand method)

get_ending_note() (discord.ext.commands.MinimalHelpCommand method)

get_flags() (discord.ext.commands.FlagConverter class method)

get_guild() (discord.Client method)

get_guild() (discord.ext.commands.Bot method)

get_listeners() (discord.ext.commands.Cog method)

get_max_size() (discord.ext.commands.HelpCommand method)

get_member() (discord.Guild method)

get_member_named() (discord.Guild method)

get_opening_note() (discord.ext.commands.MinimalHelpCommand method)

get_parameter() (discord.app_commands.Command method)

get_partial_message() (discord.DMChannel method)

get_partial_message() (discord.PartialMessageable method)

get_partial_message() (discord.StageChannel method)

get_partial_message() (discord.TextChannel method)

get_partial_message() (discord.Thread method)

get_partial_message() (discord.VoiceChannel method)

get_partial_messageable() (discord.Client method)

get_partial_messageable() (discord.ext.commands.Bot method)

get_prefix() (discord.ext.commands.Bot method)

get_retry_after() (discord.app_commands.Cooldown method)

get_role() (discord.Guild method)

get_role() (discord.Member method)

get_scheduled_event() (discord.Guild method)

get_shard() (discord.AutoShardedClient method)

get_soundboard_sound() (discord.Client method)

get_soundboard_sound() (discord.ext.commands.Bot method)

get_soundboard_sound() (discord.Guild method)

get_stage_instance() (discord.Client method)

get_stage_instance() (discord.ext.commands.Bot method)

get_stage_instance() (discord.Guild method)

get_sticker() (discord.Client method)

get_sticker() (discord.ext.commands.Bot method)

get_tag() (discord.ForumChannel method)

get_task() (discord.ext.tasks.Loop method)

get_thread() (discord.ForumChannel method)

get_thread() (discord.Guild method)

get_thread() (discord.TextChannel method)

get_tokens() (discord.app_commands.Cooldown method)

get_user() (discord.Client method)

get_user() (discord.ext.commands.Bot method)

gif (discord.StickerFormatType attribute)

global_name (discord.abc.User attribute)

global_name (discord.ClientUser attribute)

global_name (discord.Member property)

global_name (discord.TeamMember attribute)

global_name (discord.User attribute)

global_name (discord.WidgetMember attribute)

gold() (discord.Colour class method)

gray (discord.ButtonStyle attribute)

gray (discord.DefaultAvatar attribute)

Greedy (class in discord.ext.commands)

greek (discord.Locale attribute)

green (discord.ButtonStyle attribute)

green (discord.DefaultAvatar attribute)

green() (discord.Colour class method)

grey (discord.ButtonStyle attribute)

grey (discord.DefaultAvatar attribute)

greyple() (discord.Colour class method)

Group (class in discord.app_commands)

Group (class in discord.ext.commands)

group (discord.ChannelType attribute)

group() (discord.ext.commands.Bot method)

group() (discord.ext.commands.Group method)

group() (discord.ext.commands.GroupMixin method)

group() (discord.ext.commands.HybridGroup method)

group() (in module discord.ext.commands)

group_auto_locale_strings (discord.ext.commands.CogMeta attribute)

group_description (discord.app_commands.TranslationContextLocation attribute)

group_description (discord.ext.commands.CogMeta attribute)

group_dm (discord.InviteType attribute)

group_extras (discord.ext.commands.CogMeta attribute)

group_name (discord.app_commands.TranslationContextLocation attribute)

group_name (discord.ext.commands.CogMeta attribute)

group_nsfw (discord.ext.commands.CogMeta attribute)

GroupChannel (class in discord)

GroupCog (class in discord.ext.commands)

GroupMixin (class in discord.ext.commands)

guest (discord.MemberFlags attribute)

Guild (class in discord)

guild (discord.abc.GuildChannel attribute)

guild (discord.app_commands.AllChannels attribute)

guild (discord.app_commands.AppCommand property)

guild (discord.app_commands.AppCommandChannel property)

guild (discord.app_commands.AppCommandContext property)

guild (discord.app_commands.AppCommandPermissions attribute)

guild (discord.app_commands.AppCommandThread property)

guild (discord.app_commands.AppInstallationType property)

guild (discord.app_commands.GuildAppCommandPermissions property)

guild (discord.AppInfo property)

guild (discord.AuditLogDiff attribute)

guild (discord.AuditLogEntry attribute)

guild (discord.AutoModAction property)

guild (discord.AutoModRule attribute)

guild (discord.BotIntegration attribute)

guild (discord.CategoryChannel attribute)

guild (discord.DMChannel property)

guild (discord.Emoji property)

guild (discord.Entitlement property)

guild (discord.EntitlementOwnerType attribute)

guild (discord.ext.commands.BucketType attribute)

guild (discord.ext.commands.Context attribute)

guild (discord.ForumChannel attribute)

guild (discord.GroupChannel property)

guild (discord.GuildSticker attribute)

guild (discord.Integration attribute)

guild (discord.Interaction property)

guild (discord.Invite attribute)

guild (discord.InviteType attribute)

guild (discord.Member attribute)

guild (discord.Message attribute)

guild (discord.PartialIntegration attribute)

guild (discord.PartialMessage attribute)

guild (discord.PartialMessageable property)

guild (discord.RawAppCommandPermissionsUpdateEvent attribute)

guild (discord.RawPresenceUpdateEvent attribute)

guild (discord.Role attribute)

guild (discord.ScheduledEvent property)

guild (discord.SoundboardSound attribute)

guild (discord.StageChannel attribute)

guild (discord.StageInstance attribute)

guild (discord.StickerType attribute)

guild (discord.StreamIntegration attribute)

guild (discord.SyncWebhook property)

guild (discord.TextChannel attribute)

guild (discord.Thread attribute)

guild (discord.VoiceChannel attribute)

guild (discord.VoiceClient property)

guild (discord.Webhook property)

guild_application_premium_subscription (discord.MessageType attribute)

guild_avatar (discord.Member property)

guild_banner (discord.Member property)

guild_discovery_disqualified (discord.MessageType attribute)

guild_discovery_grace_period_final_warning (discord.MessageType attribute)

guild_discovery_grace_period_initial_warning (discord.MessageType attribute)

guild_discovery_requalified (discord.MessageType attribute)

guild_id (discord.app_commands.AppCommand attribute)

guild_id (discord.app_commands.AppCommandChannel attribute)

guild_id (discord.app_commands.AppCommandThread attribute)

guild_id (discord.app_commands.CommandAlreadyRegistered attribute)

guild_id (discord.app_commands.CommandLimitReached attribute)

guild_id (discord.app_commands.GuildAppCommandPermissions attribute)

guild_id (discord.AppInfo attribute)

guild_id (discord.AutoModAction attribute)

guild_id (discord.DeletedReferencedMessage property)

guild_id (discord.Emoji attribute)

guild_id (discord.Entitlement attribute)

guild_id (discord.GuildSticker attribute)

guild_id (discord.Interaction attribute)

guild_id (discord.MessageReference attribute)

guild_id (discord.PartialMessageable attribute)

guild_id (discord.RawBulkMessageDeleteEvent attribute)

guild_id (discord.RawIntegrationDeleteEvent attribute)

guild_id (discord.RawMemberRemoveEvent attribute)

guild_id (discord.RawMessageDeleteEvent attribute)

guild_id (discord.RawMessageUpdateEvent attribute)

guild_id (discord.RawPollVoteActionEvent attribute)

guild_id (discord.RawPresenceUpdateEvent attribute)

guild_id (discord.RawReactionActionEvent attribute)

guild_id (discord.RawReactionClearEmojiEvent attribute)

guild_id (discord.RawReactionClearEvent attribute)

guild_id (discord.RawThreadDeleteEvent attribute)

guild_id (discord.RawThreadMembersUpdate attribute)

guild_id (discord.RawThreadUpdateEvent attribute)

guild_id (discord.RawTypingEvent attribute)

guild_id (discord.SyncWebhook attribute)

guild_id (discord.Webhook attribute)

guild_incident_alert_mode_disabled (discord.MessageType attribute)

guild_incident_alert_mode_enabled (discord.MessageType attribute)

guild_incident_report_false_alarm (discord.MessageType attribute)

guild_incident_report_raid (discord.MessageType attribute)

guild_install() (in module discord.app_commands)

guild_integration_config (discord.AppInfo property)

guild_invite_reminder (discord.MessageType attribute)

guild_locale (discord.Interaction attribute)

guild_messages (discord.Intents attribute)

guild_only (discord.app_commands.Command attribute)

guild_only (discord.app_commands.ContextMenu attribute)

guild_only (discord.app_commands.Group attribute)

guild_only (discord.PrivacyLevel attribute)

guild_only() (in module discord.app_commands)

guild_only() (in module discord.ext.commands)

guild_permissions (discord.Member property)

guild_polls (discord.Intents attribute)

guild_product_purchase (discord.PurchaseNotification attribute)

guild_reactions (discord.Intents attribute)

guild_reminder_notifications (discord.SystemChannelFlags attribute)

guild_scheduled_events (discord.Intents attribute)

guild_stream (discord.MessageType attribute)

guild_subscription (discord.SKUFlags attribute)

guild_typing (discord.Intents attribute)

guild_update (discord.AuditLogAction attribute)

GuildAppCommandPermissions (class in discord.app_commands)

GuildChannel (class in discord.abc)

GuildChannelConverter (class in discord.ext.commands)

GuildConverter (class in discord.ext.commands)

GuildNotFound

GuildPreview (class in discord)

GuildProductPurchase (class in discord)

guilds (discord.Client property)

guilds (discord.ext.commands.Bot property)

guilds (discord.Intents attribute)

guilds() (in module discord.app_commands)

GuildSticker (class in discord)

GuildStickerConverter (class in discord.ext.commands)

GuildStickerNotFound

H

harmful_link (discord.AutoModRuleTriggerType attribute)

has_any_role() (in module discord.app_commands.checks)

has_any_role() (in module discord.ext.commands)

has_app_command_error_handler() (discord.ext.commands.Cog method)

has_error_handler() (discord.ext.commands.Cog method)

has_error_handler() (discord.ext.commands.Command method)

has_error_handler() (discord.ext.commands.Group method)

has_error_handler() (discord.ext.commands.HybridGroup method)

has_guild_permissions() (in module discord.ext.commands)

has_permissions() (in module discord.app_commands.checks)

has_permissions() (in module discord.ext.commands)

has_role() (in module discord.app_commands.checks)

has_role() (in module discord.ext.commands)

has_thread (discord.MessageFlags attribute)

has_unread_urgent_messages (discord.UserFlags attribute)

height (discord.Attachment attribute)

help (discord.ext.commands.Command attribute)

help_command (discord.ext.commands.Bot attribute)

HelpCommand (class in discord.ext.commands)

hidden (discord.ext.commands.Command attribute)

hide_media_download_options (discord.ChannelFlags attribute)

high (discord.VerificationLevel attribute)

highest (discord.VerificationLevel attribute)

hindi (discord.Locale attribute)

history() (discord.abc.Messageable method)

history() (discord.DMChannel method)

history() (discord.ext.commands.Context method)

history() (discord.GroupChannel method)

history() (discord.Member method)

history() (discord.PartialMessageable method)

history() (discord.StageChannel method)

history() (discord.TextChannel method)

history() (discord.Thread method)

history() (discord.User method)

history() (discord.VoiceChannel method)

hoist (discord.AuditLogDiff attribute)

hoist (discord.Role attribute)

hours (discord.ext.tasks.Loop property)

HTTPException

hungarian (discord.Locale attribute)

hybrid_command() (discord.ext.commands.Bot method)

hybrid_command() (in module discord.ext.commands)

hybrid_group() (discord.ext.commands.Bot method)

hybrid_group() (in module discord.ext.commands)

HybridCommand (class in discord.ext.commands)

HybridCommandError

HybridGroup (class in discord.ext.commands)

hypesquad (discord.PublicUserFlags attribute)

hypesquad (discord.UserFlags attribute)

hypesquad_balance (discord.PublicUserFlags attribute)

hypesquad_balance (discord.UserFlags attribute)

hypesquad_bravery (discord.PublicUserFlags attribute)

hypesquad_bravery (discord.UserFlags attribute)

hypesquad_brilliance (discord.PublicUserFlags attribute)

hypesquad_brilliance (discord.UserFlags attribute)

I

icon (discord.AppInfo property)

icon (discord.AuditLogDiff attribute)

icon (discord.GroupChannel property)

icon (discord.Guild property)

icon (discord.GuildPreview property)

icon (discord.IntegrationApplication attribute)

icon (discord.MessageApplication property)

icon (discord.PartialAppInfo property)

icon (discord.PartialInviteGuild property)

icon (discord.PartialWebhookGuild property)

icon (discord.Role property)

icon (discord.Team property)

id (discord.abc.Snowflake attribute)

id (discord.app_commands.AllChannels property)

id (discord.app_commands.AppCommand attribute)

id (discord.app_commands.AppCommandChannel attribute)

id (discord.app_commands.AppCommandPermissions attribute)

id (discord.app_commands.AppCommandThread attribute)

id (discord.app_commands.GuildAppCommandPermissions attribute)

id (discord.AppInfo attribute)

id (discord.Attachment attribute)

id (discord.AuditLogDiff attribute)

id (discord.AuditLogEntry attribute)

id (discord.AutoModRule attribute)

id (discord.BaseSoundboardSound attribute)

id (discord.BotIntegration attribute)

id (discord.CategoryChannel attribute)

id (discord.ClientUser attribute)

id (discord.DeletedReferencedMessage property)

id (discord.DMChannel attribute)

id (discord.Emoji attribute)

id (discord.Entitlement attribute)

id (discord.ForumChannel attribute)

id (discord.ForumTag attribute)

id (discord.GroupChannel attribute)

id (discord.Guild attribute)

id (discord.GuildPreview attribute)

id (discord.GuildSticker attribute)

id (discord.Integration attribute)

id (discord.IntegrationAccount attribute)

id (discord.IntegrationApplication attribute)

id (discord.Interaction attribute)

id (discord.InteractionCallbackActivityInstance attribute)

id (discord.InteractionCallbackResponse attribute)

id (discord.Invite property)

id (discord.Member property)

id (discord.Message attribute)

id (discord.MessageApplication attribute)

id (discord.MessageInteraction attribute)

id (discord.MessageInteractionMetadata attribute)

id (discord.Object attribute)

id (discord.PartialAppInfo attribute)

id (discord.PartialEmoji attribute)

id (discord.PartialIntegration attribute)

id (discord.PartialInviteChannel attribute)

id (discord.PartialInviteGuild attribute)

id (discord.PartialMessage attribute)

id (discord.PartialMessageable attribute)

id (discord.PartialWebhookChannel attribute)

id (discord.PartialWebhookGuild attribute)

id (discord.PollAnswer attribute)

id (discord.Role attribute)

id (discord.ScheduledEvent attribute)

id (discord.ShardInfo attribute)

id (discord.SKU attribute)

id (discord.SoundboardDefaultSound attribute)

id (discord.SoundboardSound attribute)

id (discord.StageChannel attribute)

id (discord.StageInstance attribute)

id (discord.StandardSticker attribute)

id (discord.Sticker attribute)

id (discord.StickerItem attribute)

id (discord.StickerPack attribute)

id (discord.StreamIntegration attribute)

id (discord.Subscription attribute)

id (discord.SyncWebhook attribute)

id (discord.Team attribute)

id (discord.TeamMember attribute)

id (discord.TextChannel attribute)

id (discord.Thread attribute)

id (discord.ThreadMember attribute)

id (discord.User attribute)

id (discord.VoiceChannel attribute)

id (discord.VoiceChannelEffectAnimation attribute)

id (discord.VoiceChannelSoundEffect attribute)

id (discord.Webhook attribute)

id (discord.Widget attribute)

id (discord.WidgetChannel attribute)

id (discord.WidgetMember attribute)

idle (discord.Status attribute)

ignore_extra (discord.ext.commands.Command attribute)

image (discord.Embed property)

in_prompt (discord.RoleFlags attribute)

inactive (discord.SubscriptionStatus attribute)

incoming (discord.WebhookType attribute)

indent (discord.ext.commands.DefaultHelpCommand attribute)

indonesian (discord.Locale attribute)

insert_field_at() (discord.Embed method)

install_params (discord.AppInfo attribute)

instance (discord.StageChannel property)

integer (discord.AppCommandOptionType attribute)

Integration (class in discord)

integration_create (discord.AuditLogAction attribute)

integration_delete (discord.AuditLogAction attribute)

integration_id (discord.RawIntegrationDeleteEvent attribute)

integration_id (discord.RoleTags attribute)

integration_update (discord.AuditLogAction attribute)

IntegrationAccount (class in discord)

IntegrationApplication (class in discord)

integrations (discord.Intents attribute)

integrations() (discord.Guild method)

IntegrationTypeConfig (class in discord)

Intents (class in discord)

intents (discord.Client property)

intents (discord.ext.commands.Bot property)

interacted_message (discord.MessageInteractionMetadata property)

interacted_message_id (discord.MessageInteractionMetadata attribute)

Interaction (class in discord)

interaction (discord.ext.commands.Context attribute)

interaction (discord.InteractionMessage property)

interaction (discord.InteractionResponded attribute)

interaction (discord.Message property)

interaction (discord.WebhookMessage property)

interaction_check() (discord.app_commands.CommandTree method)

interaction_check() (discord.app_commands.Group method)

interaction_check() (discord.ext.commands.Cog method)

interaction_check() (discord.ext.commands.GroupCog method)

interaction_check() (discord.ui.Button method)

interaction_check() (discord.ui.ChannelSelect method)

interaction_check() (discord.ui.DynamicItem method)

interaction_check() (discord.ui.Item method)

interaction_check() (discord.ui.MentionableSelect method)

interaction_check() (discord.ui.Modal method)

interaction_check() (discord.ui.RoleSelect method)

interaction_check() (discord.ui.Select method)

interaction_check() (discord.ui.TextInput method)

interaction_check() (discord.ui.UserSelect method)

interaction_check() (discord.ui.View method)

interaction_metadata (discord.Message attribute)

interaction_premium_upsell (discord.MessageType attribute)

InteractionCallbackActivityInstance (class in discord)

InteractionCallbackResponse (class in discord)

InteractionMessage (class in discord)

InteractionResponded

InteractionResponse (class in discord)

InteractionResponseType (class in discord)

interactions_endpoint_url (discord.AppInfo attribute)

interactions_endpoint_url (discord.PartialAppInfo attribute)

InteractionType (class in discord)

InvalidData

InvalidEndOfQuotedStringError

invisible (discord.Status attribute)

invitable (discord.app_commands.AppCommandThread attribute)

invitable (discord.AuditLogDiff attribute)

invitable (discord.Thread attribute)

Invite (class in discord)

invite_create (discord.AuditLogAction attribute)

invite_delete (discord.AuditLogAction attribute)

invite_update (discord.AuditLogAction attribute)

invite_url (discord.Widget property)

InviteConverter (class in discord.ext.commands)

invited (discord.TeamMembershipState attribute)

inviter (discord.AuditLogDiff attribute)

inviter (discord.Invite attribute)

invites (discord.Intents attribute)

invites() (discord.abc.GuildChannel method)

invites() (discord.CategoryChannel method)

invites() (discord.ForumChannel method)

invites() (discord.Guild method)

invites() (discord.StageChannel method)

invites() (discord.TextChannel method)

invites() (discord.VoiceChannel method)

invites_paused() (discord.Guild method)

invites_paused_until (discord.Guild property)

InviteTarget (class in discord)

InviteType (class in discord)

invoke() (discord.ext.commands.Bot method)

invoke() (discord.ext.commands.Context method)

invoke_without_command (discord.ext.commands.Group attribute)

invoked_parents (discord.ext.commands.Context attribute)

invoked_subcommand (discord.ext.commands.Command attribute)

invoked_subcommand (discord.ext.commands.Context attribute)

invoked_with (discord.ext.commands.Context attribute)

invoked_with (discord.ext.commands.HelpCommand property)

is_animated() (discord.Asset method)

is_application_owned() (discord.Emoji method)

is_assignable() (discord.Role method)

is_authenticated() (discord.SyncWebhook method)

is_authenticated() (discord.Webhook method)

is_available_for_purchase() (discord.RoleTags method)

is_being_cancelled() (discord.ext.tasks.Loop method)

is_bot_managed() (discord.Role method)

is_bot_managed() (discord.RoleTags method)

is_closed() (discord.Client method)

is_closed() (discord.ext.commands.Bot method)

is_closed() (discord.ShardInfo method)

is_connected() (discord.VoiceClient method)

is_crossposted (discord.MessageFlags attribute)

is_custom_emoji() (discord.PartialEmoji method)

is_custom_emoji() (discord.Reaction method)

is_default() (discord.Role method)

is_default() (discord.VoiceChannelSoundEffect method)

is_dirty (discord.Template attribute)

is_dispatching() (discord.ui.Modal method)

is_dispatching() (discord.ui.View method)

is_dm_spam_detected() (discord.Guild method)

is_done() (discord.InteractionResponse method)

is_empty() (discord.PermissionOverwrite method)

is_ended() (discord.CallMessage method)

is_ephemeral() (discord.InteractionCallbackResponse method)

is_exempt() (discord.AutoModRule method)

is_expired() (discord.Entitlement method)

is_expired() (discord.Interaction method)

is_finalised() (discord.Poll method)

is_finalized() (discord.Poll method)

is_finished() (discord.ui.Modal method)

is_finished() (discord.ui.View method)

is_guild_connection() (discord.RoleTags method)

is_guild_integration() (discord.Interaction method)

is_guild_integration() (discord.MessageInteractionMetadata method)

is_integration() (discord.Role method)

is_integration() (discord.RoleTags method)

is_loaded() (in module discord.opus)

is_media() (discord.ForumChannel method)

is_news() (discord.TextChannel method)

is_news() (discord.Thread method)

is_nsfw() (discord.CategoryChannel method)

is_nsfw() (discord.ForumChannel method)

is_nsfw() (discord.StageChannel method)

is_nsfw() (discord.TextChannel method)

is_nsfw() (discord.Thread method)

is_nsfw() (discord.VoiceChannel method)

is_nsfw() (in module discord.ext.commands)

is_on_cooldown() (discord.ext.commands.Command method)

is_on_cooldown() (discord.ext.commands.Group method)

is_on_cooldown() (discord.ext.commands.HybridGroup method)

is_on_mobile() (discord.ClientStatus method)

is_on_mobile() (discord.Member method)

is_opus() (discord.AudioSource method)

is_opus() (discord.FFmpegOpusAudio method)

is_opus() (discord.FFmpegPCMAudio method)

is_owner() (discord.ext.commands.Bot method)

is_owner() (in module discord.ext.commands)

is_partial() (discord.SyncWebhook method)

is_partial() (discord.Webhook method)

is_paused() (discord.VoiceClient method)

is_persistent() (discord.ui.Modal method)

is_persistent() (discord.ui.View method)

is_playing() (discord.VoiceClient method)

is_premium_subscriber() (discord.Role method)

is_premium_subscriber() (discord.RoleTags method)

is_private() (discord.Thread method)

is_raid_detected() (discord.Guild method)

is_ready() (discord.Client method)

is_ready() (discord.ext.commands.Bot method)

is_renewal (discord.RoleSubscriptionInfo attribute)

is_running() (discord.ext.tasks.Loop method)

is_sound() (discord.VoiceChannelEffect method)

is_spoiler() (discord.Attachment method)

is_strict_subset() (discord.Permissions method)

is_strict_superset() (discord.Permissions method)

is_subset() (discord.Permissions method)

is_superset() (discord.Permissions method)

is_system() (discord.InteractionMessage method)

is_system() (discord.Message method)

is_system() (discord.WebhookMessage method)

is_thinking() (discord.InteractionCallbackResponse method)

is_timed_out() (discord.Member method)

is_unicode_emoji() (discord.PartialEmoji method)

is_usable() (discord.Emoji method)

is_user_integration() (discord.Interaction method)

is_user_integration() (discord.MessageInteractionMetadata method)

is_voice_message() (discord.Attachment method)

is_ws_ratelimited() (discord.AutoShardedClient method)

is_ws_ratelimited() (discord.Client method)

is_ws_ratelimited() (discord.ext.commands.Bot method)

is_ws_ratelimited() (discord.ShardInfo method)

italian (discord.Locale attribute)

Item (class in discord.ui)

item (discord.ui.DynamicItem attribute)

J

japanese (discord.Locale attribute)

join() (discord.Thread method)

join_notification_replies (discord.SystemChannelFlags attribute)

join_notifications (discord.SystemChannelFlags attribute)

joined (discord.MemberCacheFlags attribute)

joined_at (discord.Member attribute)

joined_at (discord.ThreadMember attribute)

json_url (discord.Widget property)

jump_url (discord.abc.GuildChannel property)

jump_url (discord.CategoryChannel property)

jump_url (discord.DMChannel property)

jump_url (discord.ForumChannel property)

jump_url (discord.GroupChannel property)

jump_url (discord.InteractionMessage property)

jump_url (discord.Message property)

jump_url (discord.MessageReference property)

jump_url (discord.PartialMessage property)

jump_url (discord.PartialMessageable property)

jump_url (discord.StageChannel property)

jump_url (discord.TextChannel property)

jump_url (discord.Thread property)

jump_url (discord.VoiceChannel property)

jump_url (discord.WebhookMessage property)

K

key (discord.Asset property)

keyword (discord.AutoModRuleTriggerType attribute)

keyword_filter (discord.AutoModTrigger attribute)

keyword_preset (discord.AutoModRuleTriggerType attribute)

kick (discord.AuditLogAction attribute)

kick (discord.ExpireBehaviour attribute)

kick() (discord.Guild method)

kick() (discord.Member method)

kick_members (discord.Permissions attribute)

kind (discord.ext.commands.Parameter property)

korean (discord.Locale attribute)

kwargs (discord.ext.commands.Context attribute)

L

label (discord.Button attribute)

label (discord.SelectOption attribute)

label (discord.TextInput attribute)

label (discord.ui.Button property)

label (discord.ui.TextInput property)

large (discord.Guild property)

large_image_text (discord.Activity property)

large_image_url (discord.Activity property)

last_message (discord.StageChannel property)

last_message (discord.TextChannel property)

last_message (discord.Thread property)

last_message (discord.VoiceChannel property)

last_message_id (discord.ForumChannel attribute)

last_message_id (discord.StageChannel attribute)

last_message_id (discord.TextChannel attribute)

last_message_id (discord.Thread attribute)

last_message_id (discord.VoiceChannel attribute)

latencies (discord.AutoShardedClient property)

latency (discord.AutoShardedClient property)

latency (discord.Client property)

latency (discord.ext.commands.Bot property)

latency (discord.ShardInfo property)

latency (discord.VoiceClient property)

latest_activity (discord.ForumOrderType attribute)

latin_american_spanish (discord.Locale attribute)

layout_type (discord.Poll attribute)

leave() (discord.GroupChannel method)

leave() (discord.Guild method)

leave() (discord.Thread method)

light_embed() (discord.Colour class method)

light_gray() (discord.Colour class method)

light_grey() (discord.Colour class method)

lighter_gray() (discord.Colour class method)

lighter_grey() (discord.Colour class method)

limit (discord.app_commands.CommandLimitReached attribute)

linesep (discord.ext.commands.Paginator attribute)

link (discord.ButtonStyle attribute)

list_view (discord.ForumLayoutType attribute)

listen() (discord.ext.commands.Bot method)

listener() (discord.ext.commands.Cog class method)

listeners (discord.StageChannel property)

listening (discord.ActivityType attribute)

listing_id (discord.GuildProductPurchase attribute)

literals (discord.ext.commands.BadLiteralArgument attribute)

lithuanian (discord.Locale attribute)

load() (discord.app_commands.Translator method)

load_extension() (discord.ext.commands.Bot method)

load_opus() (in module discord.opus)

loading (discord.MessageFlags attribute)

Locale (class in discord)

locale (discord.app_commands.TranslationError attribute)

locale (discord.ClientUser attribute)

locale (discord.Interaction attribute)

locale_description (discord.app_commands.Parameter attribute)

locale_name (discord.app_commands.Parameter attribute)

locale_str (class in discord.app_commands)

location (discord.app_commands.TranslationContext attribute)

location (discord.ScheduledEvent attribute)

locked (discord.app_commands.AppCommandThread attribute)

locked (discord.AuditLogDiff attribute)

locked (discord.Thread attribute)

login() (discord.Client method)

login() (discord.ext.commands.Bot method)

LoginFailure

long (discord.TextStyle attribute)

Loop (class in discord.ext.tasks)

loop() (in module discord.ext.tasks)

lottie (discord.StickerFormatType attribute)

low (discord.VerificationLevel attribute)

M

magenta() (discord.Colour class method)

manage_channels (discord.Permissions attribute)

manage_emojis (discord.Permissions attribute)

manage_emojis_and_stickers (discord.Permissions attribute)

manage_events (discord.Permissions attribute)

manage_expressions (discord.Permissions attribute)

manage_guild (discord.Permissions attribute)

manage_messages (discord.Permissions attribute)

manage_nicknames (discord.Permissions attribute)

manage_permissions (discord.Permissions attribute)

manage_roles (discord.Permissions attribute)

manage_threads (discord.Permissions attribute)

manage_webhooks (discord.Permissions attribute)

managed (discord.Emoji attribute)

managed (discord.Role attribute)

matched_content (discord.AutoModAction attribute)

matched_keyword (discord.AutoModAction attribute)

max_age (discord.AuditLogDiff attribute)

max_age (discord.Invite attribute)

max_args (discord.ext.commands.Flag attribute)

max_concurrency (discord.SessionStartLimits attribute)

max_concurrency() (in module discord.ext.commands)

max_length (discord.app_commands.Argument attribute)

max_length (discord.TextInput attribute)

max_length (discord.ui.TextInput property)

max_members (discord.Guild attribute)

max_presences (discord.Guild attribute)

max_size (discord.ext.commands.Paginator attribute)

max_stage_video_users (discord.Guild attribute)

max_uses (discord.AuditLogDiff attribute)

max_uses (discord.Invite attribute)

max_value (discord.app_commands.Argument attribute)

max_value (discord.app_commands.Parameter attribute)

max_value (discord.app_commands.Transformer property)

max_values (discord.SelectMenu attribute)

max_values (discord.ui.ChannelSelect property)

max_values (discord.ui.MentionableSelect property)

max_values (discord.ui.RoleSelect property)

max_values (discord.ui.Select property)

max_values (discord.ui.UserSelect property)

max_video_channel_users (discord.Guild attribute)

MaxConcurrencyReached

maximum (discord.ext.commands.RangeError attribute)

maybe_coroutine() (in module discord.utils)

me (discord.abc.PrivateChannel attribute)

me (discord.DMChannel attribute)

me (discord.ext.commands.Context attribute)

me (discord.GroupChannel attribute)

me (discord.Guild property)

me (discord.Reaction attribute)

me (discord.Thread attribute)

me_burst (discord.Reaction attribute)

media (discord.ChannelType attribute)

media (discord.PollAnswer attribute)

medium (discord.VerificationLevel attribute)

Member (class in discord)

member (discord.AutoModAction property)

member (discord.ext.commands.BucketType attribute)

member (discord.RawReactionActionEvent attribute)

member_count (discord.Guild property)

member_count (discord.RawThreadMembersUpdate attribute)

member_count (discord.Thread attribute)

member_disconnect (discord.AuditLogAction attribute)

member_move (discord.AuditLogAction attribute)

member_profile (discord.AutoModRuleTriggerType attribute)

member_prune (discord.AuditLogAction attribute)

member_role_update (discord.AuditLogAction attribute)

member_update (discord.AuditLogAction attribute)

member_update (discord.AutoModRuleEventType attribute)

MemberCacheFlags (class in discord)

MemberConverter (class in discord.ext.commands)

MemberFlags (class in discord)

MemberNotFound

members (discord.ForumChannel property)

members (discord.Guild property)

members (discord.Intents attribute)

members (discord.Role property)

members (discord.StageChannel property)

members (discord.Team attribute)

members (discord.TextChannel property)

members (discord.Thread property)

members (discord.VoiceChannel property)

members (discord.Widget attribute)

membership() (discord.Permissions class method)

membership_state (discord.TeamMember attribute)

mention (discord.abc.GuildChannel property)

mention (discord.abc.User property)

mention (discord.app_commands.AppCommand property)

mention (discord.app_commands.AppCommandChannel property)

mention (discord.app_commands.AppCommandGroup property)

mention (discord.app_commands.AppCommandThread property)

mention (discord.CategoryChannel property)

mention (discord.ClientUser property)

mention (discord.ForumChannel property)

mention (discord.Member property)

mention (discord.PartialInviteChannel property)

mention (discord.PartialMessageable property)

mention (discord.PartialWebhookChannel property)

mention (discord.Role property)

mention (discord.StageChannel property)

mention (discord.TeamMember property)

mention (discord.TextChannel property)

mention (discord.Thread property)

mention (discord.User property)

mention (discord.VoiceChannel property)

mention (discord.WidgetChannel property)

mention (discord.WidgetMember property)

mention_everyone (discord.Message attribute)

mention_everyone (discord.Permissions attribute)

mention_limit (discord.AutoModTrigger attribute)

mention_raid_protection (discord.AutoModTrigger attribute)

mention_spam (discord.AutoModRuleTriggerType attribute)

mentionable (discord.AppCommandOptionType attribute)

mentionable (discord.AuditLogDiff attribute)

mentionable (discord.Role attribute)

mentionable_select (discord.ComponentType attribute)

MentionableSelect (class in discord.ui)

mentioned_in() (discord.abc.User method)

mentioned_in() (discord.ClientUser method)

mentioned_in() (discord.Member method)

mentioned_in() (discord.TeamMember method)

mentioned_in() (discord.User method)

mentioned_in() (discord.WidgetMember method)

mentions (discord.Message attribute)

Message (class in discord)

message (discord.app_commands.locale_str attribute)

message (discord.AppCommandType attribute)

message (discord.ext.commands.Context attribute)

message (discord.Interaction attribute)

message (discord.Poll property)

message (discord.RawMessageUpdateEvent attribute)

message (discord.Reaction attribute)

message_author_id (discord.RawReactionActionEvent attribute)

message_bulk_delete (discord.AuditLogAction attribute)

message_content (discord.Intents attribute)

message_count (discord.Thread attribute)

message_delete (discord.AuditLogAction attribute)

message_id (discord.AutoModAction attribute)

message_id (discord.InteractionCallbackResponse attribute)

message_id (discord.MessageReference attribute)

message_id (discord.RawMessageDeleteEvent attribute)

message_id (discord.RawMessageUpdateEvent attribute)

message_id (discord.RawPollVoteActionEvent attribute)

message_id (discord.RawReactionActionEvent attribute)

message_id (discord.RawReactionClearEmojiEvent attribute)

message_id (discord.RawReactionClearEvent attribute)

message_ids (discord.RawBulkMessageDeleteEvent attribute)

message_pin (discord.AuditLogAction attribute)

message_send (discord.AutoModRuleEventType attribute)

message_snapshots (discord.Message attribute)

message_unpin (discord.AuditLogAction attribute)

message_update (discord.InteractionResponseType attribute)

Messageable (class in discord.abc)

MessageApplication (class in discord)

MessageConverter (class in discord.ext.commands)

MessageFlags (class in discord)

MessageInteraction (class in discord)

MessageInteractionMetadata (class in discord)

MessageNotFound

MessageReference (class in discord)

MessageReferenceType (class in discord)

messages (discord.Intents attribute)

MessageSnapshot (class in discord)

MessageType (class in discord)

mfa_enabled (discord.ClientUser attribute)

mfa_level (discord.AuditLogDiff attribute)

mfa_level (discord.Guild attribute)

mfa_sms (discord.UserFlags attribute)

MFALevel (class in discord)

min_length (discord.app_commands.Argument attribute)

min_length (discord.TextInput attribute)

min_length (discord.ui.TextInput property)

min_value (discord.app_commands.Argument attribute)

min_value (discord.app_commands.Parameter attribute)

min_value (discord.app_commands.Transformer property)

min_values (discord.SelectMenu attribute)

min_values (discord.ui.ChannelSelect property)

min_values (discord.ui.MentionableSelect property)

min_values (discord.ui.RoleSelect property)

min_values (discord.ui.Select property)

min_values (discord.ui.UserSelect property)

MinimalHelpCommand (class in discord.ext.commands)

minimum (discord.ext.commands.RangeError attribute)

minutes (discord.ext.tasks.Loop property)

MISSING (in module discord.utils)

missing_permissions (discord.app_commands.BotMissingPermissions attribute)

missing_permissions (discord.app_commands.MissingPermissions attribute)

missing_permissions (discord.ext.commands.BotMissingPermissions attribute)

missing_permissions (discord.ext.commands.MissingPermissions attribute)

missing_role (discord.app_commands.MissingRole attribute)

missing_role (discord.ext.commands.BotMissingRole attribute)

missing_role (discord.ext.commands.MissingRole attribute)

missing_roles (discord.app_commands.MissingAnyRole attribute)

missing_roles (discord.ext.commands.BotMissingAnyRole attribute)

missing_roles (discord.ext.commands.MissingAnyRole attribute)

MissingAnyRole, [1]

MissingApplicationID

MissingFlagArgument

MissingPermissions, [1]

MissingRequiredArgument

MissingRequiredAttachment

MissingRequiredFlag

MissingRole, [1]

mobile_status (discord.ClientStatus property)

mobile_status (discord.Member property)

Modal (class in discord.ui)

modal (discord.InteractionResponseType attribute)

modal_interaction (discord.MessageInteractionMetadata attribute)

modal_submit (discord.InteractionType attribute)

moderate_members (discord.Permissions attribute)

moderated (discord.ForumTag attribute)

moderation (discord.Intents attribute)

moderators (discord.StageChannel property)

move() (discord.abc.GuildChannel method)

move() (discord.CategoryChannel method)

move() (discord.ForumChannel method)

move() (discord.Role method)

move() (discord.StageChannel method)

move() (discord.TextChannel method)

move() (discord.VoiceChannel method)

move_members (discord.Permissions attribute)

move_to() (discord.Member method)

move_to() (discord.VoiceClient method)

multiple (discord.Poll attribute)

mute (discord.AuditLogDiff attribute)

mute (discord.VoiceState attribute)

mute_members (discord.Permissions attribute)

muted (discord.WidgetMember attribute)

mutual_guilds (discord.ClientUser property)

mutual_guilds (discord.Member property)

mutual_guilds (discord.User property)

N

name (discord.abc.GuildChannel attribute)

name (discord.abc.User attribute)

name (discord.Activity attribute)

name (discord.app_commands.AppCommand attribute)

name (discord.app_commands.AppCommandChannel attribute)

name (discord.app_commands.AppCommandGroup attribute)

name (discord.app_commands.AppCommandThread attribute)

name (discord.app_commands.Argument attribute)

name (discord.app_commands.Command attribute)

name (discord.app_commands.CommandAlreadyRegistered attribute)

name (discord.app_commands.CommandNotFound attribute)

name (discord.app_commands.ContextMenu attribute)

name (discord.app_commands.Group attribute)

name (discord.app_commands.Parameter attribute)

name (discord.AppInfo attribute)

name (discord.AuditLogDiff attribute)

name (discord.AutoModRule attribute)

name (discord.BotIntegration attribute)

name (discord.CategoryChannel attribute)

name (discord.ClientUser attribute)

name (discord.CustomActivity attribute)

name (discord.Emoji attribute)

name (discord.ext.commands.CogMeta attribute)

name (discord.ext.commands.Command attribute)

name (discord.ext.commands.CommandRegistrationError attribute)

name (discord.ext.commands.ExtensionError attribute)

name (discord.ext.commands.ExtensionFailed attribute)

name (discord.ext.commands.ExtensionNotFound attribute)

name (discord.ext.commands.Flag attribute)

name (discord.ext.commands.Parameter property)

name (discord.ForumChannel attribute)

name (discord.ForumTag attribute)

name (discord.Game attribute)

name (discord.GroupChannel attribute)

name (discord.Guild attribute)

name (discord.GuildPreview attribute)

name (discord.GuildSticker attribute)

name (discord.Integration attribute)

name (discord.IntegrationAccount attribute)

name (discord.IntegrationApplication attribute)

name (discord.Member property)

name (discord.MessageApplication attribute)

name (discord.MessageInteraction attribute)

name (discord.PartialAppInfo attribute)

name (discord.PartialEmoji attribute)

name (discord.PartialIntegration attribute)

name (discord.PartialInviteChannel attribute)

name (discord.PartialInviteGuild attribute)

name (discord.PartialWebhookChannel attribute)

name (discord.PartialWebhookGuild attribute)

name (discord.Role attribute)

name (discord.ScheduledEvent attribute)

name (discord.SKU attribute)

name (discord.SoundboardDefaultSound attribute)

name (discord.SoundboardSound attribute)

name (discord.Spotify property)

name (discord.StageChannel attribute)

name (discord.StandardSticker attribute)

name (discord.Sticker attribute)

name (discord.StickerItem attribute)

name (discord.StickerPack attribute)

name (discord.Streaming attribute)

name (discord.StreamIntegration attribute)

name (discord.SyncWebhook attribute)

name (discord.Team attribute)

name (discord.TeamMember attribute)

name (discord.Template attribute)

name (discord.TextChannel attribute)

name (discord.Thread attribute)

name (discord.User attribute)

name (discord.VoiceChannel attribute)

name (discord.Webhook attribute)

name (discord.Widget attribute)

name (discord.WidgetChannel attribute)

name (discord.WidgetMember attribute)

name_localizations (discord.app_commands.AppCommand attribute)

name_localizations (discord.app_commands.AppCommandGroup attribute)

name_localizations (discord.app_commands.Argument attribute)

Namespace (class in discord.app_commands)

namespace (discord.Interaction attribute)

new_member (discord.MessageType attribute)

news (discord.ChannelType attribute)

news_thread (discord.ChannelType attribute)

next_iteration (discord.ext.tasks.Loop property)

nick (discord.AuditLogDiff attribute)

nick (discord.Member attribute)

nick (discord.WidgetMember attribute)

no_category (discord.ext.commands.DefaultHelpCommand attribute)

no_category (discord.ext.commands.MinimalHelpCommand attribute)

no_role (discord.ContentFilter attribute)

NoEntryPointError

nonce (discord.Message attribute)

none (discord.VerificationLevel attribute)

none() (discord.AllowedMentions class method)

none() (discord.Intents class method)

none() (discord.MemberCacheFlags class method)

none() (discord.Permissions class method)

NoPrivateMessage, [1]

normal (discord.ReactionType attribute)

normal_count (discord.Reaction attribute)

norwegian (discord.Locale attribute)

not_set (discord.ForumLayoutType attribute)

NotFound

NotificationLevel (class in discord)

NotOwner

nsfw (discord.app_commands.AppCommand attribute)

nsfw (discord.app_commands.Command attribute)

nsfw (discord.app_commands.ContextMenu attribute)

nsfw (discord.app_commands.Group attribute)

nsfw (discord.AuditLogDiff attribute)

nsfw (discord.CategoryChannel attribute)

nsfw (discord.ForumChannel attribute)

nsfw (discord.StageChannel attribute)

nsfw (discord.TextChannel attribute)

nsfw (discord.VoiceChannel attribute)

nsfw_level (discord.Guild attribute)

nsfw_level (discord.PartialInviteGuild attribute)

NSFWChannelRequired

NSFWLevel (class in discord)

number (discord.AppCommandOptionType attribute)

number (discord.ext.commands.MaxConcurrencyReached attribute)

O

oauth2_install_params (discord.IntegrationTypeConfig attribute)

oauth_url() (in module discord.utils)

Object (class in discord)

ObjectConverter (class in discord.ext.commands)

offline (discord.Status attribute)

og_blurple() (discord.Colour class method)

on_app_command_completion() (in module discord)

on_audit_log_entry_create() (in module discord)

on_automod_action() (in module discord)

on_automod_rule_create() (in module discord)

on_automod_rule_delete() (in module discord)

on_automod_rule_update() (in module discord)

on_bulk_message_delete() (in module discord)

on_command_error() (discord.ext.commands.Bot method)

on_connect() (in module discord)

on_disconnect() (in module discord)

on_entitlement_create() (in module discord)

on_entitlement_delete() (in module discord)

on_entitlement_update() (in module discord)

on_error() (discord.app_commands.CommandTree method)

on_error() (discord.app_commands.Group method)

on_error() (discord.Client method)

on_error() (discord.ext.commands.Bot method)

on_error() (discord.ui.Modal method)

on_error() (discord.ui.View method)

on_error() (in module discord)

on_guild_available() (in module discord)

on_guild_channel_create() (in module discord)

on_guild_channel_delete() (in module discord)

on_guild_channel_pins_update() (in module discord)

on_guild_channel_update() (in module discord)

on_guild_emojis_update() (in module discord)

on_guild_integrations_update() (in module discord)

on_guild_join() (in module discord)

on_guild_remove() (in module discord)

on_guild_role_create() (in module discord)

on_guild_role_delete() (in module discord)

on_guild_role_update() (in module discord)

on_guild_stickers_update() (in module discord)

on_guild_unavailable() (in module discord)

on_guild_update() (in module discord)

on_help_command_error() (discord.ext.commands.HelpCommand method)

on_integration_create() (in module discord)

on_integration_update() (in module discord)

on_interaction() (in module discord)

on_invite_create() (in module discord)

on_invite_delete() (in module discord)

on_member_ban() (in module discord)

on_member_join() (in module discord)

on_member_remove() (in module discord)

on_member_unban() (in module discord)

on_member_update() (in module discord)

on_message() (in module discord)

on_message_delete() (in module discord)

on_message_edit() (in module discord)

on_poll_vote_add() (in module discord)

on_poll_vote_remove() (in module discord)

on_presence_update() (in module discord)

on_private_channel_pins_update() (in module discord)

on_private_channel_update() (in module discord)

on_raw_app_command_permissions_update() (in module discord)

on_raw_bulk_message_delete() (in module discord)

on_raw_integration_delete() (in module discord)

on_raw_member_remove() (in module discord)

on_raw_message_delete() (in module discord)

on_raw_message_edit() (in module discord)

on_raw_poll_vote_add() (in module discord)

on_raw_poll_vote_remove() (in module discord)

on_raw_presence_update() (in module discord)

on_raw_reaction_add() (in module discord)

on_raw_reaction_clear() (in module discord)

on_raw_reaction_clear_emoji() (in module discord)

on_raw_reaction_remove() (in module discord)

on_raw_thread_delete() (in module discord)

on_raw_thread_member_remove() (in module discord)

on_raw_thread_update() (in module discord)

on_raw_typing() (in module discord)

on_reaction_add() (in module discord)

on_reaction_clear() (in module discord)

on_reaction_clear_emoji() (in module discord)

on_reaction_remove() (in module discord)

on_ready() (in module discord)

on_resumed() (in module discord)

on_scheduled_event_create() (in module discord)

on_scheduled_event_delete() (in module discord)

on_scheduled_event_update() (in module discord)

on_scheduled_event_user_add() (in module discord)

on_scheduled_event_user_remove() (in module discord)

on_shard_connect() (in module discord)

on_shard_disconnect() (in module discord)

on_shard_ready() (in module discord)

on_shard_resumed() (in module discord)

on_socket_event_type() (in module discord)

on_socket_raw_receive() (in module discord)

on_socket_raw_send() (in module discord)

on_soundboard_sound_create() (in module discord)

on_soundboard_sound_delete() (in module discord)

on_soundboard_sound_update() (in module discord)

on_stage_instance_create() (in module discord)

on_stage_instance_delete() (in module discord)

on_stage_instance_update() (in module discord)

on_submit() (discord.ui.Modal method)

on_subscription_create() (in module discord)

on_subscription_delete() (in module discord)

on_subscription_update() (in module discord)

on_thread_create() (in module discord)

on_thread_delete() (in module discord)

on_thread_join() (in module discord)

on_thread_member_join() (in module discord)

on_thread_member_remove() (in module discord)

on_thread_remove() (in module discord)

on_thread_update() (in module discord)

on_timeout() (discord.ui.Modal method)

on_timeout() (discord.ui.View method)

on_typing() (in module discord)

on_user_update() (in module discord)

on_voice_channel_effect() (in module discord)

on_voice_server_update() (discord.VoiceProtocol method)

on_voice_state_update() (discord.VoiceProtocol method)

on_voice_state_update() (in module discord)

on_webhooks_update() (in module discord)

online (discord.Status attribute)

only_mentions (discord.NotificationLevel attribute)

options (discord.app_commands.AppCommand attribute)

options (discord.app_commands.AppCommandGroup attribute)

options (discord.SelectMenu attribute)

options (discord.ui.Select property)

OpusError

OpusNotLoaded

orange (discord.DefaultAvatar attribute)

orange() (discord.Colour class method)

original (discord.app_commands.CommandInvokeError attribute)

original (discord.ext.commands.BadFlagArgument attribute)

original (discord.ext.commands.CommandInvokeError attribute)

original (discord.ext.commands.ConversionError attribute)

original (discord.ext.commands.ExtensionFailed attribute)

original (discord.ext.commands.HybridCommandError attribute)

original_response() (discord.Interaction method)

original_response_message (discord.MessageInteractionMetadata property)

original_response_message_id (discord.MessageInteractionMetadata attribute)

other (discord.app_commands.TranslationContextLocation attribute)

override (discord.ext.commands.Flag attribute)

overwrite_create (discord.AuditLogAction attribute)

overwrite_delete (discord.AuditLogAction attribute)

overwrite_update (discord.AuditLogAction attribute)

overwrites (discord.abc.GuildChannel property)

overwrites (discord.AuditLogDiff attribute)

overwrites (discord.CategoryChannel property)

overwrites (discord.ForumChannel property)

overwrites (discord.StageChannel property)

overwrites (discord.TextChannel property)

overwrites (discord.VoiceChannel property)

overwrites_for() (discord.abc.GuildChannel method)

overwrites_for() (discord.CategoryChannel method)

overwrites_for() (discord.ForumChannel method)

overwrites_for() (discord.StageChannel method)

overwrites_for() (discord.TextChannel method)

overwrites_for() (discord.VoiceChannel method)

owner (discord.AppInfo attribute)

owner (discord.AuditLogDiff attribute)

owner (discord.GroupChannel attribute)

owner (discord.Guild property)

owner (discord.Team property)

owner (discord.Thread property)

owner_id (discord.ext.commands.Bot attribute)

owner_id (discord.GroupChannel attribute)

owner_id (discord.Guild attribute)

owner_id (discord.Team attribute)

owner_id (discord.Thread attribute)

owner_ids (discord.ext.commands.Bot attribute)

P

pack() (discord.StandardSticker method)

pack_id (discord.StandardSticker attribute)

pages (discord.ext.commands.Paginator property)

Paginator (class in discord.ext.commands)

paginator (discord.ext.commands.DefaultHelpCommand attribute)

paginator (discord.ext.commands.MinimalHelpCommand attribute)

pair() (discord.PermissionOverwrite method)

paragraph (discord.TextStyle attribute)

param (discord.ext.commands.BadLiteralArgument attribute)

param (discord.ext.commands.BadUnionArgument attribute)

param (discord.ext.commands.MissingRequiredArgument attribute)

param (discord.ext.commands.MissingRequiredAttachment attribute)

param() (in module discord.ext.commands)

Parameter (class in discord.app_commands)

Parameter (class in discord.ext.commands)

parameter() (in module discord.ext.commands)

parameter_description (discord.app_commands.TranslationContextLocation attribute)

parameter_name (discord.app_commands.TranslationContextLocation attribute)

parameters (discord.app_commands.Command property)

parent (discord.app_commands.AppCommandGroup attribute)

parent (discord.app_commands.AppCommandThread property)

parent (discord.app_commands.Argument attribute)

parent (discord.app_commands.Command attribute)

parent (discord.app_commands.Group attribute)

parent (discord.ext.commands.Command attribute)

parent (discord.Thread property)

parent_id (discord.app_commands.AppCommandThread attribute)

parent_id (discord.RawThreadDeleteEvent attribute)

parent_id (discord.RawThreadUpdateEvent attribute)

parent_id (discord.Thread attribute)

parents (discord.app_commands.CommandNotFound attribute)

parents (discord.ext.commands.Command property)

parents (discord.ext.commands.Group property)

parents (discord.ext.commands.HybridGroup property)

partial() (discord.SyncWebhook class method)

partial() (discord.Webhook class method)

PartialAppInfo (class in discord)

PartialEmoji (class in discord)

PartialEmojiConversionFailure

PartialEmojiConverter (class in discord.ext.commands)

PartialIntegration (class in discord)

PartialInviteChannel (class in discord)

PartialInviteGuild (class in discord)

PartialMessage (class in discord)

PartialMessageable (class in discord)

PartialMessageConverter (class in discord.ext.commands)

PartialWebhookChannel (class in discord)

PartialWebhookGuild (class in discord)

participants (discord.CallMessage attribute)

partner (discord.PublicUserFlags attribute)

partner (discord.UserFlags attribute)

party (discord.Activity attribute)

party_id (discord.Spotify property)

pause() (discord.VoiceClient method)

PCMAudio (class in discord)

PCMVolumeTransformer (class in discord)

pending (discord.Member attribute)

per (discord.app_commands.Cooldown attribute)

per (discord.ext.commands.MaxConcurrencyReached attribute)

permission (discord.app_commands.AppCommandPermissions attribute)

PermissionOverwrite (class in discord)

Permissions (class in discord)

permissions (discord.app_commands.AppCommandChannel attribute)

permissions (discord.app_commands.AppCommandThread attribute)

permissions (discord.app_commands.GuildAppCommandPermissions attribute)

permissions (discord.AppInstallParams attribute)

permissions (discord.AuditLogDiff attribute)

permissions (discord.ext.commands.Context attribute)

permissions (discord.Interaction property)

permissions (discord.RawAppCommandPermissionsUpdateEvent attribute)

permissions (discord.Role property)

permissions_for() (discord.abc.GuildChannel method)

permissions_for() (discord.CategoryChannel method)

permissions_for() (discord.DMChannel method)

permissions_for() (discord.ForumChannel method)

permissions_for() (discord.GroupChannel method)

permissions_for() (discord.PartialMessageable method)

permissions_for() (discord.StageChannel method)

permissions_for() (discord.TextChannel method)

permissions_for() (discord.Thread method)

permissions_for() (discord.VoiceChannel method)

permissions_synced (discord.abc.GuildChannel property)

permissions_synced (discord.CategoryChannel property)

permissions_synced (discord.ForumChannel property)

permissions_synced (discord.StageChannel property)

permissions_synced (discord.TextChannel property)

permissions_synced (discord.VoiceChannel property)

persistent_views (discord.Client property)

persistent_views (discord.ext.commands.Bot property)

pin() (discord.InteractionMessage method)

pin() (discord.Message method)

pin() (discord.PartialMessage method)

pin() (discord.WebhookMessage method)

ping (discord.InteractionType attribute)

pink (discord.DefaultAvatar attribute)

pink() (discord.Colour class method)

pinned (discord.ChannelFlags attribute)

pinned (discord.Message attribute)

pins() (discord.abc.Messageable method)

pins() (discord.DMChannel method)

pins() (discord.ext.commands.Context method)

pins() (discord.GroupChannel method)

pins() (discord.Member method)

pins() (discord.PartialMessageable method)

pins() (discord.StageChannel method)

pins() (discord.TextChannel method)

pins() (discord.Thread method)

pins() (discord.User method)

pins() (discord.VoiceChannel method)

pins_add (discord.MessageType attribute)

placeholder (discord.SelectMenu attribute)

placeholder (discord.TextInput attribute)

placeholder (discord.ui.ChannelSelect property)

placeholder (discord.ui.MentionableSelect property)

placeholder (discord.ui.RoleSelect property)

placeholder (discord.ui.Select property)

placeholder (discord.ui.TextInput property)

placeholder (discord.ui.UserSelect property)

platform (discord.Activity attribute)

platform (discord.Game attribute)

platform (discord.Streaming attribute)

play() (discord.VoiceClient method)

playing (discord.ActivityType attribute)

png (discord.StickerFormatType attribute)

polish (discord.Locale attribute)

Poll (class in discord)

poll (discord.Message attribute)

poll (discord.PollAnswer property)

poll_result (discord.MessageType attribute)

PollAnswer (class in discord)

PollLayoutType (class in discord)

PollMedia (class in discord)

polls (discord.Intents attribute)

pong (discord.InteractionResponseType attribute)

pong() (discord.InteractionResponse method)

position (discord.abc.GuildChannel attribute)

position (discord.AuditLogDiff attribute)

position (discord.CategoryChannel attribute)

position (discord.ForumChannel attribute)

position (discord.Message attribute)

position (discord.Role attribute)

position (discord.StageChannel attribute)

position (discord.TextChannel attribute)

position (discord.VoiceChannel attribute)

position (discord.WidgetChannel attribute)

positional (discord.ext.commands.Flag attribute)

preferred_locale (discord.AuditLogDiff attribute)

preferred_locale (discord.Guild attribute)

prefix (discord.ext.commands.Context attribute)

prefix (discord.ext.commands.Paginator attribute)

premium (discord.ButtonStyle attribute)

premium (discord.VoiceChannelEffectAnimationType attribute)

premium_guild_subscription (discord.MessageType attribute)

premium_guild_tier_1 (discord.MessageType attribute)

premium_guild_tier_2 (discord.MessageType attribute)

premium_guild_tier_3 (discord.MessageType attribute)

premium_progress_bar_enabled (discord.AuditLogDiff attribute)

premium_progress_bar_enabled (discord.Guild attribute)

premium_promo_dismissed (discord.UserFlags attribute)

premium_purchase (discord.EntitlementType attribute)

premium_since (discord.Member attribute)

premium_subscriber_role (discord.Guild property)

premium_subscribers (discord.Guild property)

premium_subscription (discord.EntitlementType attribute)

premium_subscription_count (discord.Guild attribute)

premium_subscription_count (discord.PartialInviteGuild attribute)

premium_subscriptions (discord.SystemChannelFlags attribute)

premium_tier (discord.Guild attribute)

prepare_help_command() (discord.ext.commands.HelpCommand method)

presence_count (discord.Widget attribute)

presences (discord.Intents attribute)

presets (discord.AutoModTrigger attribute)

primary (discord.ButtonStyle attribute)

primary_sku_id (discord.AppInfo attribute)

priority_speaker (discord.Permissions attribute)

privacy_level (discord.AuditLogDiff attribute)

privacy_level (discord.ScheduledEvent attribute)

privacy_level (discord.StageInstance attribute)

privacy_policy_url (discord.AppInfo attribute)

privacy_policy_url (discord.PartialAppInfo attribute)

PrivacyLevel (class in discord)

private (discord.ChannelType attribute)

private_channel (discord.app_commands.AppCommandContext property)

private_channel_only() (in module discord.app_commands)

private_channels (discord.Client property)

private_channels (discord.ext.commands.Bot property)

private_thread (discord.ChannelType attribute)

PrivateChannel (class in discord.abc)

PrivateMessageOnly

PrivilegedIntentsRequired

probe() (discord.FFmpegOpusAudio class method)

process_commands() (discord.ext.commands.Bot method)

product_name (discord.GuildProductPurchase attribute)

profanity (discord.AutoModPresets attribute)

provider (discord.Embed property)

proxy_url (discord.Attachment attribute)

prune_delete_days (discord.AuditLogDiff attribute)

prune_members() (discord.Guild method)

public_flags (discord.ClientUser property)

public_flags (discord.Member property)

public_flags (discord.TeamMember property)

public_flags (discord.User property)

public_flags (discord.WidgetMember property)

public_thread (discord.ChannelType attribute)

public_updates_channel (discord.AuditLogDiff attribute)

public_updates_channel (discord.Guild property)

PublicUserFlags (class in discord)

publish() (discord.InteractionMessage method)

publish() (discord.Message method)

publish() (discord.PartialMessage method)

publish() (discord.WebhookMessage method)

purchase (discord.EntitlementType attribute)

purchase_notification (discord.Message attribute)

purchase_notification (discord.MessageType attribute)

PurchaseNotification (class in discord)

purge() (discord.StageChannel method)

purge() (discord.TextChannel method)

purge() (discord.Thread method)

purge() (discord.VoiceChannel method)

purple() (discord.Colour class method)

    Python Enhancement Proposals


PEP 3107

PEP 440

PEP 526, [1]

Q

qualified_name (discord.app_commands.AppCommandGroup property)

qualified_name (discord.app_commands.Command property)

qualified_name (discord.app_commands.ContextMenu property)

qualified_name (discord.app_commands.Group property)

qualified_name (discord.ext.commands.Cog property)

qualified_name (discord.ext.commands.Command property)

qualified_name (discord.ext.commands.Group property)

qualified_name (discord.ext.commands.HybridGroup property)

query_members() (discord.Guild method)

question (discord.Poll property)

quote (discord.ext.commands.UnexpectedQuoteError attribute)

R

r (discord.Colour property)

raid_detected_at (discord.Guild property)

random() (discord.Colour class method)

Range (class in discord.app_commands)

Range (class in discord.ext.commands)

RangeError

rate (discord.app_commands.Cooldown attribute)

RateLimited

raw_channel_mentions (discord.InteractionMessage attribute)

raw_channel_mentions (discord.Message attribute)

raw_channel_mentions (discord.MessageSnapshot attribute)

raw_channel_mentions (discord.WebhookMessage attribute)

raw_mentions (discord.InteractionMessage attribute)

raw_mentions (discord.Message attribute)

raw_mentions (discord.MessageSnapshot attribute)

raw_mentions (discord.WebhookMessage attribute)

raw_role_mentions (discord.InteractionMessage attribute)

raw_role_mentions (discord.Message attribute)

raw_role_mentions (discord.MessageSnapshot attribute)

raw_role_mentions (discord.WebhookMessage attribute)

raw_status (discord.ClientStatus property)

raw_status (discord.Member property)

RawAppCommandPermissionsUpdateEvent (class in discord)

RawBulkMessageDeleteEvent (class in discord)

RawIntegrationDeleteEvent (class in discord)

RawMemberRemoveEvent (class in discord)

RawMessageDeleteEvent (class in discord)

RawMessageUpdateEvent (class in discord)

RawPollVoteActionEvent (class in discord)

RawPresenceUpdateEvent (class in discord)

RawReactionActionEvent (class in discord)

RawReactionClearEmojiEvent (class in discord)

RawReactionClearEvent (class in discord)

RawThreadDeleteEvent (class in discord)

RawThreadMembersUpdate (class in discord)

RawThreadUpdateEvent (class in discord)

RawTypingEvent (class in discord)

Reaction (class in discord)

reactions (discord.Intents attribute)

reactions (discord.Message attribute)

ReactionType (class in discord)

read() (discord.Asset method)

read() (discord.Attachment method)

read() (discord.AudioSource method)

read() (discord.Emoji method)

read() (discord.FFmpegOpusAudio method)

read() (discord.FFmpegPCMAudio method)

read() (discord.PartialEmoji method)

read() (discord.PCMAudio method)

read() (discord.PCMVolumeTransformer method)

read() (discord.VoiceChannelSoundEffect method)

read_message_history (discord.Permissions attribute)

read_messages (discord.Permissions attribute)

read_only (discord.TeamMemberRole attribute)

reason (discord.AuditLogEntry attribute)

reason (discord.BanEntry attribute)

reason (discord.ConnectionClosed attribute)

recipient (discord.DMChannel attribute)

recipient_add (discord.MessageType attribute)

recipient_remove (discord.MessageType attribute)

recipients (discord.DMChannel attribute)

recipients (discord.GroupChannel attribute)

reconnect() (discord.ShardInfo method)

red (discord.ButtonStyle attribute)

red (discord.DefaultAvatar attribute)

red() (discord.Colour class method)

redirect_uris (discord.AppInfo attribute)

redirect_uris (discord.PartialAppInfo attribute)

reference (discord.Message attribute)

regex_patterns (discord.AutoModTrigger attribute)

reinvoke() (discord.ext.commands.Context method)

reload_extension() (discord.ext.commands.Bot method)

remaining (discord.SessionStartLimits attribute)

remix (discord.AttachmentFlags attribute)

remove() (discord.Reaction method)

remove_attachments() (discord.InteractionMessage method)

remove_attachments() (discord.Message method)

remove_attachments() (discord.SyncWebhookMessage method)

remove_attachments() (discord.WebhookMessage method)

remove_author() (discord.Embed method)

remove_check() (discord.app_commands.Command method)

remove_check() (discord.app_commands.ContextMenu method)

remove_check() (discord.ext.commands.Bot method)

remove_check() (discord.ext.commands.Command method)

remove_check() (discord.ext.commands.Group method)

remove_check() (discord.ext.commands.HelpCommand method)

remove_check() (discord.ext.commands.HybridGroup method)

remove_cog() (discord.ext.commands.Bot method)

remove_command() (discord.app_commands.CommandTree method)

remove_command() (discord.app_commands.Group method)

remove_command() (discord.ext.commands.Bot method)

remove_command() (discord.ext.commands.Group method)

remove_command() (discord.ext.commands.GroupMixin method)

remove_command() (discord.ext.commands.HybridGroup method)

remove_dynamic_items() (discord.Client method)

remove_dynamic_items() (discord.ext.commands.Bot method)

remove_exception_type() (discord.ext.tasks.Loop method)

remove_field() (discord.Embed method)

remove_footer() (discord.Embed method)

remove_item() (discord.ui.Modal method)

remove_item() (discord.ui.View method)

remove_listener() (discord.ext.commands.Bot method)

remove_markdown (discord.ext.commands.clean_content attribute)

remove_markdown() (in module discord.utils)

remove_mentions() (discord.ext.commands.HelpCommand method)

remove_reaction() (discord.InteractionMessage method)

remove_reaction() (discord.Message method)

remove_reaction() (discord.PartialMessage method)

remove_reaction() (discord.WebhookMessage method)

remove_role (discord.ExpireBehaviour attribute)

remove_roles() (discord.Member method)

remove_tags() (discord.Thread method)

remove_user() (discord.Thread method)

rename() (in module discord.app_commands)

renewal_sku_ids (discord.Subscription attribute)

replace() (discord.Asset method)

replace() (discord.ext.commands.Parameter method)

replied_user (discord.AllowedMentions attribute)

reply (discord.MessageReferenceType attribute)

reply (discord.MessageType attribute)

reply() (discord.ext.commands.Context method)

reply() (discord.InteractionMessage method)

reply() (discord.Message method)

reply() (discord.PartialMessage method)

reply() (discord.WebhookMessage method)

request_to_speak (discord.Permissions attribute)

request_to_speak() (discord.Member method)

requested_to_speak_at (discord.VoiceState attribute)

requesting_to_speak (discord.StageChannel property)

require_2fa (discord.MFALevel attribute)

require_colons (discord.Emoji attribute)

require_tag (discord.ChannelFlags attribute)

require_var_positional (discord.ext.commands.Command attribute)

required (discord.app_commands.Argument attribute)

required (discord.app_commands.Parameter attribute)

required (discord.ext.commands.Flag property)

required (discord.ext.commands.Parameter property)

required (discord.TextInput attribute)

required (discord.ui.TextInput property)

reset() (discord.app_commands.Cooldown method)

reset_after (discord.SessionStartLimits attribute)

reset_cooldown() (discord.ext.commands.Command method)

reset_cooldown() (discord.ext.commands.Group method)

reset_cooldown() (discord.ext.commands.HybridGroup method)

resolve() (discord.app_commands.AppCommandChannel method)

resolve() (discord.app_commands.AppCommandThread method)

resolve_invite() (in module discord.utils)

resolve_template() (in module discord.utils)

resolved (discord.MessageReference attribute)

resolved_permissions (discord.Member property)

ResolvedInvite (class in discord)

resource (discord.InteractionCallbackResponse attribute)

response (discord.HTTPException attribute)

response (discord.Interaction attribute)

rest_is_raw (discord.ext.commands.Command attribute)

restart() (discord.ext.tasks.Loop method)

resume() (discord.VoiceClient method)

retry_after (discord.app_commands.CommandOnCooldown attribute)

retry_after (discord.ext.commands.CommandOnCooldown attribute)

retry_after (discord.RateLimited attribute)

revoked (discord.Invite attribute)

Role (class in discord)

role (discord.AppCommandOptionType attribute)

role (discord.AppCommandPermissionType attribute)

role (discord.ext.commands.BucketType attribute)

role (discord.SelectDefaultValueType attribute)

role (discord.StreamIntegration property)

role (discord.TeamMember attribute)

role_connections_verification_url (discord.AppInfo attribute)

role_connections_verification_url (discord.PartialAppInfo attribute)

role_create (discord.AuditLogAction attribute)

role_delete (discord.AuditLogAction attribute)

role_mentions (discord.Message attribute)

role_select (discord.ComponentType attribute)

role_subscription (discord.Message attribute)

role_subscription_listing_id (discord.RoleSubscriptionInfo attribute)

role_subscription_purchase (discord.MessageType attribute)

role_subscription_purchase_notification_replies (discord.SystemChannelFlags attribute)

role_subscription_purchase_notifications (discord.SystemChannelFlags attribute)

role_update (discord.AuditLogAction attribute)

RoleConverter (class in discord.ext.commands)

RoleFlags (class in discord)

RoleNotFound

roles (discord.AllowedMentions attribute)

roles (discord.AuditLogDiff attribute)

roles (discord.Emoji property)

roles (discord.Guild property)

roles (discord.Member property)

RoleSelect (class in discord.ui)

RoleSubscriptionInfo (class in discord)

RoleTags (class in discord)

romanian (discord.Locale attribute)

root_parent (discord.app_commands.Command property)

root_parent (discord.app_commands.Group property)

root_parent (discord.ext.commands.Command property)

root_parent (discord.ext.commands.Group property)

root_parent (discord.ext.commands.HybridGroup property)

rpc_origins (discord.AppInfo attribute)

rpc_origins (discord.PartialAppInfo attribute)

rtc_region (discord.AuditLogDiff attribute)

rtc_region (discord.StageChannel attribute)

rtc_region (discord.VoiceChannel attribute)

rule_id (discord.AutoModAction attribute)

rule_trigger_type (discord.AutoModAction attribute)

rules_channel (discord.AuditLogDiff attribute)

rules_channel (discord.Guild property)

run() (discord.Client method)

run() (discord.ext.commands.Bot method)

run_converters() (in module discord.ext.commands)

russian (discord.Locale attribute)

S

safe (discord.NSFWLevel attribute)

safety_alerts_channel (discord.Guild property)

save() (discord.Asset method)

save() (discord.Attachment method)

save() (discord.Emoji method)

save() (discord.PartialEmoji method)

save() (discord.VoiceChannelSoundEffect method)

scheduled (discord.EventStatus attribute)

scheduled_event (discord.Invite attribute)

scheduled_event (discord.StageInstance attribute)

scheduled_event_create (discord.AuditLogAction attribute)

scheduled_event_delete (discord.AuditLogAction attribute)

scheduled_event_id (discord.Invite attribute)

scheduled_event_id (discord.StageInstance attribute)

scheduled_event_update (discord.AuditLogAction attribute)

scheduled_events (discord.Guild property)

scheduled_events (discord.StageChannel property)

scheduled_events (discord.VoiceChannel property)

ScheduledEvent (class in discord)

ScheduledEventConverter (class in discord.ext.commands)

ScheduledEventNotFound

scopes (discord.AppInstallParams attribute)

secondary (discord.ButtonStyle attribute)

seconds (discord.ext.tasks.Loop property)

Select (class in discord.ui)

select (discord.ComponentType attribute)

select() (in module discord.ui)

SelectDefaultValue (class in discord)

SelectDefaultValueType (class in discord)

SelectMenu (class in discord)

SelectOption (class in discord)

self_deaf (discord.VoiceState attribute)

self_mute (discord.VoiceState attribute)

self_role (discord.Guild property)

self_stream (discord.VoiceState attribute)

self_video (discord.VoiceState attribute)

self_voted (discord.PollAnswer attribute)

send() (discord.abc.Messageable method)

send() (discord.DMChannel method)

send() (discord.ext.commands.Context method)

send() (discord.GroupChannel method)

send() (discord.Member method)

send() (discord.PartialMessageable method)

send() (discord.StageChannel method)

send() (discord.SyncWebhook method)

send() (discord.TextChannel method)

send() (discord.Thread method)

send() (discord.User method)

send() (discord.VoiceChannel method)

send() (discord.Webhook method)

send_alert_message (discord.AutoModRuleActionType attribute)

send_audio_packet() (discord.VoiceClient method)

send_bot_help() (discord.ext.commands.HelpCommand method)

send_cog_help() (discord.ext.commands.HelpCommand method)

send_command_help() (discord.ext.commands.HelpCommand method)

send_error_message() (discord.ext.commands.HelpCommand method)

send_group_help() (discord.ext.commands.HelpCommand method)

send_help() (discord.ext.commands.Context method)

send_message() (discord.InteractionResponse method)

send_messages (discord.Permissions attribute)

send_messages_in_threads (discord.Permissions attribute)

send_modal() (discord.InteractionResponse method)

send_pages() (discord.ext.commands.DefaultHelpCommand method)

send_pages() (discord.ext.commands.MinimalHelpCommand method)

send_polls (discord.Permissions attribute)

send_sound() (discord.VoiceChannel method)

send_tts_messages (discord.Permissions attribute)

send_voice_messages (discord.Permissions attribute)

session_id (discord.VoiceClient attribute)

SessionStartLimits (class in discord)

set_author() (discord.Embed method)

set_field_at() (discord.Embed method)

set_footer() (discord.Embed method)

set_image() (discord.Embed method)

set_permissions() (discord.abc.GuildChannel method)

set_permissions() (discord.CategoryChannel method)

set_permissions() (discord.ForumChannel method)

set_permissions() (discord.StageChannel method)

set_permissions() (discord.TextChannel method)

set_permissions() (discord.VoiceChannel method)

set_scheduled_event() (discord.Invite method)

set_thumbnail() (discord.Embed method)

set_translator() (discord.app_commands.CommandTree method)

setup_hook() (discord.Client method)

setup_hook() (discord.ext.commands.Bot method)

setup_logging() (in module discord.utils)

sexual_content (discord.AutoModPresets attribute)

shard_connect_timeout (discord.AutoShardedClient attribute)

shard_count (discord.ShardInfo attribute)

shard_id (discord.ConnectionClosed attribute)

shard_id (discord.Guild property)

shard_id (discord.PrivilegedIntentsRequired attribute)

shard_ids (discord.AutoShardedClient attribute)

ShardInfo (class in discord)

shards (discord.AutoShardedClient property)

short (discord.TextStyle attribute)

short_doc (discord.ext.commands.Command property)

short_doc (discord.ext.commands.Group property)

short_doc (discord.ext.commands.HybridGroup property)

shorten_text() (discord.ext.commands.DefaultHelpCommand method)

show_hidden (discord.ext.commands.HelpCommand attribute)

show_parameter_descriptions (discord.ext.commands.DefaultHelpCommand attribute)

signature (discord.ext.commands.Command property)

signature (discord.ext.commands.Group property)

signature (discord.ext.commands.HybridGroup property)

silent (discord.MessageFlags attribute)

size (discord.Attachment attribute)

SKU (class in discord)

sku_id (discord.Button attribute)

sku_id (discord.Entitlement attribute)

sku_id (discord.StickerPack attribute)

sku_id (discord.ui.Button property)

sku_ids (discord.Subscription attribute)

SKUFlags (class in discord)

SKUType (class in discord)

sleep_until() (in module discord.utils)

slowmode_delay (discord.AuditLogDiff attribute)

slowmode_delay (discord.ForumChannel attribute)

slowmode_delay (discord.StageChannel attribute)

slowmode_delay (discord.TextChannel attribute)

slowmode_delay (discord.Thread attribute)

slowmode_delay (discord.VoiceChannel attribute)

slug (discord.AppInfo attribute)

slug (discord.SKU attribute)

slurs (discord.AutoModPresets attribute)

small_image_text (discord.Activity property)

small_image_url (discord.Activity property)

Snowflake (class in discord.abc)

snowflake_time() (in module discord.utils)

sort_commands (discord.ext.commands.DefaultHelpCommand attribute)

sort_commands (discord.ext.commands.MinimalHelpCommand attribute)

sort_value (discord.StandardSticker attribute)

sound (discord.VoiceChannelEffect attribute)

soundboard_sound_create (discord.AuditLogAction attribute)

soundboard_sound_delete (discord.AuditLogAction attribute)

soundboard_sound_update (discord.AuditLogAction attribute)

soundboard_sounds (discord.Client property)

soundboard_sounds (discord.ext.commands.Bot property)

soundboard_sounds (discord.Guild property)

SoundboardDefaultSound (class in discord)

SoundboardSound (class in discord)

SoundboardSoundConverter (class in discord.ext.commands)

SoundboardSoundNotFound

source (discord.VoiceClient property)

source_channel (discord.SyncWebhook attribute)

source_channel (discord.Webhook attribute)

source_guild (discord.SyncWebhook attribute)

source_guild (discord.Template attribute)

source_guild (discord.Webhook attribute)

source_message_deleted (discord.MessageFlags attribute)

spain_spanish (discord.Locale attribute)

spam (discord.AutoModRuleTriggerType attribute)

spammer (discord.PublicUserFlags attribute)

spammer (discord.UserFlags attribute)

speak (discord.Permissions attribute)

speakers (discord.StageChannel property)

splash (discord.AuditLogDiff attribute)

splash (discord.Guild property)

splash (discord.GuildPreview property)

splash (discord.PartialInviteGuild property)

spoiler (discord.AttachmentFlags attribute)

spoiler (discord.File attribute)

Spotify (class in discord)

staff (discord.PublicUserFlags attribute)

staff (discord.UserFlags attribute)

stage() (discord.Permissions class method)

stage_channels (discord.CategoryChannel property)

stage_channels (discord.Guild property)

stage_end (discord.MessageType attribute)

stage_instance (discord.EntityType attribute)

stage_instance_create (discord.AuditLogAction attribute)

stage_instance_delete (discord.AuditLogAction attribute)

stage_instance_update (discord.AuditLogAction attribute)

stage_instances (discord.Guild property)

stage_moderator() (discord.Permissions class method)

stage_raise_hand (discord.MessageType attribute)

stage_speaker (discord.MessageType attribute)

stage_start (discord.MessageType attribute)

stage_topic (discord.MessageType attribute)

stage_voice (discord.ChannelType attribute)

StageChannel (class in discord)

StageChannelConverter (class in discord.ext.commands)

StageInstance (class in discord)

standard (discord.StickerType attribute)

StandardSticker (class in discord)

start (discord.Activity property)

start (discord.Game property)

start (discord.Spotify property)

start() (discord.Client method)

start() (discord.ext.commands.Bot method)

start() (discord.ext.tasks.Loop method)

start() (discord.ScheduledEvent method)

start_time (discord.ScheduledEvent attribute)

started_home_actions (discord.MemberFlags attribute)

started_onboarding (discord.MemberFlags attribute)

starter_message (discord.Thread property)

starts_at (discord.Entitlement attribute)

state (discord.Activity attribute)

Status (class in discord)

status (discord.AuditLogDiff attribute)

status (discord.Client property)

status (discord.ClientStatus property)

status (discord.ext.commands.Bot property)

status (discord.HTTPException attribute)

status (discord.Member property)

status (discord.ScheduledEvent attribute)

status (discord.Subscription attribute)

status (discord.WidgetMember attribute)

Sticker (class in discord)

sticker_create (discord.AuditLogAction attribute)

sticker_delete (discord.AuditLogAction attribute)

sticker_limit (discord.Guild property)

sticker_update (discord.AuditLogAction attribute)

StickerFormatType (class in discord)

StickerItem (class in discord)

StickerPack (class in discord)

stickers (discord.Client property)

stickers (discord.ext.commands.Bot property)

stickers (discord.Guild attribute)

stickers (discord.GuildPreview attribute)

stickers (discord.Message attribute)

stickers (discord.MessageSnapshot attribute)

stickers (discord.StickerPack attribute)

StickerType (class in discord)

stop() (discord.ext.tasks.Loop method)

stop() (discord.ui.Modal method)

stop() (discord.ui.View method)

stop() (discord.VoiceClient method)

stream (discord.InviteTarget attribute)

stream (discord.PCMAudio attribute)

stream (discord.Permissions attribute)

Streaming (class in discord)

streaming (discord.ActivityType attribute)

StreamIntegration (class in discord)

string (discord.app_commands.TranslationError attribute)

string (discord.AppCommandOptionType attribute)

string_select (discord.ComponentType attribute)

strip_after_prefix (discord.ext.commands.Bot attribute)

style (discord.Button attribute)

style (discord.TextInput attribute)

style (discord.ui.Button property)

style (discord.ui.TextInput property)

subcommand (discord.AppCommandOptionType attribute)

subcommand_group (discord.AppCommandOptionType attribute)

subcommand_not_found() (discord.ext.commands.HelpCommand method)

subcommand_passed (discord.ext.commands.Context attribute)

Subscription (class in discord)

subscription (discord.SKUType attribute)

subscription_group (discord.SKUType attribute)

subscription_listing_id (discord.RoleTags attribute)

subscriptions() (discord.SKU method)

SubscriptionStatus (class in discord)

success (discord.ButtonStyle attribute)

suffix (discord.ext.commands.Paginator attribute)

summary (discord.IntegrationApplication attribute)

suppress (discord.VoiceState attribute)

suppress (discord.WidgetMember attribute)

suppress_embeds (discord.MessageFlags attribute)

suppress_notifications (discord.MessageFlags attribute)

swedish (discord.Locale attribute)

sync() (discord.app_commands.CommandTree method)

sync() (discord.StreamIntegration method)

sync() (discord.Template method)

synced_at (discord.StreamIntegration attribute)

syncing (discord.StreamIntegration attribute)

SyncWebhook (class in discord)

SyncWebhookMessage (class in discord)

system (discord.abc.User attribute)

system (discord.ClientUser attribute)

system (discord.Member property)

system (discord.PublicUserFlags attribute)

system (discord.User attribute)

system (discord.UserFlags attribute)

system_channel (discord.AuditLogDiff attribute)

system_channel (discord.Guild property)

system_channel_flags (discord.AuditLogDiff attribute)

system_channel_flags (discord.Guild property)

system_content (discord.InteractionMessage attribute)

system_content (discord.Message attribute)

system_content (discord.WebhookMessage attribute)

SystemChannelFlags (class in discord)

T

tags (discord.AppInfo attribute)

tags (discord.Role attribute)

tags (discord.StandardSticker attribute)

taiwan_chinese (discord.Locale attribute)

target (discord.app_commands.AppCommandPermissions attribute)

target (discord.AuditLogEntry attribute)

target_application (discord.Invite attribute)

target_id (discord.RawAppCommandPermissionsUpdateEvent attribute)

target_message (discord.MessageInteractionMetadata property)

target_message_id (discord.MessageInteractionMetadata attribute)

target_type (discord.Invite attribute)

target_user (discord.Invite attribute)

target_user (discord.MessageInteractionMetadata attribute)

teal() (discord.Colour class method)

Team (class in discord)

team (discord.AppInfo attribute)

team (discord.TeamMember attribute)

team_user (discord.PublicUserFlags attribute)

team_user (discord.UserFlags attribute)

TeamMember (class in discord)

TeamMemberRole (class in discord)

TeamMembershipState (class in discord)

Template (class in discord)

template (discord.ui.DynamicItem property)

templates() (discord.Guild method)

temporary (discord.AuditLogDiff attribute)

temporary (discord.Invite attribute)

terms_of_service_url (discord.AppInfo attribute)

terms_of_service_url (discord.PartialAppInfo attribute)

test_mode_purchase (discord.EntitlementType attribute)

text (discord.ChannelType attribute)

text (discord.HTTPException attribute)

text (discord.PollAnswer property)

text (discord.PollMedia attribute)

text() (discord.Permissions class method)

text_channels (discord.CategoryChannel property)

text_channels (discord.Guild property)

text_input (discord.ComponentType attribute)

TextChannel (class in discord)

TextChannelConverter (class in discord.ext.commands)

TextInput (class in discord)

TextInput (class in discord.ui)

TextStyle (class in discord)

thai (discord.Locale attribute)

Thread (class in discord)

thread (discord.InteractionMessage property)

thread (discord.Message property)

thread (discord.PartialMessage property)

thread (discord.RawThreadDeleteEvent attribute)

thread (discord.RawThreadUpdateEvent attribute)

thread (discord.ThreadMember property)

thread (discord.WebhookMessage property)

thread_create (discord.AuditLogAction attribute)

thread_created (discord.MessageType attribute)

thread_delete (discord.AuditLogAction attribute)

thread_id (discord.RawThreadDeleteEvent attribute)

thread_id (discord.RawThreadMembersUpdate attribute)

thread_id (discord.RawThreadUpdateEvent attribute)

thread_id (discord.ThreadMember attribute)

thread_starter_message (discord.MessageType attribute)

thread_type (discord.RawThreadDeleteEvent attribute)

thread_type (discord.RawThreadUpdateEvent attribute)

thread_update (discord.AuditLogAction attribute)

ThreadConverter (class in discord.ext.commands)

ThreadMember (class in discord)

ThreadNotFound

threads (discord.ForumChannel property)

threads (discord.Guild property)

threads (discord.TextChannel property)

thumbnail (discord.AttachmentFlags attribute)

thumbnail (discord.Embed property)

tier_name (discord.RoleSubscriptionInfo attribute)

time (discord.ext.tasks.Loop property)

time_snowflake() (in module discord.utils)

timed_out_until (discord.AuditLogDiff attribute)

timed_out_until (discord.Member attribute)

timeout (discord.AutoModRuleActionType attribute)

timeout (discord.ui.Modal property)

timeout (discord.ui.View property)

timeout() (discord.Member method)

timestamp (discord.Embed attribute)

timestamp (discord.RawTypingEvent attribute)

timestamps (discord.Activity attribute)

title (discord.Attachment attribute)

title (discord.Embed attribute)

title (discord.Spotify property)

title (discord.ui.Modal attribute)

to_dict() (discord.Embed method)

to_file() (discord.Asset method)

to_file() (discord.Attachment method)

to_file() (discord.Emoji method)

to_file() (discord.PartialEmoji method)

to_file() (discord.VoiceChannelSoundEffect method)

to_reference() (discord.InteractionMessage method)

to_reference() (discord.Message method)

to_reference() (discord.PartialMessage method)

to_reference() (discord.WebhookMessage method)

to_rgb() (discord.Colour method)

token (discord.Interaction attribute)

token (discord.SyncWebhook attribute)

token (discord.VoiceClient attribute)

token (discord.Webhook attribute)

TooManyArguments

TooManyFlags

top_role (discord.Member property)

topic (discord.AuditLogDiff attribute)

topic (discord.ForumChannel attribute)

topic (discord.StageChannel attribute)

topic (discord.StageInstance attribute)

topic (discord.TextChannel attribute)

total (discord.SessionStartLimits attribute)

total_months_subscribed (discord.RoleSubscriptionInfo attribute)

total_votes (discord.Poll property)

track_id (discord.Spotify property)

track_url (discord.Spotify property)

Transform (class in discord.app_commands)

transform() (discord.app_commands.Transformer method)

Transformer (class in discord.app_commands)

transformer (discord.app_commands.TransformerError attribute)

TransformerError

translate() (discord.app_commands.Translator method)

translate() (discord.Interaction method)

TranslationContext (class in discord.app_commands)

TranslationContextLocation (class in discord.app_commands)

TranslationError

Translator (class in discord.app_commands)

translator (discord.app_commands.CommandTree property)

tree (discord.ext.commands.Bot property)

tree_cls (discord.ext.commands.Bot attribute)

trigger (discord.AuditLogDiff attribute)

trigger (discord.AutoModRule attribute)

trigger_type (discord.AuditLogDiff attribute)

tts (discord.Message attribute)

turkish (discord.Locale attribute)

twitch_name (discord.Streaming property)

type (discord.ActionRow property)

type (discord.Activity attribute)

type (discord.app_commands.AppCommand attribute)

type (discord.app_commands.AppCommandChannel attribute)

type (discord.app_commands.AppCommandGroup attribute)

type (discord.app_commands.AppCommandPermissions attribute)

type (discord.app_commands.AppCommandThread attribute)

type (discord.app_commands.Argument attribute)

type (discord.app_commands.CommandLimitReached attribute)

type (discord.app_commands.CommandNotFound attribute)

type (discord.app_commands.ContextMenu attribute)

type (discord.app_commands.Parameter attribute)

type (discord.app_commands.Transformer property)

type (discord.app_commands.TransformerError attribute)

type (discord.AuditLogDiff attribute)

type (discord.AutoModRuleAction attribute)

type (discord.AutoModTrigger attribute)

type (discord.BotIntegration attribute)

type (discord.Button property)

type (discord.CategoryChannel property)

type (discord.Component property)

type (discord.CustomActivity property)

type (discord.DMChannel property)

type (discord.Embed attribute)

type (discord.Entitlement attribute)

type (discord.ext.commands.CommandOnCooldown attribute)

type (discord.ForumChannel property)

type (discord.Game property)

type (discord.GroupChannel property)

type (discord.Integration attribute)

type (discord.Interaction attribute)

type (discord.InteractionCallbackResponse attribute)

type (discord.InteractionResponse property)

type (discord.Invite attribute)

type (discord.Message attribute)

type (discord.MessageInteraction attribute)

type (discord.MessageInteractionMetadata attribute)

type (discord.MessageReference attribute)

type (discord.MessageSnapshot attribute)

type (discord.Object attribute)

type (discord.PartialIntegration attribute)

type (discord.PartialInviteChannel attribute)

type (discord.PartialMessageable attribute)

type (discord.RawReactionActionEvent attribute)

type (discord.SelectDefaultValue property)

type (discord.SelectMenu attribute)

type (discord.SKU attribute)

type (discord.Spotify property)

type (discord.StageChannel property)

type (discord.Streaming property)

type (discord.StreamIntegration attribute)

type (discord.SyncWebhook attribute)

type (discord.TextChannel property)

type (discord.TextInput property)

type (discord.Thread property)

type (discord.ui.ChannelSelect property)

type (discord.ui.MentionableSelect property)

type (discord.ui.RoleSelect property)

type (discord.ui.Select property)

type (discord.ui.UserSelect property)

type (discord.VoiceChannel property)

type (discord.VoiceChannelEffectAnimation attribute)

type (discord.Webhook attribute)

typing (discord.Intents attribute)

typing() (discord.abc.Messageable method)

typing() (discord.DMChannel method)

typing() (discord.ext.commands.Context method)

typing() (discord.GroupChannel method)

typing() (discord.Member method)

typing() (discord.PartialMessageable method)

typing() (discord.StageChannel method)

typing() (discord.TextChannel method)

typing() (discord.Thread method)

typing() (discord.User method)

typing() (discord.VoiceChannel method)

U

ukrainian (discord.Locale attribute)

unavailable (discord.Guild attribute)

unban (discord.AuditLogAction attribute)

unban() (discord.Guild method)

unban() (discord.Member method)

UnexpectedQuoteError

unicode_emoji (discord.AuditLogDiff attribute)

unicode_emoji (discord.Role attribute)

unknown (discord.ActivityType attribute)

unknown (discord.InviteTarget attribute)

unload() (discord.app_commands.Translator method)

unload_extension() (discord.ext.commands.Bot method)

unpin() (discord.InteractionMessage method)

unpin() (discord.Message method)

unpin() (discord.PartialMessage method)

unpin() (discord.WebhookMessage method)

update (discord.AuditLogActionCategory attribute)

update() (discord.ext.commands.Command method)

update() (discord.ext.commands.Group method)

update() (discord.ext.commands.HybridGroup method)

update() (discord.PermissionOverwrite method)

update() (discord.Permissions method)

update_rate_limit() (discord.app_commands.Cooldown method)

updated_at (discord.Template attribute)

urgent (discord.MessageFlags attribute)

url (discord.Activity attribute)

url (discord.Asset property)

url (discord.Attachment attribute)

url (discord.BaseSoundboardSound property)

url (discord.Button attribute)

url (discord.ButtonStyle attribute)

url (discord.Embed attribute)

url (discord.Emoji property)

url (discord.Invite property)

url (discord.PartialEmoji property)

url (discord.ScheduledEvent property)

url (discord.Sticker attribute)

url (discord.StickerItem attribute)

url (discord.Streaming attribute)

url (discord.SyncWebhook property)

url (discord.Template property)

url (discord.ui.Button property)

url (discord.VoiceChannelSoundEffect property)

url (discord.Webhook property)

usage (discord.ext.commands.Command attribute)

use_application_commands (discord.Permissions attribute)

use_embedded_activities (discord.Permissions attribute)

use_external_apps (discord.Permissions attribute)

use_external_emojis (discord.Permissions attribute)

use_external_sounds (discord.Permissions attribute)

use_external_stickers (discord.Permissions attribute)

use_nicknames (discord.ext.commands.clean_content attribute)

use_soundboard (discord.Permissions attribute)

use_voice_activation (discord.Permissions attribute)

User (class in discord)

User (class in discord.abc)

user (discord.app_commands.AppInstallationType property)

user (discord.AppCommandOptionType attribute)

user (discord.AppCommandPermissionType attribute)

user (discord.AppCommandType attribute)

user (discord.AuditLogDiff attribute)

user (discord.AuditLogEntry attribute)

user (discord.BanEntry attribute)

user (discord.BotIntegration attribute)

user (discord.Client property)

user (discord.Emoji attribute)

user (discord.Entitlement property)

user (discord.EntitlementOwnerType attribute)

user (discord.ext.commands.Bot property)

user (discord.ext.commands.BucketType attribute)

user (discord.GuildSticker attribute)

user (discord.Integration attribute)

user (discord.IntegrationApplication attribute)

user (discord.Interaction attribute)

user (discord.MessageInteraction attribute)

user (discord.MessageInteractionMetadata attribute)

user (discord.RawMemberRemoveEvent attribute)

user (discord.RawTypingEvent attribute)

user (discord.SelectDefaultValueType attribute)

user (discord.SoundboardSound property)

user (discord.StreamIntegration attribute)

user (discord.Subscription property)

user (discord.SyncWebhook attribute)

user (discord.VoiceChannelEffect attribute)

user (discord.VoiceClient property)

user (discord.Webhook attribute)

user_count (discord.ScheduledEvent attribute)

user_gift (discord.EntitlementType attribute)

user_id (discord.AuditLogEntry attribute)

user_id (discord.AutoModAction attribute)

user_id (discord.Entitlement attribute)

user_id (discord.RawPollVoteActionEvent attribute)

user_id (discord.RawPresenceUpdateEvent attribute)

user_id (discord.RawReactionActionEvent attribute)

user_id (discord.RawTypingEvent attribute)

user_id (discord.Subscription attribute)

user_install() (in module discord.app_commands)

user_integration_config (discord.AppInfo property)

user_limit (discord.AuditLogDiff attribute)

user_limit (discord.StageChannel attribute)

user_limit (discord.VoiceChannel attribute)

user_select (discord.ComponentType attribute)

user_subscription (discord.SKUFlags attribute)

UserConverter (class in discord.ext.commands)

UserFlags (class in discord)

UserInputError

UserNotFound

users (discord.AllowedMentions attribute)

users (discord.Client property)

users (discord.ext.commands.Bot property)

users() (discord.Reaction method)

users() (discord.ScheduledEvent method)

UserSelect (class in discord.ui)

uses (discord.AuditLogDiff attribute)

uses (discord.Invite attribute)

uses (discord.Template attribute)

utcnow() (in module discord.utils)

V

valid (discord.ext.commands.Context property)

value (discord.app_commands.TransformerError attribute)

value (discord.ApplicationFlags attribute)

value (discord.AttachmentFlags attribute)

value (discord.AutoModPresets attribute)

value (discord.ChannelFlags attribute)

value (discord.Colour attribute)

value (discord.EmbedFlags attribute)

value (discord.ext.commands.RangeError attribute)

value (discord.Intents attribute)

value (discord.MemberCacheFlags attribute)

value (discord.MemberFlags attribute)

value (discord.MessageFlags attribute)

value (discord.Permissions attribute)

value (discord.PublicUserFlags attribute)

value (discord.RoleFlags attribute)

value (discord.SelectOption attribute)

value (discord.SKUFlags attribute)

value (discord.SystemChannelFlags attribute)

value (discord.TextInput attribute)

value (discord.ui.TextInput property)

values (discord.ext.commands.TooManyFlags attribute)

values (discord.ui.ChannelSelect property)

values (discord.ui.MentionableSelect property)

values (discord.ui.RoleSelect property)

values (discord.ui.Select property)

values (discord.ui.UserSelect property)

vanity_invite() (discord.Guild method)

vanity_url (discord.Guild property)

vanity_url (discord.PartialInviteGuild property)

vanity_url_code (discord.AuditLogDiff attribute)

vanity_url_code (discord.Guild attribute)

vanity_url_code (discord.PartialInviteGuild attribute)

verification_level (discord.AuditLogDiff attribute)

verification_level (discord.Guild attribute)

verification_level (discord.PartialInviteGuild attribute)

verification_pending_guild_limit (discord.ApplicationFlags attribute)

VerificationLevel (class in discord)

verified (discord.ClientUser attribute)

verified_bot (discord.PublicUserFlags attribute)

verified_bot (discord.UserFlags attribute)

verified_bot_developer (discord.PublicUserFlags attribute)

verified_bot_developer (discord.UserFlags attribute)

verify_checks (discord.ext.commands.HelpCommand attribute)

verify_key (discord.AppInfo attribute)

verify_key (discord.PartialAppInfo attribute)

version_info (in module discord)

victor (discord.PollAnswer property)

victor_answer (discord.Poll property)

victor_answer_id (discord.Poll property)

video (discord.Embed property)

video_quality_mode (discord.AuditLogDiff attribute)

video_quality_mode (discord.StageChannel attribute)

video_quality_mode (discord.VoiceChannel attribute)

VideoQualityMode (class in discord)

vietnamese (discord.Locale attribute)

View (class in discord.ui)

view (discord.ui.Button property)

view (discord.ui.ChannelSelect property)

view (discord.ui.DynamicItem property)

view (discord.ui.Item property)

view (discord.ui.MentionableSelect property)

view (discord.ui.RoleSelect property)

view (discord.ui.Select property)

view (discord.ui.TextInput property)

view (discord.ui.UserSelect property)

view_audit_log (discord.Permissions attribute)

view_channel (discord.Permissions attribute)

view_creator_monetization_analytics (discord.Permissions attribute)

view_guild_insights (discord.Permissions attribute)

voice (discord.ChannelType attribute)

voice (discord.EntityType attribute)

voice (discord.Member property)

voice (discord.MemberCacheFlags attribute)

voice (discord.MessageFlags attribute)

voice() (discord.Permissions class method)

voice_channels (discord.CategoryChannel property)

voice_channels (discord.Guild property)

voice_client (discord.ext.commands.Context property)

voice_client (discord.Guild property)

voice_clients (discord.Client property)

voice_clients (discord.ext.commands.Bot property)

voice_states (discord.Intents attribute)

voice_states (discord.StageChannel property)

voice_states (discord.VoiceChannel property)

VoiceChannel (class in discord)

VoiceChannelConverter (class in discord.ext.commands)

VoiceChannelEffect (class in discord)

VoiceChannelEffectAnimation (class in discord)

VoiceChannelEffectAnimationType (class in discord)

VoiceChannelSoundEffect (class in discord)

VoiceClient (class in discord)

VoiceProtocol (class in discord)

VoiceState (class in discord)

volume (discord.AuditLogDiff attribute)

volume (discord.BaseSoundboardSound attribute)

volume (discord.PCMVolumeTransformer property)

volume (discord.SoundboardDefaultSound attribute)

volume (discord.SoundboardSound attribute)

volume (discord.VoiceChannelSoundEffect attribute)

vote_count (discord.PollAnswer property)

voters() (discord.PollAnswer method)

W

wait() (discord.ui.Modal method)

wait() (discord.ui.View method)

wait_for() (discord.Client method)

wait_for() (discord.ext.commands.Bot method)

wait_until_ready() (discord.Client method)

wait_until_ready() (discord.ext.commands.Bot method)

walk_app_commands() (discord.ext.commands.Cog method)

walk_commands() (discord.app_commands.CommandTree method)

walk_commands() (discord.app_commands.Group method)

walk_commands() (discord.ext.commands.Bot method)

walk_commands() (discord.ext.commands.Cog method)

walk_commands() (discord.ext.commands.Group method)

walk_commands() (discord.ext.commands.GroupMixin method)

walk_commands() (discord.ext.commands.HybridGroup method)

watching (discord.ActivityType attribute)

waveform (discord.Attachment attribute)

web_status (discord.ClientStatus property)

web_status (discord.Member property)

Webhook (class in discord)

webhook_create (discord.AuditLogAction attribute)

webhook_delete (discord.AuditLogAction attribute)

webhook_id (discord.Message attribute)

webhook_update (discord.AuditLogAction attribute)

WebhookMessage (class in discord)

webhooks (discord.Intents attribute)

webhooks() (discord.ForumChannel method)

webhooks() (discord.Guild method)

webhooks() (discord.StageChannel method)

webhooks() (discord.TextChannel method)

webhooks() (discord.VoiceChannel method)

WebhookType (class in discord)

welcome_channels (discord.WelcomeScreen attribute)

welcome_screen() (discord.Guild method)

WelcomeChannel (class in discord)

WelcomeScreen (class in discord)

when_mentioned() (in module discord.ext.commands)

when_mentioned_or() (in module discord.ext.commands)

Widget (class in discord)

widget() (discord.Guild method)

widget_channel (discord.AuditLogDiff attribute)

widget_channel (discord.Guild property)

widget_enabled (discord.AuditLogDiff attribute)

widget_enabled (discord.Guild attribute)

WidgetChannel (class in discord)

WidgetMember (class in discord)

width (discord.Attachment attribute)

width (discord.ext.commands.DefaultHelpCommand attribute)

with_format() (discord.Asset method)

with_size() (discord.Asset method)

with_static_format() (discord.Asset method)

ws (discord.Client attribute)

Y

yellow() (discord.Colour class method)

        © Copyright 2015-present, Rapptz.
      Created using Sphinx 4.4.0.


close

Settings
Font

Use a serif font:


Theme

          Automatic


          Light


          Dark


arrow_upwardto top

================================================================================
